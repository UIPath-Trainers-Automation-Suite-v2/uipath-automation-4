diff --git a/Lacrosse101_P0/.gitignore b/.gitignore
similarity index 98%
rename from Lacrosse101_P0/.gitignore
rename to .gitignore
index dd604ef..dffb8ee 100644
--- a/Lacrosse101_P0/.gitignore
+++ b/.gitignore
@@ -1,9 +1,8 @@
-# elephantSQL database connection 
+# File that contains sensitive info
 appsettings.json
-# ERD
-p0_ERd.png
-# Created by https://www.toptal.com/developers/gitignore/api/csharp,vscode,visualstudiocode,visualstudio
-# Edit at https://www.toptal.com/developers/gitignore?templates=csharp,vscode,visualstudiocode,visualstudio
+[Mm]igrations/
+# Created by https://www.toptal.com/developers/gitignore/api/csharp,vscode,visualstudio,visualstudiocode
+# Edit at https://www.toptal.com/developers/gitignore?templates=csharp,vscode,visualstudio,visualstudiocode
 
 ### Csharp ###
 ## Ignore Visual Studio temporary files, build results, and
@@ -533,4 +532,4 @@ MigrationBackup/
 
 # Ionide (cross platform F# VS Code tools) working folder
 
-# End of https://www.toptal.com/developers/gitignore/api/csharp,vscode,visualstudiocode,visualstudio
\ No newline at end of file
+# End of https://www.toptal.com/developers/gitignore/api/csharp,vscode,visualstudio,visualstudiocode
\ No newline at end of file
diff --git a/.vscode/launch.json b/.vscode/launch.json
index 5c7247b..d83a480 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -1,7 +1,27 @@
 {
-    // Use IntelliSense to learn about possible attributes.
-    // Hover to view descriptions of existing attributes.
-    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
-    "version": "0.2.0",
-    "configurations": []
+   // Use IntelliSense to find out which attributes exist for C# debugging
+   // Use hover for the description of the existing attributes
+   // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
+   "version": "0.2.0",
+   "configurations": [
+        {
+            "name": ".NET Core Launch (console)",
+            "type": "coreclr",
+            "request": "launch",
+            "preLaunchTask": "build",
+            // If you have changed target frameworks, make sure to update the program path.
+            "program": "${workspaceFolder}/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.dll",
+            "args": [],
+            "cwd": "${workspaceFolder}/SavvyUI",
+            // For more information about the 'console' field, see https://aka.ms/VSCode-CS-LaunchJson-Console
+            "console": "integratedTerminal",
+            "stopAtEntry": false
+        },
+        {
+            "name": ".NET Core Attach",
+            "type": "coreclr",
+            "request": "attach",
+            "processId": "${command:pickProcess}"
+        }
+    ]
 }
\ No newline at end of file
diff --git a/Lacrosse101_P0/.vscode/tasks.json b/.vscode/tasks.json
similarity index 83%
rename from Lacrosse101_P0/.vscode/tasks.json
rename to .vscode/tasks.json
index 70b74df..4b15175 100644
--- a/Lacrosse101_P0/.vscode/tasks.json
+++ b/.vscode/tasks.json
@@ -7,7 +7,7 @@
             "type": "process",
             "args": [
                 "build",
-                "${workspaceFolder}/lacrosse101/lacrosse101.csproj",
+                "${workspaceFolder}/SavvyUI/SavvyUI.csproj",
                 "/property:GenerateFullPaths=true",
                 "/consoleloggerparameters:NoSummary"
             ],
@@ -19,7 +19,7 @@
             "type": "process",
             "args": [
                 "publish",
-                "${workspaceFolder}/lacrosse101/lacrosse101.csproj",
+                "${workspaceFolder}/SavvyUI/SavvyUI.csproj",
                 "/property:GenerateFullPaths=true",
                 "/consoleloggerparameters:NoSummary"
             ],
@@ -32,7 +32,7 @@
             "args": [
                 "watch",
                 "run",
-                "${workspaceFolder}/lacrosse101/lacrosse101.csproj",
+                "${workspaceFolder}/SavvyUI/SavvyUI.csproj",
                 "/property:GenerateFullPaths=true",
                 "/consoleloggerparameters:NoSummary"
             ],
diff --git a/ChiShantel-P1.sln b/ChiShantel-P1.sln
new file mode 100644
index 0000000..48fbcd3
--- /dev/null
+++ b/ChiShantel-P1.sln
@@ -0,0 +1,62 @@
+ï»¿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 15
+VisualStudioVersion = 15.0.26124.0
+MinimumVisualStudioVersion = 15.0.26124.0
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "SavvyUI", "SavvyUI\SavvyUI.csproj", "{0807AFD4-1831-4F66-9EB2-66525EDBC056}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "SavvyLib", "SavvyLib\SavvyLib.csproj", "{83B4B075-83BA-414E-8EF1-4655CE99B750}"
+EndProject
+Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "SavvyDB", "SavvyDB\SavvyDB.csproj", "{8B909166-2335-48DE-AFC0-5AC680AFAC19}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Any CPU = Debug|Any CPU
+		Debug|x64 = Debug|x64
+		Debug|x86 = Debug|x86
+		Release|Any CPU = Release|Any CPU
+		Release|x64 = Release|x64
+		Release|x86 = Release|x86
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|x64.Build.0 = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Debug|x86.Build.0 = Debug|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|Any CPU.Build.0 = Release|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|x64.ActiveCfg = Release|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|x64.Build.0 = Release|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|x86.ActiveCfg = Release|Any CPU
+		{0807AFD4-1831-4F66-9EB2-66525EDBC056}.Release|x86.Build.0 = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|x64.Build.0 = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Debug|x86.Build.0 = Debug|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|Any CPU.Build.0 = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|x64.ActiveCfg = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|x64.Build.0 = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|x86.ActiveCfg = Release|Any CPU
+		{83B4B075-83BA-414E-8EF1-4655CE99B750}.Release|x86.Build.0 = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|Any CPU.Build.0 = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|x64.ActiveCfg = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|x64.Build.0 = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|x86.ActiveCfg = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Debug|x86.Build.0 = Debug|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|Any CPU.ActiveCfg = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|Any CPU.Build.0 = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|x64.ActiveCfg = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|x64.Build.0 = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|x86.ActiveCfg = Release|Any CPU
+		{8B909166-2335-48DE-AFC0-5AC680AFAC19}.Release|x86.Build.0 = Release|Any CPU
+	EndGlobalSection
+EndGlobal
diff --git a/Lacrosse101_P0/.vscode/launch.json b/Lacrosse101_P0/.vscode/launch.json
deleted file mode 100644
index 3039be4..0000000
--- a/Lacrosse101_P0/.vscode/launch.json
+++ /dev/null
@@ -1,27 +0,0 @@
-{
-   // Use IntelliSense to find out which attributes exist for C# debugging
-   // Use hover for the description of the existing attributes
-   // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
-   "version": "0.2.0",
-   "configurations": [
-        {
-            "name": ".NET Core Launch (console)",
-            "type": "coreclr",
-            "request": "launch",
-            "preLaunchTask": "build",
-            // If you have changed target frameworks, make sure to update the program path.
-            "program": "${workspaceFolder}/lacrosse101/bin/Debug/netcoreapp3.1/lacrosseUI.dll",
-            "args": [],
-            "cwd": "${workspaceFolder}/lacrosseUI",
-            // For more information about the 'console' field, see https://aka.ms/VSCode-CS-LaunchJson-Console
-            "console": "internalConsole",
-            "stopAtEntry": false
-        },
-        {
-            "name": ".NET Core Attach",
-            "type": "coreclr",
-            "request": "attach",
-            "processId": "${command:pickProcess}"
-        }
-    ]
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/.vscode/launch.json b/Lacrosse101_P0/lacrosse101/.vscode/launch.json
deleted file mode 100644
index 5c7247b..0000000
--- a/Lacrosse101_P0/lacrosse101/.vscode/launch.json
+++ /dev/null
@@ -1,7 +0,0 @@
-{
-    // Use IntelliSense to learn about possible attributes.
-    // Hover to view descriptions of existing attributes.
-    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
-    "version": "0.2.0",
-    "configurations": []
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosse101.sln b/Lacrosse101_P0/lacrosse101/lacrosse101.sln
deleted file mode 100644
index 155e6c1..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosse101.sln
+++ /dev/null
@@ -1,90 +0,0 @@
-ï»¿
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 15
-VisualStudioVersion = 15.0.26124.0
-MinimumVisualStudioVersion = 15.0.26124.0
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "lacrosse101", "lacrosse101.csproj", "{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "lacrosseUI", "lacrosseUI\lacrosseUI.csproj", "{7EE72A46-A39E-4D84-8F84-BFC320215999}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "lacrosseDB", "lacrosseDB\lacrosseDB.csproj", "{3F2CAA5E-9162-4669-81AC-0E61F110F44D}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "lacrosseTest", "lacrosseTest\lacrosseTest.csproj", "{20EF058F-34A2-451C-8D5D-A1D21FA790D1}"
-EndProject
-Project("{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}") = "lacrosseLib", "lacrosseLib\lacrosseLib.csproj", "{127EB7FE-3448-494D-9C7E-346011D68415}"
-EndProject
-Global
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|Any CPU = Debug|Any CPU
-		Debug|x64 = Debug|x64
-		Debug|x86 = Debug|x86
-		Release|Any CPU = Release|Any CPU
-		Release|x64 = Release|x64
-		Release|x86 = Release|x86
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|x64.ActiveCfg = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|x64.Build.0 = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Debug|x86.Build.0 = Debug|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|Any CPU.Build.0 = Release|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|x64.ActiveCfg = Release|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|x64.Build.0 = Release|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|x86.ActiveCfg = Release|Any CPU
-		{5F241C06-7FC4-48F1-B2E2-FE6F4D3208C3}.Release|x86.Build.0 = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|x64.ActiveCfg = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|x64.Build.0 = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Debug|x86.Build.0 = Debug|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|Any CPU.Build.0 = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|x64.ActiveCfg = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|x64.Build.0 = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|x86.ActiveCfg = Release|Any CPU
-		{7EE72A46-A39E-4D84-8F84-BFC320215999}.Release|x86.Build.0 = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|x64.ActiveCfg = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|x64.Build.0 = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Debug|x86.Build.0 = Debug|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|Any CPU.Build.0 = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|x64.ActiveCfg = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|x64.Build.0 = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|x86.ActiveCfg = Release|Any CPU
-		{3F2CAA5E-9162-4669-81AC-0E61F110F44D}.Release|x86.Build.0 = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|x64.ActiveCfg = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|x64.Build.0 = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Debug|x86.Build.0 = Debug|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|Any CPU.Build.0 = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|x64.ActiveCfg = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|x64.Build.0 = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|x86.ActiveCfg = Release|Any CPU
-		{20EF058F-34A2-451C-8D5D-A1D21FA790D1}.Release|x86.Build.0 = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|Any CPU.ActiveCfg = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|Any CPU.Build.0 = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|x64.ActiveCfg = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|x64.Build.0 = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|x86.ActiveCfg = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Debug|x86.Build.0 = Debug|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|Any CPU.ActiveCfg = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|Any CPU.Build.0 = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|x64.ActiveCfg = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|x64.Build.0 = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|x86.ActiveCfg = Release|Any CPU
-		{127EB7FE-3448-494D-9C7E-346011D68415}.Release|x86.Build.0 = Release|Any CPU
-	EndGlobalSection
-EndGlobal
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201103.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201103.txt
deleted file mode 100644
index 58a7792..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201103.txt
+++ /dev/null
@@ -1 +0,0 @@
-2020-11-03 22:06:45.913 -06:00 [INF] rachel.hufnagel@revature.net has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104.txt
deleted file mode 100644
index 3482b85..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104.txt
+++ /dev/null
@@ -1 +0,0 @@
-2020-11-04 07:12:33.453 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_001.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_001.txt
deleted file mode 100644
index 25a2dd0..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_001.txt
+++ /dev/null
@@ -1 +0,0 @@
-2020-11-04 07:12:50.246 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_002.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_002.txt
deleted file mode 100644
index 7c5b2ae..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_002.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-2020-11-04 07:13:26.367 -06:00 [INF] emily612@gmail.com has signed in
-2020-11-04 07:16:17.662 -06:00 [INF] emily612@gmail.com has signed in
-2020-11-04 07:23:03.493 -06:00 [INF] rachel.huf@revature.net has signed in
-2020-11-04 07:27:23.350 -06:00 [INF] rachel.huf@revature.net has signed in
-2020-11-04 07:37:40.585 -06:00 [INF] sarkel@revature.net has signed in
-2020-11-04 10:27:39.523 -06:00 [INF] emily612@gmail.com has signed in
-2020-11-04 10:35:45.287 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-04 10:45:58.771 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_003.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_003.txt
deleted file mode 100644
index 5dff9fa..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201104_003.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-2020-11-04 10:46:39.254 -06:00 [INF] test@gmail.com has signed in
-2020-11-04 10:48:59.595 -06:00 [INF] test@gmail.com has signed in
-2020-11-04 10:50:22.971 -06:00 [INF] test@gmail.com has signed in
-2020-11-04 11:15:44.085 -06:00 [INF] rachel@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201105.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201105.txt
deleted file mode 100644
index 3015931..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201105.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-2020-11-05 09:19:23.888 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-05 16:35:46.970 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201106.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201106.txt
deleted file mode 100644
index 4b1f6c1..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201106.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-2020-11-06 09:54:20.563 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-06 10:04:27.684 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-06 11:17:59.816 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-06 13:08:21.141 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-06 13:44:27.430 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-06 13:47:55.767 -06:00 [INF] rachel@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108.txt
deleted file mode 100644
index 504a751..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108.txt
+++ /dev/null
@@ -1 +0,0 @@
-2020-11-08 15:09:20.463 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_001.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_001.txt
deleted file mode 100644
index b19555f..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_001.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-2020-11-08 15:09:33.064 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 15:39:00.348 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 15:41:05.196 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 15:42:04.757 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 15:45:51.428 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 15:51:58.337 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:06:28.989 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:08:48.375 -06:00 [INF] rachelh@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_002.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_002.txt
deleted file mode 100644
index 487fa13..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_002.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-2020-11-08 16:25:13.497 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:28:24.659 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:28:58.723 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:30:44.757 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:30:47.120 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:32:05.134 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_003.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_003.txt
deleted file mode 100644
index 42b523f..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_003.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-2020-11-08 16:32:11.780 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:32:14.467 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_004.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_004.txt
deleted file mode 100644
index 2c94d53..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201108_004.txt
+++ /dev/null
@@ -1,41 +0,0 @@
-2020-11-08 16:33:27.976 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:33:48.521 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:33:51.192 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:41:45.836 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:41:48.242 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:42:38.477 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:42:40.181 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:47:42.779 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:47:46.521 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:49:08.726 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:49:11.175 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:51:31.332 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:51:33.314 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:55:51.652 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:55:53.123 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 16:58:28.596 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 16:58:31.211 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:04:38.333 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:04:42.092 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:12:56.041 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:12:59.345 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:13:57.310 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:14:00.334 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:20:18.184 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:20:21.017 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:20:55.583 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:20:59.622 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:21:43.681 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:21:46.100 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 17:22:33.602 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 17:22:36.655 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 21:19:25.677 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 21:19:29.041 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 21:20:20.435 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 21:20:22.751 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 21:21:54.109 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 21:21:56.763 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 21:22:36.288 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 21:22:38.953 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-08 21:27:56.042 -06:00 [INF] rachelh@gmail.com has signed in
-2020-11-08 21:27:58.645 -06:00 [INF] Customer tried to sign into an account the DNE.
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201111.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201111.txt
deleted file mode 100644
index 4e311b8..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Customer20201111.txt
+++ /dev/null
@@ -1,18 +0,0 @@
-2020-11-11 08:19:39.849 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 08:26:10.444 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 08:28:00.109 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 08:29:54.783 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 08:31:56.147 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 08:33:01.512 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 10:35:21.705 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 10:39:31.127 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 10:40:07.158 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-11 10:40:39.766 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 12:32:58.351 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 12:33:36.942 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-11 12:34:48.677 -06:00 [INF] Customer tried to sign into an account the DNE.
-2020-11-11 12:35:04.360 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 12:35:40.193 -06:00 [INF] Customer rachel@gmail.com tried and failed to login.
-2020-11-11 12:36:10.558 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 15:13:53.647 -06:00 [INF] rachel@gmail.com has signed in
-2020-11-11 15:17:51.079 -06:00 [INF] rachel@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201105.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201105.txt
deleted file mode 100644
index 847e057..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201105.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-2020-11-05 10:25:19.508 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-05 10:45:57.724 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-05 13:20:26.980 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-05 13:22:30.866 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-05 16:30:59.449 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-05 16:31:31.579 -06:00 [INF] skelly@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201106.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201106.txt
deleted file mode 100644
index 5d6c1b7..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201106.txt
+++ /dev/null
@@ -1 +0,0 @@
-2020-11-06 10:06:50.621 -06:00 [INF] skelly@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201111.txt b/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201111.txt
deleted file mode 100644
index a629b4b..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/DBFiles/Manager20201111.txt
+++ /dev/null
@@ -1,22 +0,0 @@
-2020-11-11 08:12:22.968 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 08:17:51.968 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 08:40:37.911 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 08:40:51.523 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:20:22.141 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:20:31.302 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:30:42.411 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:30:54.151 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:33:50.789 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:33:59.593 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:35:15.867 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:37:05.336 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:37:09.948 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:40:15.368 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:40:29.702 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:41:08.553 -06:00 [INF] skelly@gmail.com has signed in
-2020-11-11 15:41:15.903 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:42:37.039 -06:00 [INF] mcuban@gmail.com has signed in
-2020-11-11 15:42:41.794 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:44:08.013 -06:00 [INF] mcuban@gmail.com has signed in
-2020-11-11 15:44:17.023 -06:00 [INF] Manager tried to sign into an account the DNE.
-2020-11-11 15:45:44.895 -06:00 [INF] mcuban@gmail.com has signed in
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.Designer.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.Designer.cs
deleted file mode 100644
index d570869..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.Designer.cs
+++ /dev/null
@@ -1,327 +0,0 @@
-ï»¿// <auto-generated />
-using System;
-using Microsoft.EntityFrameworkCore;
-using Microsoft.EntityFrameworkCore.Infrastructure;
-using Microsoft.EntityFrameworkCore.Migrations;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
-using lacrosseDB;
-
-namespace lacrosseDB.Migrations
-{
-    [DbContext(typeof(lacrosseContext))]
-    [Migration("20201111140516_inital")]
-    partial class inital
-    {
-        protected override void BuildTargetModel(ModelBuilder modelBuilder)
-        {
-#pragma warning disable 612, 618
-            modelBuilder
-                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
-                .HasAnnotation("ProductVersion", "3.1.9")
-                .HasAnnotation("Relational:MaxIdentifierLength", 63);
-
-            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("custId")
-                        .HasColumnType("integer");
-
-                    b.Property<int?>("customerId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("customerId");
-
-                    b.ToTable("Cart");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("cartId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("custId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("cartId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("CartItem");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Customer", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("FirstName")
-                        .HasColumnType("text");
-
-                    b.Property<string>("LastName")
-                        .HasColumnType("text");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<string>("email")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Customer");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("Inventory");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Locations", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("StoreLocation")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Locations");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("FirstName")
-                        .HasColumnType("text");
-
-                    b.Property<string>("LastName")
-                        .HasColumnType("text");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<string>("email")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.ToTable("Managers");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("CustomersId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("TotalPrice")
-                        .HasColumnType("double precision");
-
-                    b.Property<int?>("customerId")
-                        .HasColumnType("integer");
-
-                    b.Property<DateTime>("dateOfOrder")
-                        .HasColumnType("timestamp without time zone");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.HasIndex("customerId");
-
-                    b.ToTable("Orders");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int?>("OrdersId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("Price")
-                        .HasColumnType("double precision");
-
-                    b.Property<string>("description")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("OrdersId");
-
-                    b.ToTable("Product");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("orderId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("price")
-                        .HasColumnType("double precision");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("orderId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("LineItem");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Customer", "customer")
-                        .WithMany()
-                        .HasForeignKey("customerId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Cart", "cart")
-                        .WithMany("cartItem")
-                        .HasForeignKey("cartId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Customer", "customer")
-                        .WithMany("orders")
-                        .HasForeignKey("customerId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Orders", null)
-                        .WithMany("ItemsToBuy")
-                        .HasForeignKey("OrdersId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Orders", "order")
-                        .WithMany()
-                        .HasForeignKey("orderId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-#pragma warning restore 612, 618
-        }
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.cs
deleted file mode 100644
index f470269..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/20201111140516_inital.cs
+++ /dev/null
@@ -1,301 +0,0 @@
-ï»¿using System;
-using Microsoft.EntityFrameworkCore.Migrations;
-using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
-
-namespace lacrosseDB.Migrations
-{
-    public partial class inital : Migration
-    {
-        protected override void Up(MigrationBuilder migrationBuilder)
-        {
-            migrationBuilder.CreateTable(
-                name: "Customer",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    FirstName = table.Column<string>(nullable: true),
-                    LastName = table.Column<string>(nullable: true),
-                    email = table.Column<string>(nullable: true),
-                    LocationId = table.Column<int>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Customer", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Locations",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    StoreLocation = table.Column<string>(nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Locations", x => x.Id);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Cart",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    custId = table.Column<int>(nullable: false),
-                    customerId = table.Column<int>(nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Cart", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Cart_Customer_customerId",
-                        column: x => x.customerId,
-                        principalTable: "Customer",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Restrict);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Managers",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    FirstName = table.Column<string>(nullable: true),
-                    LastName = table.Column<string>(nullable: true),
-                    email = table.Column<string>(nullable: true),
-                    LocationId = table.Column<int>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Managers", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Managers_Locations_LocationId",
-                        column: x => x.LocationId,
-                        principalTable: "Locations",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Orders",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    TotalPrice = table.Column<double>(nullable: false),
-                    LocationId = table.Column<int>(nullable: false),
-                    CustomersId = table.Column<int>(nullable: false),
-                    customerId = table.Column<int>(nullable: true),
-                    dateOfOrder = table.Column<DateTime>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Orders", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Orders_Locations_LocationId",
-                        column: x => x.LocationId,
-                        principalTable: "Locations",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_Orders_Customer_customerId",
-                        column: x => x.customerId,
-                        principalTable: "Customer",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Restrict);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Product",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    Price = table.Column<double>(nullable: false),
-                    description = table.Column<string>(nullable: true),
-                    OrdersId = table.Column<int>(nullable: true)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Product", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Product_Orders_OrdersId",
-                        column: x => x.OrdersId,
-                        principalTable: "Orders",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Restrict);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "CartItem",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    cartId = table.Column<int>(nullable: false),
-                    stickId = table.Column<int>(nullable: false),
-                    quantity = table.Column<int>(nullable: false),
-                    custId = table.Column<int>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_CartItem", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_CartItem_Cart_cartId",
-                        column: x => x.cartId,
-                        principalTable: "Cart",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_CartItem_Product_stickId",
-                        column: x => x.stickId,
-                        principalTable: "Product",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "Inventory",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    stickId = table.Column<int>(nullable: false),
-                    LocationId = table.Column<int>(nullable: false),
-                    quantity = table.Column<int>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_Inventory", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_Inventory_Locations_LocationId",
-                        column: x => x.LocationId,
-                        principalTable: "Locations",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_Inventory_Product_stickId",
-                        column: x => x.stickId,
-                        principalTable: "Product",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateTable(
-                name: "LineItem",
-                columns: table => new
-                {
-                    Id = table.Column<int>(nullable: false)
-                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
-                    orderId = table.Column<int>(nullable: false),
-                    stickId = table.Column<int>(nullable: false),
-                    price = table.Column<double>(nullable: false),
-                    quantity = table.Column<int>(nullable: false)
-                },
-                constraints: table =>
-                {
-                    table.PrimaryKey("PK_LineItem", x => x.Id);
-                    table.ForeignKey(
-                        name: "FK_LineItem_Orders_orderId",
-                        column: x => x.orderId,
-                        principalTable: "Orders",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                    table.ForeignKey(
-                        name: "FK_LineItem_Product_stickId",
-                        column: x => x.stickId,
-                        principalTable: "Product",
-                        principalColumn: "Id",
-                        onDelete: ReferentialAction.Cascade);
-                });
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Cart_customerId",
-                table: "Cart",
-                column: "customerId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_CartItem_cartId",
-                table: "CartItem",
-                column: "cartId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_CartItem_stickId",
-                table: "CartItem",
-                column: "stickId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Inventory_LocationId",
-                table: "Inventory",
-                column: "LocationId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Inventory_stickId",
-                table: "Inventory",
-                column: "stickId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_LineItem_orderId",
-                table: "LineItem",
-                column: "orderId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_LineItem_stickId",
-                table: "LineItem",
-                column: "stickId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Managers_LocationId",
-                table: "Managers",
-                column: "LocationId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Orders_LocationId",
-                table: "Orders",
-                column: "LocationId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Orders_customerId",
-                table: "Orders",
-                column: "customerId");
-
-            migrationBuilder.CreateIndex(
-                name: "IX_Product_OrdersId",
-                table: "Product",
-                column: "OrdersId");
-        }
-
-        protected override void Down(MigrationBuilder migrationBuilder)
-        {
-            migrationBuilder.DropTable(
-                name: "CartItem");
-
-            migrationBuilder.DropTable(
-                name: "Inventory");
-
-            migrationBuilder.DropTable(
-                name: "LineItem");
-
-            migrationBuilder.DropTable(
-                name: "Managers");
-
-            migrationBuilder.DropTable(
-                name: "Cart");
-
-            migrationBuilder.DropTable(
-                name: "Product");
-
-            migrationBuilder.DropTable(
-                name: "Orders");
-
-            migrationBuilder.DropTable(
-                name: "Locations");
-
-            migrationBuilder.DropTable(
-                name: "Customer");
-        }
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/lacrosseContextModelSnapshot.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/lacrosseContextModelSnapshot.cs
deleted file mode 100644
index 7dd1fdb..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Migrations/lacrosseContextModelSnapshot.cs
+++ /dev/null
@@ -1,325 +0,0 @@
-ï»¿// <auto-generated />
-using System;
-using Microsoft.EntityFrameworkCore;
-using Microsoft.EntityFrameworkCore.Infrastructure;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
-using lacrosseDB;
-
-namespace lacrosseDB.Migrations
-{
-    [DbContext(typeof(lacrosseContext))]
-    partial class lacrosseContextModelSnapshot : ModelSnapshot
-    {
-        protected override void BuildModel(ModelBuilder modelBuilder)
-        {
-#pragma warning disable 612, 618
-            modelBuilder
-                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
-                .HasAnnotation("ProductVersion", "3.1.9")
-                .HasAnnotation("Relational:MaxIdentifierLength", 63);
-
-            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("custId")
-                        .HasColumnType("integer");
-
-                    b.Property<int?>("customerId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("customerId");
-
-                    b.ToTable("Cart");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("cartId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("custId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("cartId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("CartItem");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Customer", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("FirstName")
-                        .HasColumnType("text");
-
-                    b.Property<string>("LastName")
-                        .HasColumnType("text");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<string>("email")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Customer");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("Inventory");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Locations", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("StoreLocation")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.ToTable("Locations");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<string>("FirstName")
-                        .HasColumnType("text");
-
-                    b.Property<string>("LastName")
-                        .HasColumnType("text");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<string>("email")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.ToTable("Managers");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("CustomersId")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("LocationId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("TotalPrice")
-                        .HasColumnType("double precision");
-
-                    b.Property<int?>("customerId")
-                        .HasColumnType("integer");
-
-                    b.Property<DateTime>("dateOfOrder")
-                        .HasColumnType("timestamp without time zone");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("LocationId");
-
-                    b.HasIndex("customerId");
-
-                    b.ToTable("Orders");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int?>("OrdersId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("Price")
-                        .HasColumnType("double precision");
-
-                    b.Property<string>("description")
-                        .HasColumnType("text");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("OrdersId");
-
-                    b.ToTable("Product");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
-                {
-                    b.Property<int>("Id")
-                        .ValueGeneratedOnAdd()
-                        .HasColumnType("integer")
-                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);
-
-                    b.Property<int>("orderId")
-                        .HasColumnType("integer");
-
-                    b.Property<double>("price")
-                        .HasColumnType("double precision");
-
-                    b.Property<int>("quantity")
-                        .HasColumnType("integer");
-
-                    b.Property<int>("stickId")
-                        .HasColumnType("integer");
-
-                    b.HasKey("Id");
-
-                    b.HasIndex("orderId");
-
-                    b.HasIndex("stickId");
-
-                    b.ToTable("LineItem");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Cart", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Customer", "customer")
-                        .WithMany()
-                        .HasForeignKey("customerId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.CartItem", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Cart", "cart")
-                        .WithMany("cartItem")
-                        .HasForeignKey("cartId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Inventory", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Manager", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Orders", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Locations", "location")
-                        .WithMany()
-                        .HasForeignKey("LocationId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Customer", "customer")
-                        .WithMany("orders")
-                        .HasForeignKey("customerId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.Sticks", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Orders", null)
-                        .WithMany("ItemsToBuy")
-                        .HasForeignKey("OrdersId");
-                });
-
-            modelBuilder.Entity("lacrosseDB.Models.lineItem", b =>
-                {
-                    b.HasOne("lacrosseDB.Models.Orders", "order")
-                        .WithMany()
-                        .HasForeignKey("orderId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-
-                    b.HasOne("lacrosseDB.Models.Sticks", "stick")
-                        .WithMany()
-                        .HasForeignKey("stickId")
-                        .OnDelete(DeleteBehavior.Cascade)
-                        .IsRequired();
-                });
-#pragma warning restore 612, 618
-        }
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Cart.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Cart.cs
deleted file mode 100644
index e27e7e7..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Cart.cs
+++ /dev/null
@@ -1,32 +0,0 @@
-using System.Collections.Generic;
-
-namespace lacrosseDB.Models
-{
-    public class Cart
-    {
-        /// <summary>
-        /// Property of the cart clas
-        /// </summary>
-        /// <value></value>
-        public int Id {get; set;}
-
-        /// <summary>
-        /// Property of the cart class
-        /// </summary>
-        /// <value></value>
-        public int custId {get; set;} 
-
-        /// <summary>
-        /// Proterty of the cart class
-        /// </summary>
-        /// <value></value>
-        public Customer customer {get; set;}
-
-
-        /// <summary>
-        /// Property of the cart class
-        /// </summary>
-        /// <value></value>
-        public List<CartItem> cartItem {get; set;} 
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/CartItem.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/CartItem.cs
deleted file mode 100644
index d4f2210..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/CartItem.cs
+++ /dev/null
@@ -1,47 +0,0 @@
-namespace lacrosseDB.Models
-{
-    public class CartItem
-    {
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public int Id {get; set;}
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public int cartId {get; set;} 
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public Cart cart {get; set;}
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public int stickId {get; set;}
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public Sticks stick {get; set;} 
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public int quantity {get; set;} 
-
-        /// <summary>
-        /// Proterty of the cart item class
-        /// </summary>
-        /// <value></value>
-        public int custId {get; set;}
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Customer.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Customer.cs
deleted file mode 100644
index 9f0eebf..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Customer.cs
+++ /dev/null
@@ -1,20 +0,0 @@
-ï»¿using System;
-using System.Collections.Generic;
-
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The class customer which inherits from the abstract products human
-    /// </summary>
-    public class Customer : Human 
-    {
-
-        /// <summary>
-        /// Property of the customer class
-        /// </summary>
-        /// <value></value>
-        public List<Orders> orders { get; set; }
-
-
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Human.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Human.cs
deleted file mode 100644
index 53c71c0..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Human.cs
+++ /dev/null
@@ -1,40 +0,0 @@
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The abstract class Human which help implement the classes customer and manager
-    /// </summary>
-    public abstract class Human
-    {
-        /// <summary>
-        /// Property of the human class
-        /// </summary>
-        /// <value></value>
-        public int Id { get; set; }
-
-        /// <summary>
-        /// Property of the human class
-        /// </summary>
-        /// <value></value>
-        public string FirstName { get; set; }
-
-        /// <summary>
-        /// Property of the human class
-        /// </summary>
-        /// <value></value>
-        public string LastName { get; set; }
-
-        /// <summary>
-        /// Property of the human class
-        /// </summary>
-        /// <value></value>
-        public string email {get; set;}
-        
-        /// <summary>
-        /// Property of the human class
-        /// </summary>
-        /// <value></value>
-        public int LocationId { get; set; }
-
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Inventory.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Inventory.cs
deleted file mode 100644
index a4b328b..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Inventory.cs
+++ /dev/null
@@ -1,21 +0,0 @@
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The class inventory which acts as a join tables between location and products
-    /// </summary>
-    public class Inventory
-    {
-
-        public int Id { get; set; }
-
-        public int stickId {get; set;}
-
-        public Sticks stick {get; set;}
-
-        public int LocationId { get; set; }
-
-        public Locations location {get; set;}
-        public int quantity {get; set;}
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Locations.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Locations.cs
deleted file mode 100644
index 3917c6a..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Locations.cs
+++ /dev/null
@@ -1,23 +0,0 @@
-using System.Collections.Generic;
-
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The class locations that neither inherits or is extended by another class 
-    /// </summary>
-    public class Locations
-    {
-        /// <summary>
-        /// Property of the locations class
-        /// </summary>
-        /// <value></value>
-        public int Id { get; set; }
-
-        /// <summary>
-        /// Property of the locations class
-        /// </summary>
-        /// <value></value>
-        public string StoreLocation { get; set; }
-
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Manager.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Manager.cs
deleted file mode 100644
index e7eb2c8..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Manager.cs
+++ /dev/null
@@ -1,17 +0,0 @@
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// Manager class which extends the abstract class humans 
-    /// </summary>
-    public class Manager : Human 
-    {
-        /// <summary>
-        /// Property of the manager class
-        /// </summary>
-        /// <value></value>
-        public Locations location {get; set;}
-    
-        
-        
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Orders.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Orders.cs
deleted file mode 100644
index 68eb83e..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Orders.cs
+++ /dev/null
@@ -1,59 +0,0 @@
-using System;
-using System.Collections.Generic;
-
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The class orders which is neither inherited or extended by another class
-    /// </summary>
-    public class Orders
-    {
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public int Id { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public List<Sticks> ItemsToBuy { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public double TotalPrice { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public int LocationId { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public Locations location { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public int CustomersId { get; set; }
-
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public Customer customer { get; set; }
-        
-        /// <summary>
-        /// Property of the orders class
-        /// </summary>
-        /// <value></value>
-        public DateTime dateOfOrder { get; set; }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Sticks.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Sticks.cs
deleted file mode 100644
index 64a5853..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/Sticks.cs
+++ /dev/null
@@ -1,15 +0,0 @@
-namespace lacrosseDB.Models
-{
-    /// <summary>
-    /// The class sticks which inherits from the abstract class product
-    /// </summary>
-    public class Sticks
-    {
-        public int Id { get; set; }
-        public double Price { get; set; }
-        public string description { get; set; }
-
-
-    }
-
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/lineItem.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/lineItem.cs
deleted file mode 100644
index b201aff..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Models/lineItem.cs
+++ /dev/null
@@ -1,14 +0,0 @@
-namespace lacrosseDB.Models
-{
-    public class lineItem
-    {
-        public int Id {get; set;}
-        public int orderId {get; set;}
-        public Orders order {get; set;}
-        public int stickId {get; set;}
-        public Sticks stick {get; set;}
-        public double price {get; set;}
-        public int quantity {get; set;}
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/DBRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/DBRepo.cs
deleted file mode 100644
index 4236b67..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/DBRepo.cs
+++ /dev/null
@@ -1,542 +0,0 @@
-using System;
-using System.Collections.Generic;
-using System.Linq;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    /// <summary>
-    /// The class which implements all the interfaces for the CRUD operations on the database
-    /// </summary>
-    public class DBRepo : ILineItemRepo, IProductRepo, ICustomerRepo, IManagerRepo, ILocationRepo, IInventoryRepo, IOrderRepo, ICartRepo, ICartItemsRepo
-    {
-        /// <summary>
-        /// A Property of the DBRepo class 
-        /// </summary>
-        private lacrosseContext context;
-
-        /// <summary>
-        /// parameterized constructor 
-        /// </summary>
-        /// <param name="context"></param>
-        public DBRepo(lacrosseContext context)
-        {
-            this.context = context;
-        }
-        /// <summary>
-        /// A method are for adding data to the database
-        /// </summary>
-        /// <param name="customer"></param>
-        public void AddCustomer(Customer customer)
-        {
-            context.Customer.Update(customer);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for adding data to the database
-        /// </summary>
-        /// <param name="location"></param>
-        public void AddLocation(Locations location)
-        {
-            context.Locations.Update(location);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for adding data to the database
-        /// </summary>
-        /// <param name="manager"></param>
-        public void AddManager(Manager manager)
-        {
-            context.Managers.Update(manager);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for adding data to the database
-        /// </summary>
-        /// <param name="order"></param>
-        public void AddOrder(Orders order)
-        {
-            context.Orders.Update(order);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for adding data to the database
-        /// </summary>
-        /// <param name="inventory"></param>
-        public void AddToInventory(Inventory inventory)
-        {
-            context.Inventory.Update(inventory);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for deleting data from the database
-        /// </summary>
-        /// <param name="customer"></param>
-        public void DeleteACustomer(Customer customer)
-        {
-            context.Customer.Remove(customer);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for deleting data from the database
-        /// </summary>
-        /// <param name="location"></param>
-        public void DeleteLocation(Locations location)
-        {
-            context.Locations.Remove(location);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for deleting data from the database
-        /// </summary>
-        /// <param name="manager"></param>
-        public void DeleteManager(Manager manager)
-        {
-            context.Managers.Remove(manager);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for deleting data from the database
-        /// </summary>
-        /// <param name="order"></param>
-        public void DeleteOrder(Orders order)
-        {
-            context.Orders.Remove(order);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for deleting data from the database
-        /// </summary>
-        /// <param name="inventory"></param>
-        public void DeleteInventory(Inventory inventory)
-        {
-            context.Inventory.Remove(inventory);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <returns></returns>
-        public List<Customer> GetAllCustomers()
-        {
-            return context.Customer.Select(c => c).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <returns></returns>
-        public List<Locations> GetAllLocations()
-        {
-            return context.Locations.Select(l => l).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <returns></returns>
-        public List<Manager> GetAllManagers()
-        {
-            return context.Managers.Select(m => m).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="inventoryId"></param>
-        /// <returns></returns>
-        public List<Inventory> GetAllOfInventoryByInventoryId(int inventoryId)
-        {
-            return context.Inventory.Where(i => i.Id == inventoryId).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="locationId"></param>
-        /// <returns></returns>
-        public List<Inventory> GetAllOfInventoryByLocationId(int locationId)
-        {
-            List<Inventory> inventories = context.Inventory.Where(i => i.LocationId == locationId).ToList();
-            return inventories;
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="locationId"></param>
-        /// <returns></returns>
-        public List<Orders> GetAllOrdersByLocationId(int locationId)
-        {
-            return context.Orders.Where(o => o.LocationId == locationId).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        public List<Orders> GetAllOrdersByCustId(int custId)
-        {
-            return context.Orders.Where(o => o.CustomersId == custId).ToList();
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        public Customer GetCustomerByCustId(int custId)
-        {
-            return (Customer)context.Customer.Single(c => c.Id == custId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="firstName"></param>
-        /// <param name="lastName"></param>
-        /// <returns></returns>
-        public Customer GetCustomerByEmail(string email)
-        {
-            return (Customer)context.Customer.Single(c => c.email == email);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="intentoryId"></param>
-        /// <returns></returns>
-        public Inventory GetInventoryItemByInventoryId(int intentoryId)
-        {
-            return (Inventory) context.Inventory.Single(i => i.Id == intentoryId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="locationId"></param>
-        /// <returns></returns>
-        public Inventory GetInventoryItemByLocationId(int locationId)
-        {
-            return (Inventory) context.Inventory.Single(i => i.LocationId == locationId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="locationId"></param>
-        /// <returns></returns>
-        public Locations GetLocationByLocationId(int locationId)
-        {
-            return (Locations)context.Locations.Single(l => l.Id == locationId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="manId"></param>
-        /// <returns></returns>
-        public Manager GetManagerByManId(int manId)
-        {
-            return (Manager)context.Managers.Single(m => m.Id == manId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="firstName"></param>
-        /// <param name="lastName"></param>
-        /// <returns></returns>
-        public Manager GetManagerByEmail(string email)
-        {
-            return (Manager)context.Managers.Single(m => m.email == email);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        public Orders GetOrderByCustId(int custId)
-        {
-            return (Orders)context.Orders.Single(o => o.CustomersId == custId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="locationId"></param>
-        /// <returns></returns>
-        public Orders GetOrderByLocationId(int locationId)
-        {
-            return (Orders)context.Orders.Single(o => o.LocationId == locationId);
-        }
-        /// <summary>
-        /// A method are for retreving data from the database
-        /// </summary>
-        /// <param name="orderId"></param>
-        /// <returns></returns>
-        public Orders GetOrderByOrderId(int orderId)
-        {
-            return (Orders)context.Orders.Single(o => o.Id == orderId);
-        }
-
-        /// <summary>
-        /// A method are for updating data from the database
-        /// </summary>
-        /// <param name="customer"></param>
-        public void UpdateCustomer(Customer customer)
-        {
-            context.Customer.Update(customer);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for updating data from the database
-        /// </summary>
-        /// <param name="inventory"></param>
-        public void UpdateInventory(Inventory inventory)
-        {
-            context.Inventory.Update(inventory);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for updating data from the database
-        /// </summary>
-        /// <param name="location"></param>
-        public void UpdateLocation(Locations location)
-        {
-            context.Locations.Update(location);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for updating data from the database
-        /// </summary>
-        /// <param name="manager"></param>
-        public void UpdateManager(Manager manager)
-        {
-            context.Managers.Update(manager);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method are for updating data from the database
-        /// </summary>
-        /// <param name="order"></param>
-        public void UpdateOrder(Orders order)
-        {
-            context.Orders.Update(order);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for adding data to the database 
-        /// </summary>
-        /// <param name="cart"></param>
-        public void AddCart(Cart cart)
-        {
-            context.Cart.Update(cart);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for updating data from the database 
-        /// </summary>
-        /// <param name="cart"></param>
-        public void UpdateCart(Cart cart)
-        {
-            context.Cart.Update(cart);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for retreving data from the database
-        /// </summary>
-        /// <param name="cartId"></param>
-        /// <returns></returns>
-        public Cart GetCartByCartId(int cartId)
-        {
-            Cart cart = context.Cart.Single(ct => ct.Id == cartId);
-            return cart;
-        }
-        /// <summary>
-        /// A method for retreving data from the database
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        public Cart GetCartByCustId(int custId)
-        {
-            Cart cart = context.Cart.Single(ct => ct.custId == custId);
-            return cart;
-        }
-        /// <summary>
-        /// A method for deleting data from the database
-        /// </summary>
-        /// <param name="cart"></param>
-        public void DeleteCart(Cart cart)
-        {
-            context.Cart.Remove(cart);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for adding data to the database
-        /// </summary>
-        /// <param name="cartItem"></param>
-        public void AddCartItem(CartItem cartItem)
-        {
-            context.CartItem.Update(cartItem);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for updating data in the database
-        /// </summary>
-        /// <param name="cartItem"></param>
-        public void UpdateCartItem(CartItem cartItem)
-        {
-            context.CartItem.Update(cartItem);
-            context.SaveChanges();
-        }
-        /// <summary>
-        /// A method for retreving data from the database
-        /// </summary>
-        /// <param name="cartItemId"></param>
-        /// <returns></returns>
-        public CartItem GetCartItemByCartItemId(int cartItemId)
-        {
-            CartItem cartItem = context.CartItem.Single(ci => ci.Id == cartItemId);
-            return cartItem;
-        }
-        /// <summary>
-        /// A method for retreving data from the database
-        /// </summary>
-        /// <param name="cartId"></param>
-        /// <returns></returns>
-        public CartItem GetCartItemByCartId(int cartId)
-        {
-            CartItem cartItem = context.CartItem.Single(ci => ci.cartId == cartId);
-            return cartItem;
-        }
-        /// <summary>
-        /// A method for retreving data from the database 
-        /// </summary>
-        /// <param name="cartId"></param>
-        /// <returns></returns>
-        public List<CartItem> GetAllCartItemsByCartId(int cartId)
-        {
-            List<CartItem> cartItems = context.CartItem.Where(ci => ci.cartId == cartId).ToList();
-            return cartItems;
-        }
-
-        /// <summary>
-        /// A method for retreving data from the database 
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        public CartItem GetCartItemByCustId(int custId)
-        {
-            CartItem cartItem = context.CartItem.Single(ci => ci.custId == custId);
-            return cartItem;
-        }
-        /// <summary>
-        /// A method for deleting data from the database 
-        /// </summary>
-        /// <param name="cartItem"></param>
-        public void DeleteCartItem(CartItem cartItem)
-        {
-            context.CartItem.Remove(cartItem);
-            context.SaveChanges();
-        }
-
-        /// <summary>
-        /// Sort the orders by date for a specific customer asc
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        List<Orders> IOrderRepo.GetAllOrdersByCustIdDateAsc(int custId)
-        {
-            return context.Orders.Where(x => x.CustomersId == custId).OrderBy(x => x.dateOfOrder).ToList();
-        }
-
-        /// <summary>
-        /// Sort the orders by date for a specific customer desc
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        List<Orders> IOrderRepo.GettAllOrdersByCustIdDateDesc(int custId)
-        {
-            return context.Orders.Where(x => x.CustomersId == custId).OrderByDescending(x => x.dateOfOrder).ToList();
-        }
-
-        /// <summary>
-        /// Sort the orders by price for a specific customer
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        List<Orders> IOrderRepo.GetAllOrdersByCustIdPriceAsc(int custId)
-        {
-            return context.Orders.Where(x => x.CustomersId == custId).OrderBy(x => x.TotalPrice).ToList();
-        }
-
-        /// <summary>
-        /// Sort the orders by price for a specific customer
-        /// </summary>
-        /// <param name="custId"></param>
-        /// <returns></returns>
-        List<Orders> IOrderRepo.GetAllOrdersByCustIdPriceDesc(int custId)
-        {
-            return context.Orders.Where(x => x.CustomersId == custId).OrderByDescending(x => x.TotalPrice).ToList();
-        }
-
-        /// <summary>
-        /// Get a orders by date
-        /// </summary>
-        /// <param name="dateTime"></param>
-        /// <returns></returns>
-        Orders IOrderRepo.GetOrderByDate(DateTime dateTime)
-        {
-            return (Orders) context.Orders.Single(x => x.dateOfOrder == dateTime);
-        }
-
-        Manager IManagerRepo.GetManagerByLocationId(int locID)
-        {
-            return (Manager) context.Managers.Single(m => m.LocationId == locID);
-        }
-
-        public void SaveChanges()
-        {
-            context.SaveChanges();
-        }
-
-        public void AddStick(Sticks stick)
-        {
-            context.Product.Add(stick);
-            context.SaveChanges();
-        }
-
-        public void DeleteStick(Sticks stick)
-        {
-            context.Product.Remove(stick);
-            context.SaveChanges();
-        }
-
-        public Sticks GetProductByStickId(int Id)
-        {
-            return (Sticks) context.Product.Single(s => s.Id == Id);
-        }
-
-        public void AddLineItem(lineItem lineItem)
-        {
-            context.LineItem.Add(lineItem);
-            context.SaveChanges();
-        }
-
-        public void UpdateLineItem(lineItem lineItem)
-        {
-            context.LineItem.Update(lineItem);
-            context.SaveChanges();
-        }
-
-        public lineItem GetLineItemByOrderId(int orderId)
-        {
-            return (lineItem)context.LineItem.Single(li => li.orderId == orderId);
-        }
-
-        public List<lineItem> GetAllLineItemsByOrderId(int orderId)
-        {
-            List<lineItem> lineitems = context.LineItem.Where(li => li.orderId == orderId).ToList();
-            return lineitems;
-        }
-
-        public void DeleteLineItem(lineItem lineItem)
-        {
-            context.LineItem.Remove(lineItem);
-            context.SaveChanges();
-        }
-
-        Inventory IInventoryRepo.GetInventoryByLocIdStickId(int locId, int stickId)
-        {
-            return (Inventory)context.Inventory.Single(i => i.LocationId == locId && i.stickId == stickId);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartItemsRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartItemsRepo.cs
deleted file mode 100644
index 3cdf787..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartItemsRepo.cs
+++ /dev/null
@@ -1,18 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface ICartItemsRepo
-    {
-         void AddCartItem(CartItem cartItem);
-         void UpdateCartItem (CartItem cartItem);
-         CartItem GetCartItemByCartItemId(int cartItemId);
-         CartItem GetCartItemByCartId(int cartId);
-         CartItem GetCartItemByCustId(int custId);
-         List<CartItem> GetAllCartItemsByCartId(int cartId);
-         void DeleteCartItem(CartItem cartItem);
-
-         void SaveChanges();
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartRepo.cs
deleted file mode 100644
index ab82f4c..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICartRepo.cs
+++ /dev/null
@@ -1,15 +0,0 @@
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface ICartRepo
-    {
-         void AddCart(Cart cart);
-         void UpdateCart(Cart cart);
-         Cart GetCartByCartId(int cartId);
-         Cart GetCartByCustId(int custId);
-         void DeleteCart(Cart cart);
-
-         void SaveChanges();
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICustomerRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICustomerRepo.cs
deleted file mode 100644
index 14ec6a6..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ICustomerRepo.cs
+++ /dev/null
@@ -1,18 +0,0 @@
-ï»¿using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface ICustomerRepo 
-    {
-        void AddCustomer (Customer customer);
-        void UpdateCustomer (Customer customer);
-        Customer GetCustomerByCustId (int custId);
-        Customer GetCustomerByEmail (string email);
-        List <Customer> GetAllCustomers();
-        void DeleteACustomer (Customer customer);
-
-        void SaveChanges();
-
-    }
-}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IInventoryRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IInventoryRepo.cs
deleted file mode 100644
index 0f288d6..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IInventoryRepo.cs
+++ /dev/null
@@ -1,19 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface IInventoryRepo
-    {
-        void AddToInventory(Inventory inventory);
-        void UpdateInventory(Inventory inventory);
-        Inventory GetInventoryItemByInventoryId(int intentoryId);
-        Inventory GetInventoryItemByLocationId(int locationId);
-        Inventory GetInventoryByLocIdStickId (int locId, int stickId);
-        List<Inventory> GetAllOfInventoryByInventoryId(int inventoryId);
-        List<Inventory> GetAllOfInventoryByLocationId(int locationId);
-        void DeleteInventory(Inventory inventory);
-
-        void SaveChanges();
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILineItemRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILineItemRepo.cs
deleted file mode 100644
index becab74..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILineItemRepo.cs
+++ /dev/null
@@ -1,14 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface ILineItemRepo
-    {
-        void AddLineItem(lineItem lineItem);
-        void UpdateLineItem(lineItem lineItem);
-        lineItem GetLineItemByOrderId(int orderId);
-        List<lineItem> GetAllLineItemsByOrderId(int orderId);
-        void DeleteLineItem(lineItem lineItem);
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILocationRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILocationRepo.cs
deleted file mode 100644
index 3476673..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/ILocationRepo.cs
+++ /dev/null
@@ -1,17 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-
-namespace lacrosseDB.Repos
-{
-    public interface ILocationRepo
-    {
-        void AddLocation(Locations locatio);
-        void UpdateLocation(Locations location);
-        Locations GetLocationByLocationId(int locationId);
-        List<Locations> GetAllLocations();
-        void DeleteLocation(Locations locations);
-
-        void SaveChanges();
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IManagerRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IManagerRepo.cs
deleted file mode 100644
index c164343..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IManagerRepo.cs
+++ /dev/null
@@ -1,18 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface IManagerRepo
-    {
-        void AddManager (Manager manager);
-        void UpdateManager (Manager manager);
-        Manager GetManagerByManId (int manId);
-        Manager GetManagerByEmail(string email);
-        Manager GetManagerByLocationId(int locID);
-        List <Manager> GetAllManagers();
-        void DeleteManager (Manager manager);
-
-        void SaveChanges();
-    }
-} 
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IOrderRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IOrderRepo.cs
deleted file mode 100644
index 84e5f44..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IOrderRepo.cs
+++ /dev/null
@@ -1,26 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB.Models;
-
-namespace lacrosseDB.Repos
-{
-    public interface IOrderRepo
-    {
-        void AddOrder (Orders order);
-        void UpdateOrder(Orders order);
-        Orders GetOrderByOrderId(int orderId);
-        Orders GetOrderByCustId(int custId);
-        Orders GetOrderByLocationId (int locationId);
-        List<Orders> GetAllOrdersByCustId(int custId);
-        List<Orders> GetAllOrdersByLocationId (int locationId);
-        void DeleteOrder(Orders order);
-
-        void SaveChanges();
-
-        List<Orders> GetAllOrdersByCustIdDateAsc(int custId);
-        List<Orders> GettAllOrdersByCustIdDateDesc(int custId);
-        List<Orders> GetAllOrdersByCustIdPriceAsc(int custId);
-        List<Orders> GetAllOrdersByCustIdPriceDesc(int custId);
-        Orders GetOrderByDate(DateTime dateTime);
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IProductRepo.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IProductRepo.cs
deleted file mode 100644
index 1bc406a..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/Repos/IProductRepo.cs
+++ /dev/null
@@ -1,15 +0,0 @@
-using lacrosseDB.Models;
-using System.Collections.Generic;
-
-namespace lacrosseDB.Repos
-{
-    public interface IProductRepo
-    {
-        void AddStick(Sticks stick);
-        void DeleteStick(Sticks stick);
-        Sticks GetProductByStickId(int Id);
-
-        // instead of using linq update method 
-        void SaveChanges();
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseContext.cs b/Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseContext.cs
deleted file mode 100644
index e38a092..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseContext.cs
+++ /dev/null
@@ -1,105 +0,0 @@
-using Microsoft.EntityFrameworkCore;
-using lacrosseDB.Models;
-using Microsoft.Extensions.Configuration;
-using System.IO;
-using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
-
-namespace lacrosseDB
-{
-    /// <summary>
-    /// The class that is responsible for connecting, updating the database 
-    /// </summary>
-    public class lacrosseContext : DbContext
-    {
-        /// <summary>
-        /// A table in the database for customers
-        /// </summary>
-        /// <value></value>
-        public DbSet<Customer> Customer {get; set;}
-
-        /// <summary>
-        /// A table in the database for managers
-        /// </summary>
-        /// <value></value>
-        public DbSet<Manager> Managers {get; set;} 
-
-        /// <summary>
-        /// A table in the database for sticks
-        /// </summary>
-        /// <value></value>
-        public DbSet<Sticks> Product {get; set;}
-
-        /// <summary>
-        /// A table in the database for orders
-        /// </summary>
-        /// <value></value>
-        public DbSet<Orders> Orders {get; set;}
-
-        /// <summary>
-        /// A table in the database for locations
-        /// </summary>
-        /// <value></value>
-        public DbSet<Locations> Locations {get; set;}
-
-        /// <summary>
-        /// A table in the database for inventory
-        /// </summary>
-        /// <value></value>
-        public DbSet<Inventory> Inventory {get; set;}
-
-        /// <summary>
-        /// A table in the database for cart
-        /// </summary>
-        /// <value></value>
-        public DbSet<Cart> Cart {get; set;}
-
-        /// <summary>
-        /// A table in the database for cartitems
-        /// </summary>
-        /// <value></value>
-        public DbSet<CartItem> CartItem {get; set;}
-
-        public DbSet<lineItem> LineItem {get; set;}
-
-        /// <summary>
-        /// telling lacrosse context where the database is and then connecting to it 
-        /// </summary>
-        /// <param name="optionsBuilder"></param>
-        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) 
-        {
-            if (!optionsBuilder.IsConfigured)
-            {
-                var configuration = new ConfigurationBuilder()
-                .SetBasePath(Directory.GetCurrentDirectory())
-                .AddJsonFile("appsettings.json")
-                .Build();
-
-                var connectionString = configuration.GetConnectionString("lacrosseDB");
-                optionsBuilder.UseNpgsql(connectionString);
-            }
-        }
-
-        /// <summary>
-        /// helping to get rid of the one to many relationships
-        /// </summary>
-        /// <param name="modelBuilder"></param>
-        protected override void OnModelCreating(ModelBuilder modelBuilder)
-        {
-            // var StickConverter1 = new EnumToStringConverter<Sticks.BrandType>();
-            // //var StickConverter2 = new EnumToStringConverter<Sticks.StickType>();
-            // var BallConverter = new EnumToStringConverter<Balls.ColorType>();
-
-            // modelBuilder.Entity<Sticks>() 
-            // .Property(s => s.brandType)
-            // .HasConversion(StickConverter1);
-
-            // // modelBuilder.Entity<Sticks>()
-            // // .Property(s => s.stickType)
-            // // .HasConversion(StickConverter2);
-
-            // modelBuilder.Entity<Balls>() 
-            // .Property(b => b.colorType)
-            // .HasConversion(BallConverter);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/CartItemServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/CartItemServices.cs
deleted file mode 100644
index 20d34d5..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/CartItemServices.cs
+++ /dev/null
@@ -1,55 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-
-namespace lacrosseLib
-{
-    public class CartItemServices
-    {
-        private ICartItemsRepo repo;
-
-        public CartItemServices(ICartItemsRepo repo)
-        {
-            this.repo = repo;
-        }
-
-        public void AddCartItem(CartItem cartItem)
-        {
-            repo.AddCartItem(cartItem);
-        }
-
-        public void UpdateCartItem(CartItem cartItem) 
-        {
-            repo.UpdateCartItem(cartItem);
-        }
-
-        public CartItem GetCartItemByCartItemId(int cartItemId)
-        {
-            CartItem cartItem = repo.GetCartItemByCartItemId(cartItemId);
-            return cartItem;
-        }
-
-        public CartItem GetCartItemByCartId(int cartId)
-        {
-            CartItem cartItem = repo.GetCartItemByCartId(cartId);
-            return cartItem;
-        }
-
-        public CartItem GetCartItemByCustId(int custId) 
-        {
-            CartItem cartItem = repo.GetCartItemByCustId(custId);
-            return cartItem;
-        }
-
-        public List<CartItem> GetAllCartItemsByCartId(int cartId)
-        {
-            List<CartItem> cartItems = repo.GetAllCartItemsByCartId(cartId);
-            return cartItems;
-        }
-
-        public void DeleteCartItem(CartItem cartItem)
-        {
-            repo.DeleteCartItem(cartItem);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/CartServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/CartServices.cs
deleted file mode 100644
index 1952134..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/CartServices.cs
+++ /dev/null
@@ -1,42 +0,0 @@
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-
-namespace lacrosseLib
-{
-    public class CartServices
-    {
-        private ICartRepo repo;
-
-        public CartServices(ICartRepo repo)
-        {
-            this.repo = repo;
-        }
-
-        public void AddCart(Cart cart)
-        {
-            repo.AddCart(cart);
-        }
-
-        public void UpdateCart(Cart cart) 
-        {
-            repo.UpdateCart(cart);
-        }
-
-        public Cart GetCartByCartId(int cartId) 
-        {
-            Cart cart = repo.GetCartByCartId(cartId);
-            return cart;
-        }
-
-        public Cart GetCartByCustId(int custId) 
-        {
-            Cart cart = repo.GetCartByCustId(custId);
-            return cart;
-        }
-
-        public void DeleteCart(Cart cart) 
-        {
-            repo.DeleteCart(cart);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/CustomerServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/CustomerServices.cs
deleted file mode 100644
index 56ffecf..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/CustomerServices.cs
+++ /dev/null
@@ -1,49 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-
-namespace lacrosseLib
-{
-    public class CustomerServices
-    {
-        private ICustomerRepo custRepo;
-
-        public CustomerServices(ICustomerRepo custRepo)   
-        {
-            this.custRepo = custRepo;
-        }
-
-        public void AddCustomer(Customer customer) 
-        {
-            custRepo.AddCustomer(customer);
-        }
-
-        public void UpdateCustomer(Customer customer) 
-        {
-            custRepo.UpdateCustomer(customer);
-        }
-
-        public Customer GetCustomerByCustId(int custId) 
-        {
-            Customer customer = custRepo.GetCustomerByCustId(custId);
-            return customer;
-        }
-
-        public Customer GetCustomerByEmail(string email)
-        {
-            Customer customer = custRepo.GetCustomerByEmail(email);
-            return customer;
-        }
- 
-        public List<Customer> GetAllCustomers()
-        {
-            List<Customer> customers = custRepo.GetAllCustomers();
-            return customers;
-        }
-
-        public void DeleteCustomer(Customer customer)
-        {
-            custRepo.DeleteACustomer(customer);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/InventoryServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/InventoryServices.cs
deleted file mode 100644
index 7a8a5ae..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/InventoryServices.cs
+++ /dev/null
@@ -1,61 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-
-namespace lacrosseLib
-{
-    public class InventoryServices
-    {
-        private IInventoryRepo inventRepo;
-
-        public InventoryServices(IInventoryRepo inventRepo) {
-            this.inventRepo = inventRepo;
-        }
-
-        public void AddInventory(Inventory inventory) 
-        {
-            inventRepo.AddToInventory(inventory); 
-        }
-
-        public void UpdateInventory(Inventory inventory) 
-        {
-            inventRepo.UpdateInventory(inventory);
-        }
-
-        public Inventory GetInventoryItemByInventoryId(int intentoryId)
-        {
-            Inventory inventory = inventRepo.GetInventoryItemByInventoryId(intentoryId);
-            return inventory;
-        }
-
-        public Inventory GetInventoryItemByLocationId(int locationId) 
-        {
-            Inventory inventory = inventRepo.GetInventoryItemByLocationId(locationId);
-            return inventory;
-        }
-
-        public Inventory GetItemByLocIdStickId(int locId, int stickId)
-        {
-            Inventory inventory = inventRepo.GetInventoryByLocIdStickId(locId, stickId);
-            return inventory;
-        }
-
-        public List<Inventory> GetAllOfInventoryByInventoryId(int inventoryId)
-        {
-            List<Inventory> inventory = inventRepo.GetAllOfInventoryByInventoryId(inventoryId);
-            return inventory;
-        }
-
-        public List<Inventory> GetAllOfInventoryByLocationId (int locationId) 
-        {
-            List<Inventory> inventoryAtLocation = inventRepo.GetAllOfInventoryByLocationId(locationId);
-            return inventoryAtLocation;
-        }
-
-        public void DeleteInventory(Inventory inventory) 
-        {
-            inventRepo.DeleteInventory(inventory);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/LocationServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/LocationServices.cs
deleted file mode 100644
index b7a2dbb..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/LocationServices.cs
+++ /dev/null
@@ -1,43 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-
-namespace lacrosseLib
-{
-    public class LocationServices
-    {
-        private ILocationRepo locRepo;
-
-        public LocationServices(ILocationRepo locRepo) {
-            this.locRepo = locRepo;
-        }
-
-        public void AddLocation(Locations location) 
-        {
-            locRepo.AddLocation(location);
-        }
-
-        public void UpdateLocation(Locations location) 
-        {
-            locRepo.UpdateLocation(location);
-        }
-
-        public Locations GetLocationByLocationId(int locationId) 
-        {
-            Locations location = locRepo.GetLocationByLocationId(locationId);
-            return location;
-        }
-
-        public List<Locations> GetAllLocations() 
-        {
-            List<Locations> allLocations = locRepo.GetAllLocations();
-            return allLocations;
-        }
-
-        public void DeleteLocation(Locations location) 
-        {
-            locRepo.DeleteLocation(location);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/ManagerServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/ManagerServices.cs
deleted file mode 100644
index 9c8e3e9..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/ManagerServices.cs
+++ /dev/null
@@ -1,57 +0,0 @@
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-using System.Collections.Generic;
-
-namespace lacrosseLib
-{
-    public class ManagerServices
-    {
-        private IManagerRepo managerRepo;
-
-        public ManagerServices(IManagerRepo managerRepo)
-        {
-            this.managerRepo = managerRepo;
-        }
-
-        public void AddManager(Manager manager)
-        {
-            managerRepo.AddManager(manager);
-        }
-
-        public void UpdateManager(Manager manager)
-        {
-            managerRepo.UpdateManager(manager);
-        }
-
-        public Manager GetManagerByManId(int manId)
-        {
-            Manager manager = managerRepo.GetManagerByManId(manId);
-            return manager;
-        }
-
-        public Manager GetManagerByEmail(string email)
-        {
-            Manager manager = managerRepo.GetManagerByEmail(email);
-            return manager;
-        }
-
-        public List<Manager> GetAllManagers()
-        {
-            List<Manager> managers = managerRepo.GetAllManagers();
-            return managers;
-        }
-
-        public void DeleteManager(Manager manager)
-        {
-            managerRepo.DeleteManager(manager);
-        }
-
-        public Manager GetManagerByLocationId(int locID)
-        {
-            Manager manAtLoc = managerRepo.GetManagerByLocationId(locID);
-            return manAtLoc;
-        }
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/OrderServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/OrderServices.cs
deleted file mode 100644
index 2e0e6b4..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/OrderServices.cs
+++ /dev/null
@@ -1,90 +0,0 @@
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-using System.Collections.Generic;
-using System;
-
-namespace lacrosseLib
-{
-    public class OrderServices
-    {
-        private IOrderRepo orderRepo;
-
-        public OrderServices(IOrderRepo orderRepo)
-        {
-            this.orderRepo = orderRepo;
-        }
-        public void AddOrder(Orders order)
-        {
-            orderRepo.AddOrder(order);
-        }
-
-
-        public void UpdateOrder(Orders order)
-        {
-            orderRepo.UpdateOrder(order);
-        }
-
-        public Orders GetOrderByOrderId(int orderId)
-        {
-            Orders order = orderRepo.GetOrderByOrderId(orderId);
-            return order;
-        }
-
-        public Orders GetOrderByCustId(int custId)
-        {
-            Orders order = orderRepo.GetOrderByCustId(custId);
-            return order;
-        }
-
-        public Orders GetOrderByLocationId(int locationId)
-        {
-            Orders order = orderRepo.GetOrderByLocationId(locationId);
-            return order;
-        }
-
-        public List<Orders> GetAllOrdersByCustId(int custId)
-        {
-            List<Orders> orders = orderRepo.GetAllOrdersByCustId(custId);
-            return orders;
-        }
-
-        public List<Orders> GetAllOrdersByLocationId(int locationId)
-        {
-            List<Orders> orders = orderRepo.GetAllOrdersByLocationId(locationId);
-            return orders;
-        }
-
-        public void DeleteOrder(Orders order) {
-            orderRepo.DeleteOrder(order);
-        }
-
-        public List<Orders> GetAllOrdersByCustIdDateAsc(int custId)
-        {
-            List<Orders> orders = orderRepo.GetAllOrdersByCustIdDateAsc(custId);
-            return orders;
-        }
-        public List<Orders> GettAllOrdersByCustIdDateDesc(int custId)
-        {
-            List<Orders> orders = orderRepo.GettAllOrdersByCustIdDateDesc(custId);
-            return orders;
-        }
-        public List<Orders> GetAllOrdersByCustIdPriceAsc(int custId)
-        {
-            List<Orders> orders = orderRepo.GetAllOrdersByCustIdPriceAsc(custId);
-            return orders;
-        }
-        public List<Orders> GetAllOrdersByCustIdPriceDesc(int custId)
-        {
-            List<Orders> orders = orderRepo.GetAllOrdersByCustIdPriceDesc(custId);
-            return orders;
-        }
-        public Orders GetOrderByDate(DateTime dateTime)
-        {
-            Orders order = orderRepo.GetOrderByDate(dateTime);
-            return order;
-        }
-
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/ProductServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/ProductServices.cs
deleted file mode 100644
index 2e77133..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/ProductServices.cs
+++ /dev/null
@@ -1,36 +0,0 @@
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseDB.Models;
-using System.Collections.Generic;
-
-
-namespace lacrosseLib
-{
-    public class ProductServices
-    {
-        private IProductRepo prodRepo;
-
-        public ProductServices(IProductRepo prodRepo)
-        {
-            this.prodRepo = prodRepo;
-        }
-
-        public void AddStick(Sticks stick)
-        {
-            prodRepo.AddStick(stick);
-        }
-
-        public void DeleteStick(Sticks stick)
-        {
-            prodRepo.DeleteStick(stick);
-        }
-
-
-        public Sticks GetProductByStickId(int stickId)
-        {
-            Sticks stick = prodRepo.GetProductByStickId(stickId);
-            return stick;
-        }
-
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/ValidInvalidServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/ValidInvalidServices.cs
deleted file mode 100644
index 6c9a97f..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/ValidInvalidServices.cs
+++ /dev/null
@@ -1,60 +0,0 @@
-using System;
-using System.Collections.Generic;
-using System.Text.RegularExpressions;
-using lacrosseDB.Models;
-
-namespace lacrosseLib
-{
-    public class ValidInvalidServices
-    {
-        private CustomerServices customerServices;
-
-        public static Boolean InvalidQuanityOfItems(int locationQuan, int customerQuan)
-        {
-            if (locationQuan < customerQuan)
-            {
-                Console.WriteLine("You are trying to purchas an item that is not valid");
-                Console.WriteLine($"You have {(customerQuan - locationQuan)} too many item(s)");
-                return false;
-            }
-            return true;
-        }
-
-        public static void InvalidInput()
-        {
-            Console.WriteLine("Invalid, please try again");
-        }
-
-        public void InvalidEmail()
-        {
-            Console.WriteLine("You have entered and invalid email, try again.");
-        }
-
-        public static Boolean ValidEmail(string email)
-        {
-            if (Regex.IsMatch(email, @"^[a-z0-9.]+@[a-z0-9]+[\.][a-z]", RegexOptions.IgnoreCase))
-            {
-                return true;
-            }
-            else
-            {
-                Console.WriteLine("The email address entered is not a vaild email address.");
-                return false;
-            }
-        }
-
-        public Boolean IsUniqueEmail(string email, List<Customer> custs)
-        {
-            foreach (Customer cust in custs)
-            {
-                if (cust.email == email)
-                {
-                    Console.WriteLine("The email is already being used by another customer, try again.");
-                    return false;
-                }
-            }
-            return true;
-
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/lacrosseLib.csproj b/Lacrosse101_P0/lacrosse101/lacrosseLib/lacrosseLib.csproj
deleted file mode 100644
index f88ab73..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/lacrosseLib.csproj
+++ /dev/null
@@ -1,11 +0,0 @@
-<Project Sdk="Microsoft.NET.Sdk">
-
-  <PropertyGroup>
-    <TargetFramework>netstandard2.0</TargetFramework>
-  </PropertyGroup>
-
-    <ItemGroup>
-    <ProjectReference Include="..\lacrosseDB\lacrosseDB.csproj" />
-  </ItemGroup>
-
-</Project>
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseLib/lineItemServices.cs b/Lacrosse101_P0/lacrosse101/lacrosseLib/lineItemServices.cs
deleted file mode 100644
index 45f095b..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseLib/lineItemServices.cs
+++ /dev/null
@@ -1,39 +0,0 @@
-using System.Collections.Generic;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-
-namespace lacrosseLib
-{
-    public class lineItemServices
-    {
-        private ILineItemRepo repo;
-
-        public lineItemServices(ILineItemRepo repo)
-        {
-            this.repo = repo;
-        }
-
-        public void AddLineItem(lineItem lineItem)
-        {
-            repo.AddLineItem(lineItem);
-        }
-        public void UpdateLineItem(lineItem lineItem)
-        {
-            repo.UpdateLineItem(lineItem);
-        }
-        public lineItem GetLineItemByOrderId(int orderId)
-        {
-            lineItem lineItem = repo.GetLineItemByOrderId(orderId);
-            return lineItem;
-        }
-        public List<lineItem> GetAllLineItemsByOrderId(int orderId)
-        {
-            List<lineItem> lineItems = repo.GetAllLineItemsByOrderId(orderId);
-            return lineItems;
-        }
-        public void DeleteLineItem(lineItem lineItem)
-        {
-            repo.DeleteLineItem(lineItem);
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseTest/UnitTest1.cs b/Lacrosse101_P0/lacrosse101/lacrosseTest/UnitTest1.cs
deleted file mode 100644
index 382e3a4..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseTest/UnitTest1.cs
+++ /dev/null
@@ -1,112 +0,0 @@
-using System.Collections.Generic;
-using System.Linq;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using Xunit;
-
-namespace lacrosseTest
-{
-    public class UnitTest1
-    {
-        [Fact]
-        public void GetAllCustomerShouldGetAllCustomers()
-        {
-            using var tester = new lacrosseContext();
-            ICustomerRepo custRepo = new DBRepo(tester);
-            List<Customer> custResult = custRepo.GetAllCustomers();
-            Assert.NotNull(custResult);
-        }
-
-        [Fact]
-        public void AddCustomerShouldAddCustomer()
-        {
-            using var tester = new lacrosseContext();
-            ICustomerRepo custRepo = new DBRepo(tester);
-            Customer newCust = new Customer();
-            newCust.FirstName = "NewCustFirst";
-            newCust.LastName = "NewCustLast";
-            newCust.email = "newCust@gmail.com";
-            newCust.LocationId = 2;
-
-            custRepo.AddCustomer(newCust);
-            Assert.NotNull(tester.Customer.Single(c => c.email == newCust.email));
-            custRepo.DeleteACustomer(newCust);
-        }
-
-        // [Fact]
-        // public void AddProductShouldAdd()
-        // {
-        //     using var TContext = new lacrosseContext();
-        //     IProductRepo repo = new DBRepo(TContext);
-        //     Product testerBall = new Balls(5.00, "Purple Lacrosse Ball");
-        //     repo.AddProduct(testerBall);
-        //     Assert.NotNull(TContext.Product.Single(b => b.description == testerBall.description));
-        //     repo.DeleteProduct(testerBall);
-        // }
-
-        [Fact]
-        public void GetAllManagersShouldGetAllManagers()
-        {
-            using var tester = new lacrosseContext();
-            IManagerRepo repo = new DBRepo(tester);
-            List<Manager> manResult = repo.GetAllManagers();
-            Assert.NotNull(manResult);
-        }
-
-        [Fact]
-        public void GetCustomerByEmailShouldGetCustomer()
-        {
-            using var testContext = new lacrosseContext();
-            ICustomerRepo repo = new DBRepo(testContext);
-
-            Customer test = new Customer();
-            test.FirstName = "Test Name";
-            test.LastName = "Test LName";
-            test.email = "testUser@email.com";
-            test.LocationId = 1;
-            repo.AddCustomer(test);            
-
-            Customer result = repo.GetCustomerByEmail(test.email);
-
-            Assert.NotNull(result);
-
-            repo.DeleteACustomer(test);
-        }
-
-        [Fact]
-        public void UpdateCustomerShouldUpdateCustomer()
-        {
-            using var testContext = new lacrosseContext();
-            ICustomerRepo repo = new DBRepo(testContext);
-            
-            Customer testUser = new Customer();
-            testUser.FirstName = "Test Name";
-            testUser.LastName = "Test LName";
-            testUser.email = "testUser@email.com";
-            testUser.LocationId = 1;
-            repo.AddCustomer(testUser);
-
-            testUser.LastName = "Different LName";
-            repo.UpdateCustomer(testUser);
-            var result = repo.GetCustomerByEmail(testUser.email);
-
-            Assert.Equal("Different LName", result.LastName);
-
-            repo.DeleteACustomer(testUser);
-        }
-
-        // [Fact]
-        // public void AddOrderShouldAddOrder()
-        // {
-        //     using var test = new lacrosseContext();
-        //     IOrderRepo repo = new DBRepo(test);
-            
-        // }
-
-    }
-}
-
-
-
-
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CheckoutMenu.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CheckoutMenu.cs
deleted file mode 100644
index 53a4acb..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CheckoutMenu.cs
+++ /dev/null
@@ -1,116 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class CheckoutMenu : IMenu
-    {
-        private string custInput;
-        private Customer customer;
-        private ICustomerRepo customerRepo;
-        private CustomerServices customerServices;
-        private ILocationRepo locationRepo;
-        private LocationServices locationServices;
-        private IInventoryRepo inventoryRepo;
-        private InventoryServices inventoryServices;
-        private IProductRepo productRepo;
-        private ProductServices productServices;
-        private ICartRepo cartRepo;
-        private CartServices cartServices;
-        private ICartItemsRepo cartItemsRepo;
-        private CartItemServices cartItemServices;
-        private IOrderRepo orderRepo;
-        private OrderServices orderServices;
-        private ILineItemRepo lineItemRepo;
-        private lineItemServices lineItemServices;
-
-        public CheckoutMenu(Customer customer, lacrosseContext context, ICustomerRepo customerRepo, ILocationRepo locationRepo, IInventoryRepo inventoryRepo, IProductRepo productRepo, ICartRepo cartRepo, ICartItemsRepo cartItemsRepo, IOrderRepo orderRepo, ILineItemRepo lineItemRepo)
-        {
-            this.customer = customer;
-            this.customerRepo = customerRepo;
-            this.inventoryRepo = inventoryRepo;
-            this.locationRepo = locationRepo;
-            this.productRepo = productRepo;
-            this.orderRepo = orderRepo;
-            this.cartRepo = cartRepo;
-            this.cartItemsRepo = cartItemsRepo;
-            this.lineItemRepo = lineItemRepo;
-            this.customerServices = new CustomerServices(customerRepo);
-            this.locationServices = new LocationServices(locationRepo);
-            this.inventoryServices = new InventoryServices(inventoryRepo);
-            this.productServices = new ProductServices(productRepo);
-            this.cartServices = new CartServices(cartRepo);
-            this.cartItemServices = new CartItemServices(cartItemsRepo);
-            this.orderServices = new OrderServices(orderRepo);
-            this.lineItemServices = new lineItemServices(lineItemRepo);
-        }
-
-        public void Start()
-        {
-            do
-            {
-                Cart cart = cartServices.GetCartByCustId(customer.Id);
-                List<CartItem> ci = cartItemServices.GetAllCartItemsByCartId(cart.Id);
-                Console.WriteLine("These are the items in your cart");
-                foreach(CartItem item in ci)
-                {
-                    Sticks stick = productServices.GetProductByStickId(item.stickId);
-                    Console.WriteLine($"{stick.description} \t${stick.Price}");
-                }
-                Console.WriteLine("Welcome to check out! If there is anything you forget go back otherwise proceed to checkout. Thank you for Shopping with us.");
-                Console.WriteLine("[0] Back \n[2] Checkout");
-                custInput = Console.ReadLine();
-                switch(custInput)
-                {
-                    case "0":
-                        break;
-
-                    case "2":
-                        CheckOutItems();
-                        break;
-
-                    default:
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-
-            } while (!(custInput.Equals("0")));
-        }
-
-        public void CheckOutItems()
-        {
-            Cart cart = cartServices.GetCartByCustId(customer.Id);
-            List<CartItem> items = cartItemServices.GetAllCartItemsByCartId(cart.Id);
-            Orders order = new Orders();
-            double total = 0;
-            order.CustomersId = customer.Id;
-            order.LocationId = customer.LocationId;
-            DateTime dateOfOrder = order.dateOfOrder = DateTime.Now;
-            orderServices.AddOrder(order);
-            Orders orderToProcess = orderServices.GetOrderByDate(dateOfOrder);
-            Console.WriteLine("You imaginary order has been placed. You will revieve it never. \n");
-            foreach(CartItem item in items)
-            {
-                lineItem lineItem = new lineItem();
-                Sticks stick = productServices.GetProductByStickId(item.stickId);
-                lineItem.orderId = orderToProcess.Id;
-                lineItem.stickId = item.stickId;
-                lineItem.price = stick.Price;
-                lineItem.quantity = item.quantity;
-                total += (stick.Price * item.quantity);
-                lineItemServices.AddLineItem(lineItem);
-                cartItemServices.DeleteCartItem(item);
-                Inventory inventory = inventoryServices.GetItemByLocIdStickId(customer.LocationId, stick.Id);
-                inventory.quantity -= item.quantity;
-
-            }
-            order.TotalPrice = total;
-            orderServices.UpdateOrder(orderToProcess);
-            Console.WriteLine($"\nYour total was: ${order.TotalPrice}");
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CustMenu.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CustMenu.cs
deleted file mode 100644
index f1f234b..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/CustMenu.cs
+++ /dev/null
@@ -1,58 +0,0 @@
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-using System;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class CustMenu : IMenu
-    {
-        private string custInpt;
-        private Customer customer;
-        private OrderHistoryMenu orderHistoryMenu;
-        private ProductDetails1 productDetails;
-        private CheckoutMenu checkout;
-
-        public CustMenu(Customer customer, lacrosseContext context)
-        {
-            this.customer = customer;
-            this.orderHistoryMenu = new OrderHistoryMenu(customer, context, new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-            this.productDetails = new ProductDetails1(customer, context, new DBRepo(context), new DBRepo(context), new DBRepo(context));
-            this.checkout = new CheckoutMenu(customer, context,new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context),new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-        }
-
-        public void Start()
-        {
-            do
-            {
-                Console.WriteLine("Please select one of the options below: ");
-                Console.WriteLine("[0] Exit \n[1] View Order History \n[2] Browse Products \n[3] View Cart");
-                custInpt = Console.ReadLine();
-                switch (custInpt)
-                {
-                    case "0":
-                        break;
-
-                    case "1":
-                        orderHistoryMenu.Start();
-                        break;
-
-                    case "2":
-                        productDetails.Start();
-                        break;
-
-                    case "3":
-                        checkout.Start();
-                        break;
-
-                    default:
-                        Console.WriteLine("oops");
-                        ValidInvalidServices.InvalidInput();
-                        break;
-
-                }
-            } while (!(custInpt.Equals("0")));
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/IMenu.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/IMenu.cs
deleted file mode 100644
index 6184c25..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/IMenu.cs
+++ /dev/null
@@ -1,10 +0,0 @@
-namespace lacrosseUI.Lacrosse101Menus
-{
-    /// <summary>
-    /// IMenu interface which the other menu classes with implement from 
-    /// </summary>
-    public interface IMenu
-    {   
-        void Start(); 
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/LaunchMenu.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/LaunchMenu.cs
deleted file mode 100644
index 96d9883..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/LaunchMenu.cs
+++ /dev/null
@@ -1,222 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-using Serilog;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    /// <summary>
-    /// this is the menu the shopper will see upon launching the store
-    /// </summary>
-    public class LaunchMenu : IMenu
-    {
-        private string shoperInput;
-        private Customer customer;
-        private ICustomerRepo custRepo;
-        private CustomerServices customerServices;
-        private ILocationRepo locRepo;
-        private LocationServices locationServices;
-        private ICartRepo cartRepo;
-        private CartServices cartServices;
-        private Manager manager;
-        private IManagerRepo managerRepo;
-        private ManagerServices managerServices;
-        private ValidInvalidServices validInvalidServices;
-        private lacrosseContext context;
-
-        public LaunchMenu(lacrosseContext context, ICustomerRepo custRepo, IManagerRepo managerRepo, ILocationRepo locRepo, ICartRepo cartRepo)
-        {
-            this.context = context;
-            this.custRepo = custRepo;
-            this.locRepo = locRepo;
-            this.cartRepo = cartRepo;
-            this.managerRepo = managerRepo;
-            this.customerServices = new CustomerServices(custRepo);
-            this.locationServices = new LocationServices(locRepo);
-            this.cartServices = new CartServices(cartRepo);
-            this.managerServices = new ManagerServices(managerRepo);
-        }
-
-
-        /// <summary>
-        /// Here start() allows the shopper/employee to be directed to the correct domain of the shop
-        /// </summary>
-        public void Start()
-        {
-            do
-            {
-                Console.WriteLine("Welcome to Lacrosse101, a store for all your lacrosse needs!");
-                Console.WriteLine("Please choose one of the options below by typing the correspoing number.");
-                Console.WriteLine("[0] Exit the Store \n[1] New Shopper \n[2] Store Manager \n[3] Returning Shopper Shop Equipment Here");
-                shoperInput = Console.ReadLine();
-                switch (shoperInput)
-                {
-                    case "3":
-                        Console.WriteLine("Welcome Shopper!");
-                        Customer cust = CustomerValidation();
-                        break;
-                    case "1":
-                        Customer newCust = NewCustomerValidation();
-                        customerServices.AddCustomer(newCust);
-                        break;
-                    case "2":
-                        Console.WriteLine("Welcome Manager!");
-                        Manager man = ManagerValidation();
-                        break;
-                    case "0":
-                        Console.WriteLine("Goodbye!");
-                        // this line will exit the current session 
-                        Environment.Exit(0);
-                        break;
-                    default:
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-            } while (!shoperInput.Equals("3"));
-        }
-
-        public Customer CustomerValidation()
-        {
-            string filepath = "../lacrosseDB/DBFiles/Customer.txt";
-            Log.Logger = new LoggerConfiguration()
-            .MinimumLevel.Debug()
-            .WriteTo.File(filepath, rollingInterval: RollingInterval.Day)
-            .CreateLogger();
-
-            string email;
-            Customer cust = new Customer();
-            Console.WriteLine("Enter email");
-            email = Console.ReadLine();
-            try
-            {
-                cust = customerServices.GetCustomerByEmail(email);
-                if (cust.email != email)
-                    throw new System.ArgumentException();
-                else
-                {
-                    customer = cust;
-                    Log.Information($"{cust.email} has signed in");
-                    CustMenu custMenu = new CustMenu(customer, context);
-                    try
-                    {
-                        cartServices.DeleteCart(cartServices.GetCartByCustId(customer.Id));
-                    }
-                    catch (InvalidOperationException) { }
-                    finally
-                    {
-                        Cart newCart = new Cart();
-                        newCart.custId = customer.Id;
-                        cartServices.AddCart(newCart);
-                        custMenu.Start();
-                    }
-                }
-            }
-            catch (ArgumentException)
-            {
-                Log.Information($"Customer {cust.email} tried and failed to login.");
-                ValidInvalidServices.InvalidInput();
-            }
-            catch (InvalidOperationException)
-            {
-                Log.Information($"Customer tried to sign into an account the DNE.");
-                ValidInvalidServices.InvalidInput();
-            }
-            return cust;
-        }
-
-        public Customer NewCustomerValidation()
-        {
-            string NewLoc;
-            List<Customer> custs = customerServices.GetAllCustomers();
-            Customer cust = new Customer();
-            do
-            {
-                Console.WriteLine("Enter First Name: ");
-                cust.FirstName = Console.ReadLine();
-                Console.WriteLine("Enter Last Name: ");
-                cust.LastName = Console.ReadLine();
-                Console.WriteLine("Enter email: ");
-                cust.email = Console.ReadLine();
-            } while (ValidInvalidServices.ValidEmail(cust.email) == false && validInvalidServices.IsUniqueEmail(cust.email, custs) == false);
-            Boolean keepRunning = true;
-            do
-            {
-                Console.WriteLine("Choose from the follow locations: ");
-                Console.WriteLine("[1] Location 1 \n[2] Location 2 \n[3] Location 3");
-                NewLoc = Console.ReadLine();
-                switch (NewLoc)
-                {
-                    case "1":
-                        cust.LocationId = 1;
-                        keepRunning = false;
-                        break;
-
-                    case "2":
-                        cust.LocationId = 2;
-                        keepRunning = false;
-                        break;
-
-                    case "3":
-                        cust.LocationId = 3;
-                        keepRunning = false;
-                        break;
-
-                    default:
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-            } while (keepRunning);
-            Console.WriteLine("New Customer Created");
-            return cust;
-        }
-
-        public Manager ManagerValidation()
-        {
-            string filepath = "../lacrosseDB/DBFiles/Manager.txt";
-            Log.Logger = new LoggerConfiguration()
-            .MinimumLevel.Debug()
-            .WriteTo.File(filepath, rollingInterval: RollingInterval.Day)
-            .CreateLogger();
-
-            List<Manager> print = managerServices.GetAllManagers();
-            Console.WriteLine("Managers:");
-            foreach (Manager m in print)
-            {
-                managerServices.GetManagerByManId(m.Id);
-                Console.WriteLine($"{m.FirstName} ");
-            }
-
-            string email;
-            Manager man = new Manager();
-            Console.WriteLine("Enter email");
-            email = Console.ReadLine();
-            try
-            {
-                man = managerServices.GetManagerByEmail(email);
-                if (man.email != email)
-                    throw new System.ArgumentException();
-                else
-                {
-                    manager = man;
-                    Log.Information($"{man.email} has signed in");
-                    ManagerLogin manLogin = new ManagerLogin(man, context, new DBRepo(context), new DBRepo(context));
-                    manLogin.Start();
-                }
-            }
-            catch (ArgumentException)
-            {
-                Log.Information($"Manager {man.email} tried and failed to login.");
-                ValidInvalidServices.InvalidInput();
-            }
-            catch (InvalidOperationException)
-            {
-                Log.Information($"Manager tried to sign into an account the DNE.");
-                ValidInvalidServices.InvalidInput();
-            }
-            return man;
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ManagerLogin.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ManagerLogin.cs
deleted file mode 100644
index b359ca6..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ManagerLogin.cs
+++ /dev/null
@@ -1,56 +0,0 @@
-using System;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    /// <summary>
-    /// This is the login menu for a store manager
-    /// </summary>
-    public class ManagerLogin : IMenu
-    {
-        /// <summary>
-        /// Here start() asks for the manager to input their credientals 
-        /// </summary>
-        private string manInput;
-        private Manager manager;
-        private ICustomerRepo custRepo;
-        private CustomerServices custServices;
-        private ILocationRepo locRepo;
-        private LocationServices locServices;
-        private ReplenishInventory replenishInventory;
-
-        public ManagerLogin(Manager manager, lacrosseContext context, ICustomerRepo custRepo, ILocationRepo locRepo)
-        {
-            this.manager = manager;
-            this.custRepo = custRepo;
-            this.locRepo = locRepo;
-            this.custServices = new CustomerServices(custRepo);
-            this.locServices = new LocationServices(locRepo);
-            this.replenishInventory = new ReplenishInventory(manager, context, new DBRepo(context), new DBRepo(context), new DBRepo(context));
-        }
-
-        public void Start()
-        {
-            do
-            {
-                System.Console.WriteLine("Please select an option below: ");
-                System.Console.WriteLine("[0] Exit \n[1] Manage Inventory");
-
-                manInput = System.Console.ReadLine();
-                switch (manInput)
-                {
-                    case "1":
-                        replenishInventory.Start();
-                        break;
-                    case "0":
-                        System.Console.WriteLine($"Thank you, {manager.FirstName}. Goodbye!");
-                        Environment.Exit(0);
-                        break;
-                }
-            } while(!(manInput.Equals("0")));
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/OrderHistoryMenu.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/OrderHistoryMenu.cs
deleted file mode 100644
index 461a56f..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/OrderHistoryMenu.cs
+++ /dev/null
@@ -1,117 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class OrderHistoryMenu : IMenu
-    {
-        private string custInput;
-        private Customer customer;
-        private ICustomerRepo customerRepo;
-        private CustomerServices customerServices;
-        private IInventoryRepo inventoryRepo;
-        private InventoryServices inventoryService;
-        private IProductRepo productRepo;
-        private ProductServices productServices;
-        private IOrderRepo orderRepo;
-        private OrderServices orderService;
-        private ILocationRepo locationRepo;
-        private LocationServices locationService;
-
-        public OrderHistoryMenu(Customer customer, lacrosseContext context, ICustomerRepo customerRepo, IInventoryRepo inventoryRepo, IProductRepo productRepo, IOrderRepo orderRepo, ILocationRepo locationRepo)
-        {
-            this.customer = customer;
-            this.customerRepo = customerRepo;
-            this.productRepo = productRepo;
-            this.orderRepo = orderRepo;
-            this.inventoryRepo = inventoryRepo;
-            this.locationRepo = locationRepo;
-            this.customerServices = new CustomerServices(customerRepo);
-            this.locationService = new LocationServices(locationRepo);
-            this.productServices = new ProductServices(productRepo);
-            this.orderService = new OrderServices(orderRepo);
-            this.inventoryService = new InventoryServices(inventoryRepo);
-        }
-
-        public void Start()
-        {
-            do
-            {
-                Console.WriteLine("Welcome to your order history, please select one of the options below: ");
-                Console.WriteLine("[0] Go back \n[1] Sort By Date Asc \n[2] Sort By Date Desc \n[3] Sort By Price Asc \n[4] Sort By Price Desc");
-
-                custInput = Console.ReadLine();
-                switch (custInput)
-                {
-                    case "0":
-                        break;
-                    case "1":
-                        GetOrdersByDateAsc();
-                        break;
-                    case "2":
-                        GetOrdersByDateDesc();
-                        break;
-                    case "3":
-                        GetOrdersByPriceAsc();
-                        break;
-                    case "4":
-                        GetOrdersByPriceDesc();
-                        break;
-                    default:
-                        ValidInvalidServices.InvalidInput();
-                        break;
-
-                }
-            } while (!(custInput.Equals("0")));
-        }
-
-
-        public void GetOrdersByDateAsc()
-        {
-            Console.WriteLine("Your orders by Date in ascending order");
-            List<Orders> custOrders = orderService.GetAllOrdersByCustIdDateAsc(customer.Id);
-            foreach(Orders order in custOrders) 
-            {
-                Locations location = locationService.GetLocationByLocationId(order.LocationId);
-                Console.WriteLine($"Date of Order: {order.dateOfOrder} \tTotal: ${order.TotalPrice} \tStore Number: {order.LocationId} \n");
-            }
-        }
-
-        public void GetOrdersByDateDesc()
-        {
-            Console.WriteLine("Your orders by Date in desending order");
-            List<Orders> custOrders = orderService.GettAllOrdersByCustIdDateDesc(customer.Id);
-            foreach(Orders order in custOrders) 
-            {
-                Locations location = locationService.GetLocationByLocationId(order.LocationId);
-                Console.WriteLine($"Date of Order: {order.dateOfOrder} \tTotal: ${order.TotalPrice} \tStore Number: {order.LocationId} \n");
-            }
-        }
-
-        public void GetOrdersByPriceAsc()
-        {
-            Console.WriteLine("Your orders by Price in ascending order");
-            List<Orders> custOrders = orderService.GetAllOrdersByCustIdPriceAsc(customer.Id);
-            foreach(Orders order in custOrders) 
-            {
-                Locations location = locationService.GetLocationByLocationId(order.LocationId);
-                Console.WriteLine($"Date of Order: {order.dateOfOrder} \tTotal: ${order.TotalPrice} \tStore Number: {order.LocationId} \n");
-            }
-        }
-
-        public void GetOrdersByPriceDesc() 
-        {
-            Console.WriteLine("Your orders by Price in desending order");
-            List<Orders> custOrders = orderService.GetAllOrdersByCustIdPriceDesc(customer.Id);
-            foreach(Orders order in custOrders) 
-            {
-                Locations location = locationService.GetLocationByLocationId(order.LocationId);
-                Console.WriteLine($"Date of Order: {order.dateOfOrder} \tTotal: ${order.TotalPrice} \tStore Number: {order.LocationId} \n");
-            }
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails1.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails1.cs
deleted file mode 100644
index 0a80c09..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails1.cs
+++ /dev/null
@@ -1,90 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class ProductDetails1 : IMenu
-    {
-        private string custInput;
-        private Sticks sticks;
-        private Customer customer;
-        private lacrosseContext context;
-        private ICustomerRepo customerRepo;
-        private CustomerServices customerServices;
-        private IProductRepo productRepo;
-        private ProductServices productServices;
-        private IInventoryRepo inventoryRepo;
-        private InventoryServices inventoryServices;
-        private ProductDetails2 productDetails2;
-
-        public ProductDetails1(Customer customer, lacrosseContext context, ICustomerRepo customerRepo, IInventoryRepo inventoryRepo, IProductRepo productRepo)
-        {
-            this.customer = customer;
-            this.context = context;
-            this.customerRepo = customerRepo;
-            this.inventoryRepo = inventoryRepo;
-            this.productRepo = productRepo;
-            this.customerServices = new CustomerServices(customerRepo);
-            this.inventoryServices = new InventoryServices(inventoryRepo);
-            this.productServices = new ProductServices(productRepo);
-        }
-
-        public void Start()
-        {
-            do
-            {
-                Console.WriteLine("Select From Our Lacrosse Sticks Below: ");
-                List<Inventory> items = GetProductsForCustomerLocation();
-                Console.WriteLine("[0] Exit");
-                foreach(Inventory item in items)
-                {
-                    Sticks product = productServices.GetProductByStickId(item.stickId);
-                    Console.WriteLine($"[{product.Id}]: {product.description}, ${product.Price}, remaining: {item.quantity}");
-                }
-
-                custInput = Console.ReadLine();
-                switch (custInput)
-                {
-                    case "0":
-                        break;
-                        
-                    case "1":
-                        sticks = productServices.GetProductByStickId(1);
-                        productDetails2 = new ProductDetails2(customer, sticks, context, new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-                        productDetails2.Start();
-                        break;
-
-                    case "2":
-                        sticks = productServices.GetProductByStickId(2);
-                        productDetails2 = new ProductDetails2(customer, sticks, context, new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-                        productDetails2.Start();
-                        break;
-
-                    case "3":
-                        sticks = productServices.GetProductByStickId(3);
-                        productDetails2 = new ProductDetails2(customer, sticks, context, new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-                        productDetails2.Start();
-                        break;
-
-                    default:
-                        Console.WriteLine("oppps");
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-
-            } while (!(custInput.Equals("0")));
-        }
-
-        public List<Inventory> GetProductsForCustomerLocation()
-        {
-            List<Inventory> items;
-            int locationId = customer.LocationId;
-            items = inventoryServices.GetAllOfInventoryByLocationId(locationId);
-            return items;
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails2.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails2.cs
deleted file mode 100644
index 202f79d..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ProductDetails2.cs
+++ /dev/null
@@ -1,82 +0,0 @@
-using System;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class ProductDetails2 : IMenu
-    {
-        private string custInput;
-        private Customer customer;
-        private int inventoryQuantity;
-        private Sticks stick;
-        private ICustomerRepo customerRepo;
-        private CustomerServices customerServices;
-        private IInventoryRepo inventoryRepo;
-        private InventoryServices inventoryServices;
-        private IProductRepo productRepo;
-        private ProductServices productServices;
-        private ICartRepo cartRepo;
-        private CartServices cartServices;
-        private ICartItemsRepo cartItemsRepo;
-        private CartItemServices cartItemServices;
-
-
-        public ProductDetails2(Customer customer, Sticks stick, lacrosseContext context, ICustomerRepo customerRepo, IInventoryRepo inventoryRepo, IProductRepo productRepo, ICartRepo cartRepo, ICartItemsRepo cartItemsRepo)
-        {
-            this.customer = customer;
-            this.stick = stick;
-            this.customerRepo = customerRepo;
-            this.productRepo = productRepo;
-            this.cartRepo = cartRepo;
-            this.cartItemsRepo = cartItemsRepo;
-            this.inventoryRepo = inventoryRepo;
-            this.customerServices = new CustomerServices(customerRepo);
-            this.inventoryServices = new InventoryServices(inventoryRepo);
-            this.productServices = new ProductServices(productRepo);
-            this.cartServices = new CartServices(cartRepo);
-            this.cartItemServices = new CartItemServices(cartItemsRepo);
-        }
-        public void Start()
-        {
-            do
-            {
-                Inventory selected = inventoryServices.GetItemByLocIdStickId(customer.LocationId, stick.Id);
-                inventoryQuantity = selected.quantity;
-
-                Console.WriteLine("The item you have selected: ");
-                Console.WriteLine($"{stick.description} \t${stick.Price}");
-
-                Console.WriteLine("Would you like to add this item to cart?");
-                Console.WriteLine("[0] No \n[1] Yes");
-                custInput = Console.ReadLine();
-                switch (custInput)
-                {
-                    case "0":
-                        break;
-                    case "1":
-                        int quantity;
-
-                        do
-                        {
-                            Console.WriteLine("How many would you like of this item?");
-                            quantity = Int32.Parse(Console.ReadLine());
-                        } while (ValidInvalidServices.InvalidQuanityOfItems(inventoryQuantity, quantity) == false);
-                        CartItem ci = new CartItem();
-                        Cart custCart = cartServices.GetCartByCustId(customer.Id);
-                        ci.cartId = custCart.Id;
-                        ci.stickId = stick.Id;
-                        ci.quantity = quantity;
-                        cartItemServices.AddCartItem(ci);
-                        Console.WriteLine("Your item has been added to your cart");
-                        break;
-                    default:
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-            } while (!(custInput.Equals("1")));
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ReplenishInventory.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ReplenishInventory.cs
deleted file mode 100644
index 497839d..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Lacrosse101Menus/ReplenishInventory.cs
+++ /dev/null
@@ -1,125 +0,0 @@
-using System;
-using System.Collections.Generic;
-using lacrosseDB;
-using lacrosseDB.Models;
-using lacrosseDB.Repos;
-using lacrosseLib;
-
-namespace lacrosseUI.Lacrosse101Menus
-{
-    public class ReplenishInventory : IMenu
-    {
-        private string manInput;
-        private string manInput2;
-        private Manager manager;
-        private int selectedLoc;
-        private Sticks sticks;
-        private Inventory Selectedinventory;
-        private ProductServices productServices;
-        private LocationServices locationServices;
-        private InventoryServices inventoryServices;
-        private IProductRepo productRepo;
-        private ILocationRepo locationRepo;
-        private IInventoryRepo inventoryRepo;
-        private lacrosseContext context;
-
-        public ReplenishInventory(Manager manager, lacrosseContext context, ILocationRepo locationRepo, IInventoryRepo inventoryRepo, IProductRepo productRepo)
-        {
-            this.manager = manager;
-            this.context = context;
-            this.locationRepo = locationRepo;
-            this.inventoryRepo = inventoryRepo;
-            this.productRepo = productRepo;
-            this.locationServices = new LocationServices(locationRepo);
-            this.inventoryServices = new InventoryServices(inventoryRepo);
-            this.productServices = new ProductServices(productRepo);
-        }
-        public void Start()
-        {
-            do
-            {
-                Console.WriteLine("Welcome manager, follow the steps below to replenish the stock.");
-
-                Console.WriteLine("Select a location to replenish inventory at:");
-                Console.WriteLine("[0] Exit \n[1] Location 1 \n[2] Location 2 \n[3] Location 3");
-
-                manInput = Console.ReadLine();
-                selectedLoc = Int32.Parse(manInput);
-                switch (manInput)
-                {
-                    case "0":
-                        break;
-
-                    case "1":
-                        ManageInventory(1);
-                        break;
-
-                    case "2":
-                        ManageInventory(2);
-                        break;
-
-                    case "3":
-                        ManageInventory(3);
-                        break;
-
-                    default:
-                        Console.WriteLine("oops");
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-
-            } while (!(manInput.Equals("0")));
-        }
-
-        public List<Inventory> GetProductsByLocation(int locId)
-        {
-            List<Inventory> inventories = inventoryServices.GetAllOfInventoryByLocationId(locId);
-            return inventories;
-        }
-
-        public void ManageInventory(int locationId)
-        {
-            do
-            {
-                Console.WriteLine("Select which item to replenish by selecting the number in brackets.");
-                List<Inventory> items = GetProductsByLocation(locationId);
-                Console.WriteLine("[0] Back");
-
-                foreach (Inventory item in items)
-                {
-                    Sticks product = productServices.GetProductByStickId(item.stickId);
-                    Console.WriteLine($"[{product.Id}] {product.description}, remaining: {item.quantity}");
-                }
-                manInput2 = Console.ReadLine();
-                switch (manInput2)
-                {
-                    case "0":
-                        break;
-                    case "1":
-                        updateStock(1);
-                        break;
-                    case "2":
-                        updateStock(2);
-                        break;
-                    case "3":
-                        updateStock(3);
-                        break;
-                    default:
-                        Console.WriteLine("oops");
-                        ValidInvalidServices.InvalidInput();
-                        break;
-                }
-            } while(!(manInput2.Equals("0")));
-        }
-
-        public void updateStock(int stickId)
-        {
-            Selectedinventory = inventoryServices.GetItemByLocIdStickId(selectedLoc, stickId);
-            Console.WriteLine("How much of this item would you like to add to the inventory?");
-            int toAdd = Int32.Parse(Console.ReadLine());
-            Selectedinventory.quantity = toAdd + Selectedinventory.quantity;
-            inventoryServices.UpdateInventory(Selectedinventory);
-            Console.WriteLine("The stock of this item has been updated!");
-        }
-    }
-}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/Program.cs b/Lacrosse101_P0/lacrosse101/lacrosseUI/Program.cs
deleted file mode 100644
index 004cf7c..0000000
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/Program.cs
+++ /dev/null
@@ -1,17 +0,0 @@
-ï»¿using System;
-using lacrosseDB;
-using lacrosseDB.Repos;
-using lacrosseUI.Lacrosse101Menus;
-
-namespace lacrosseUI
-{
-    class Program
-    {
-        static void Main(string[] args)
-        {
-            lacrosseContext context = new lacrosseContext();
-            IMenu menu = new LaunchMenu(context, new DBRepo(context), new DBRepo(context), new DBRepo(context), new DBRepo(context));
-            menu.Start();
-        }
-    }
-}
diff --git a/Lacrosse101_P0/p0_ERd.png b/Lacrosse101_P0/p0_ERd.png
deleted file mode 100644
index 2e2215f..0000000
Binary files a/Lacrosse101_P0/p0_ERd.png and /dev/null differ
diff --git a/SavvyDB/Entities/CartItems.cs b/SavvyDB/Entities/CartItems.cs
new file mode 100644
index 0000000..18fb9f8
--- /dev/null
+++ b/SavvyDB/Entities/CartItems.cs
@@ -0,0 +1,16 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class CartItems
+    {
+        public int Cartitemid { get; set; }
+        public int Cartid { get; set; }
+        public int Productid { get; set; }
+        public int Quantity { get; set; }
+
+        public virtual Carts Cart { get; set; }
+        public virtual Products Product { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Carts.cs b/SavvyDB/Entities/Carts.cs
new file mode 100644
index 0000000..3c7dcf5
--- /dev/null
+++ b/SavvyDB/Entities/Carts.cs
@@ -0,0 +1,19 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Carts
+    {
+        public Carts()
+        {
+            CartItems = new HashSet<CartItems>();
+        }
+
+        public int Cartid { get; set; }
+        public int Customerid { get; set; }
+
+        public virtual Customers Customer { get; set; }
+        public virtual ICollection<CartItems> CartItems { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Customers.cs b/SavvyDB/Entities/Customers.cs
new file mode 100644
index 0000000..d0b9726
--- /dev/null
+++ b/SavvyDB/Entities/Customers.cs
@@ -0,0 +1,22 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Customers
+    {
+        public Customers()
+        {
+            Carts = new HashSet<Carts>();
+            Orders = new HashSet<Orders>();
+        }
+
+        public int Customerid { get; set; }
+        public string Fname { get; set; }
+        public string Lname { get; set; }
+        public string Email { get; set; }
+
+        public virtual ICollection<Carts> Carts { get; set; }
+        public virtual ICollection<Orders> Orders { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Inventories.cs b/SavvyDB/Entities/Inventories.cs
new file mode 100644
index 0000000..eeb7243
--- /dev/null
+++ b/SavvyDB/Entities/Inventories.cs
@@ -0,0 +1,16 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Inventories
+    {
+        public int Inventoryid { get; set; }
+        public int Locationid { get; set; }
+        public int Productid { get; set; }
+        public int Quantity { get; set; }
+
+        public virtual Locations Location { get; set; }
+        public virtual Products Product { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Locations.cs b/SavvyDB/Entities/Locations.cs
new file mode 100644
index 0000000..9fd6755
--- /dev/null
+++ b/SavvyDB/Entities/Locations.cs
@@ -0,0 +1,21 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Locations
+    {
+        public Locations()
+        {
+            Inventories = new HashSet<Inventories>();
+            Managers = new HashSet<Managers>();
+        }
+
+        public int Locationid { get; set; }
+        public string Name { get; set; }
+        public int Employees { get; set; }
+
+        public virtual ICollection<Inventories> Inventories { get; set; }
+        public virtual ICollection<Managers> Managers { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Managers.cs b/SavvyDB/Entities/Managers.cs
new file mode 100644
index 0000000..a5317fb
--- /dev/null
+++ b/SavvyDB/Entities/Managers.cs
@@ -0,0 +1,16 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Managers
+    {
+        public int Managerid { get; set; }
+        public int Locationid { get; set; }
+        public string Fname { get; set; }
+        public string Lname { get; set; }
+        public string Email { get; set; }
+
+        public virtual Locations Location { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/OrderItems.cs b/SavvyDB/Entities/OrderItems.cs
new file mode 100644
index 0000000..4f686f8
--- /dev/null
+++ b/SavvyDB/Entities/OrderItems.cs
@@ -0,0 +1,16 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class OrderItems
+    {
+        public int Orderitemid { get; set; }
+        public int Orderid { get; set; }
+        public int Productid { get; set; }
+        public int Quantity { get; set; }
+
+        public virtual Orders Order { get; set; }
+        public virtual Products Product { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Orders.cs b/SavvyDB/Entities/Orders.cs
new file mode 100644
index 0000000..6658bc8
--- /dev/null
+++ b/SavvyDB/Entities/Orders.cs
@@ -0,0 +1,21 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Orders
+    {
+        public Orders()
+        {
+            OrderItems = new HashSet<OrderItems>();
+        }
+
+        public int Orderid { get; set; }
+        public int Customerid { get; set; }
+        public decimal Totalprice { get; set; }
+        public DateTime Date { get; set; }
+
+        public virtual Customers Customer { get; set; }
+        public virtual ICollection<OrderItems> OrderItems { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/PgStatStatements.cs b/SavvyDB/Entities/PgStatStatements.cs
new file mode 100644
index 0000000..2e26795
--- /dev/null
+++ b/SavvyDB/Entities/PgStatStatements.cs
@@ -0,0 +1,32 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class PgStatStatements
+    {
+        public uint? Userid { get; set; }
+        public uint? Dbid { get; set; }
+        public long? Queryid { get; set; }
+        public string Query { get; set; }
+        public long? Calls { get; set; }
+        public double? TotalTime { get; set; }
+        public double? MinTime { get; set; }
+        public double? MaxTime { get; set; }
+        public double? MeanTime { get; set; }
+        public double? StddevTime { get; set; }
+        public long? Rows { get; set; }
+        public long? SharedBlksHit { get; set; }
+        public long? SharedBlksRead { get; set; }
+        public long? SharedBlksDirtied { get; set; }
+        public long? SharedBlksWritten { get; set; }
+        public long? LocalBlksHit { get; set; }
+        public long? LocalBlksRead { get; set; }
+        public long? LocalBlksDirtied { get; set; }
+        public long? LocalBlksWritten { get; set; }
+        public long? TempBlksRead { get; set; }
+        public long? TempBlksWritten { get; set; }
+        public double? BlkReadTime { get; set; }
+        public double? BlkWriteTime { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/Products.cs b/SavvyDB/Entities/Products.cs
new file mode 100644
index 0000000..d37be95
--- /dev/null
+++ b/SavvyDB/Entities/Products.cs
@@ -0,0 +1,23 @@
+ï»¿using System;
+using System.Collections.Generic;
+
+namespace SavvyDB.Entities
+{
+    public partial class Products
+    {
+        public Products()
+        {
+            CartItems = new HashSet<CartItems>();
+            Inventories = new HashSet<Inventories>();
+            OrderItems = new HashSet<OrderItems>();
+        }
+
+        public int Productid { get; set; }
+        public string Productname { get; set; }
+        public decimal Cost { get; set; }
+
+        public virtual ICollection<CartItems> CartItems { get; set; }
+        public virtual ICollection<Inventories> Inventories { get; set; }
+        public virtual ICollection<OrderItems> OrderItems { get; set; }
+    }
+}
diff --git a/SavvyDB/Entities/SavvyContext.cs b/SavvyDB/Entities/SavvyContext.cs
new file mode 100644
index 0000000..a488ace
--- /dev/null
+++ b/SavvyDB/Entities/SavvyContext.cs
@@ -0,0 +1,354 @@
+ï»¿using System;
+using Microsoft.EntityFrameworkCore;
+using Microsoft.EntityFrameworkCore.Metadata;
+using System.IO;
+using Microsoft.Extensions.Configuration;
+
+namespace SavvyDB.Entities
+{
+    public partial class SavvyContext : DbContext
+    {
+        public SavvyContext()
+        {
+        }
+
+        public SavvyContext(DbContextOptions<SavvyContext> options)
+            : base(options)
+        {
+        }
+
+        public virtual DbSet<CartItems> CartItems { get; set; }
+        public virtual DbSet<Carts> Carts { get; set; }
+        public virtual DbSet<Customers> Customers { get; set; }
+        public virtual DbSet<Inventories> Inventories { get; set; }
+        public virtual DbSet<Locations> Locations { get; set; }
+        public virtual DbSet<Managers> Managers { get; set; }
+        public virtual DbSet<OrderItems> OrderItems { get; set; }
+        public virtual DbSet<Orders> Orders { get; set; }
+        public virtual DbSet<PgStatStatements> PgStatStatements { get; set; }
+        public virtual DbSet<Products> Products { get; set; }
+
+        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
+        {
+            if (!optionsBuilder.IsConfigured)
+            {
+                var configuration = new ConfigurationBuilder()
+                .SetBasePath(Directory.GetCurrentDirectory())
+                .AddJsonFile("appsettings.json")
+                .Build();
+
+                var connectionString = configuration.GetConnectionString("SavvyDB");
+                optionsBuilder.UseNpgsql(connectionString);
+                optionsBuilder.EnableSensitiveDataLogging();
+            }
+        }
+
+        protected override void OnModelCreating(ModelBuilder modelBuilder)
+        {
+            modelBuilder.HasPostgresExtension("btree_gin")
+                .HasPostgresExtension("btree_gist")
+                .HasPostgresExtension("citext")
+                .HasPostgresExtension("cube")
+                .HasPostgresExtension("dblink")
+                .HasPostgresExtension("dict_int")
+                .HasPostgresExtension("dict_xsyn")
+                .HasPostgresExtension("earthdistance")
+                .HasPostgresExtension("fuzzystrmatch")
+                .HasPostgresExtension("hstore")
+                .HasPostgresExtension("intarray")
+                .HasPostgresExtension("ltree")
+                .HasPostgresExtension("pg_stat_statements")
+                .HasPostgresExtension("pg_trgm")
+                .HasPostgresExtension("pgcrypto")
+                .HasPostgresExtension("pgrowlocks")
+                .HasPostgresExtension("pgstattuple")
+                .HasPostgresExtension("tablefunc")
+                .HasPostgresExtension("unaccent")
+                .HasPostgresExtension("uuid-ossp")
+                .HasPostgresExtension("xml2");
+
+            modelBuilder.Entity<CartItems>(entity =>
+            {
+                entity.HasKey(e => e.Cartitemid)
+                    .HasName("cart_items_pkey");
+
+                entity.ToTable("cart_items");
+
+                entity.Property(e => e.Cartitemid).HasColumnName("cartitemid");
+
+                entity.Property(e => e.Cartid).HasColumnName("cartid");
+
+                entity.Property(e => e.Productid).HasColumnName("productid");
+
+                entity.Property(e => e.Quantity).HasColumnName("quantity");
+
+                entity.HasOne(d => d.Cart)
+                    .WithMany(p => p.CartItems)
+                    .HasForeignKey(d => d.Cartid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("cart_items_cartid_fkey");
+
+                entity.HasOne(d => d.Product)
+                    .WithMany(p => p.CartItems)
+                    .HasForeignKey(d => d.Productid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("cart_items_productid_fkey");
+            });
+
+            modelBuilder.Entity<Carts>(entity =>
+            {
+                entity.HasKey(e => e.Cartid)
+                    .HasName("carts_pkey");
+
+                entity.ToTable("carts");
+
+                entity.Property(e => e.Cartid).HasColumnName("cartid");
+
+                entity.Property(e => e.Customerid).HasColumnName("customerid");
+
+                entity.HasOne(d => d.Customer)
+                    .WithMany(p => p.Carts)
+                    .HasForeignKey(d => d.Customerid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("carts_customerid_fkey");
+            });
+
+            modelBuilder.Entity<Customers>(entity =>
+            {
+                entity.HasKey(e => e.Customerid)
+                    .HasName("customers_pkey");
+
+                entity.ToTable("customers");
+
+                entity.Property(e => e.Customerid).HasColumnName("customerid");
+
+                entity.Property(e => e.Email)
+                    .IsRequired()
+                    .HasColumnName("email")
+                    .HasMaxLength(40);
+
+                entity.Property(e => e.Fname)
+                    .IsRequired()
+                    .HasColumnName("fname")
+                    .HasMaxLength(20);
+
+                entity.Property(e => e.Lname)
+                    .IsRequired()
+                    .HasColumnName("lname")
+                    .HasMaxLength(20);
+            });
+
+            modelBuilder.Entity<Inventories>(entity =>
+            {
+                entity.HasKey(e => e.Inventoryid)
+                    .HasName("inventories_pkey");
+
+                entity.ToTable("inventories");
+
+                entity.Property(e => e.Inventoryid).HasColumnName("inventoryid");
+
+                entity.Property(e => e.Locationid).HasColumnName("locationid");
+
+                entity.Property(e => e.Productid).HasColumnName("productid");
+
+                entity.Property(e => e.Quantity).HasColumnName("quantity");
+
+                entity.HasOne(d => d.Location)
+                    .WithMany(p => p.Inventories)
+                    .HasForeignKey(d => d.Locationid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("inventories_locationid_fkey");
+
+                entity.HasOne(d => d.Product)
+                    .WithMany(p => p.Inventories)
+                    .HasForeignKey(d => d.Productid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("inventories_productid_fkey");
+            });
+
+            modelBuilder.Entity<Locations>(entity =>
+            {
+                entity.HasKey(e => e.Locationid)
+                    .HasName("locations_pkey");
+
+                entity.ToTable("locations");
+
+                entity.Property(e => e.Locationid).HasColumnName("locationid");
+
+                entity.Property(e => e.Employees).HasColumnName("employees");
+
+                entity.Property(e => e.Name)
+                    .IsRequired()
+                    .HasColumnName("name")
+                    .HasMaxLength(20);
+            });
+
+            modelBuilder.Entity<Managers>(entity =>
+            {
+                entity.HasKey(e => e.Managerid)
+                    .HasName("managers_pkey");
+
+                entity.ToTable("managers");
+
+                entity.Property(e => e.Managerid).HasColumnName("managerid");
+
+                entity.Property(e => e.Email)
+                    .IsRequired()
+                    .HasColumnName("email")
+                    .HasMaxLength(40);
+
+                entity.Property(e => e.Fname)
+                    .IsRequired()
+                    .HasColumnName("fname")
+                    .HasMaxLength(20);
+
+                entity.Property(e => e.Lname)
+                    .IsRequired()
+                    .HasColumnName("lname")
+                    .HasMaxLength(20);
+
+                entity.Property(e => e.Locationid).HasColumnName("locationid");
+
+                entity.HasOne(d => d.Location)
+                    .WithMany(p => p.Managers)
+                    .HasForeignKey(d => d.Locationid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("managers_locationid_fkey");
+            });
+
+            modelBuilder.Entity<OrderItems>(entity =>
+            {
+                entity.HasKey(e => e.Orderitemid)
+                    .HasName("order_items_pkey");
+
+                entity.ToTable("order_items");
+
+                entity.Property(e => e.Orderitemid).HasColumnName("orderitemid");
+
+                entity.Property(e => e.Orderid).HasColumnName("orderid");
+
+                entity.Property(e => e.Productid).HasColumnName("productid");
+
+                entity.Property(e => e.Quantity).HasColumnName("quantity");
+
+                entity.HasOne(d => d.Order)
+                    .WithMany(p => p.OrderItems)
+                    .HasForeignKey(d => d.Orderid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("order_items_orderid_fkey");
+
+                entity.HasOne(d => d.Product)
+                    .WithMany(p => p.OrderItems)
+                    .HasForeignKey(d => d.Productid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("order_items_productid_fkey");
+            });
+
+            modelBuilder.Entity<Orders>(entity =>
+            {
+                entity.HasKey(e => e.Orderid)
+                    .HasName("orders_pkey");
+
+                entity.ToTable("orders");
+
+                entity.Property(e => e.Orderid).HasColumnName("orderid");
+
+                entity.Property(e => e.Customerid).HasColumnName("customerid");
+
+                entity.Property(e => e.Date)
+                    .HasColumnName("date")
+                    .HasColumnType("date");
+
+                entity.Property(e => e.Totalprice)
+                    .HasColumnName("totalprice")
+                    .HasColumnType("numeric(6,2)");
+
+                entity.HasOne(d => d.Customer)
+                    .WithMany(p => p.Orders)
+                    .HasForeignKey(d => d.Customerid)
+                    .OnDelete(DeleteBehavior.ClientSetNull)
+                    .HasConstraintName("orders_customerid_fkey");
+            });
+
+            modelBuilder.Entity<PgStatStatements>(entity =>
+            {
+                entity.HasNoKey();
+
+                entity.ToTable("pg_stat_statements");
+
+                entity.Property(e => e.BlkReadTime).HasColumnName("blk_read_time");
+
+                entity.Property(e => e.BlkWriteTime).HasColumnName("blk_write_time");
+
+                entity.Property(e => e.Calls).HasColumnName("calls");
+
+                entity.Property(e => e.Dbid)
+                    .HasColumnName("dbid")
+                    .HasColumnType("oid");
+
+                entity.Property(e => e.LocalBlksDirtied).HasColumnName("local_blks_dirtied");
+
+                entity.Property(e => e.LocalBlksHit).HasColumnName("local_blks_hit");
+
+                entity.Property(e => e.LocalBlksRead).HasColumnName("local_blks_read");
+
+                entity.Property(e => e.LocalBlksWritten).HasColumnName("local_blks_written");
+
+                entity.Property(e => e.MaxTime).HasColumnName("max_time");
+
+                entity.Property(e => e.MeanTime).HasColumnName("mean_time");
+
+                entity.Property(e => e.MinTime).HasColumnName("min_time");
+
+                entity.Property(e => e.Query).HasColumnName("query");
+
+                entity.Property(e => e.Queryid).HasColumnName("queryid");
+
+                entity.Property(e => e.Rows).HasColumnName("rows");
+
+                entity.Property(e => e.SharedBlksDirtied).HasColumnName("shared_blks_dirtied");
+
+                entity.Property(e => e.SharedBlksHit).HasColumnName("shared_blks_hit");
+
+                entity.Property(e => e.SharedBlksRead).HasColumnName("shared_blks_read");
+
+                entity.Property(e => e.SharedBlksWritten).HasColumnName("shared_blks_written");
+
+                entity.Property(e => e.StddevTime).HasColumnName("stddev_time");
+
+                entity.Property(e => e.TempBlksRead).HasColumnName("temp_blks_read");
+
+                entity.Property(e => e.TempBlksWritten).HasColumnName("temp_blks_written");
+
+                entity.Property(e => e.TotalTime).HasColumnName("total_time");
+
+                entity.Property(e => e.Userid)
+                    .HasColumnName("userid")
+                    .HasColumnType("oid");
+            });
+
+            modelBuilder.Entity<Products>(entity =>
+            {
+                entity.HasKey(e => e.Productid)
+                    .HasName("products_pkey");
+
+                entity.ToTable("products");
+
+                entity.Property(e => e.Productid).HasColumnName("productid");
+
+                entity.Property(e => e.Cost)
+                    .HasColumnName("cost")
+                    .HasColumnType("numeric(6,2)");
+
+                entity.Property(e => e.Productname)
+                    .IsRequired()
+                    .HasColumnName("productname")
+                    .HasMaxLength(40);
+            });
+
+            OnModelCreatingPartial(modelBuilder);
+        }
+
+        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
+    }
+}
diff --git a/SavvyDB/Mappers/DBMapper.cs b/SavvyDB/Mappers/DBMapper.cs
new file mode 100644
index 0000000..ae4395e
--- /dev/null
+++ b/SavvyDB/Mappers/DBMapper.cs
@@ -0,0 +1,355 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+
+namespace SavvyDB.Mappers
+{
+    public class DBMapper : IMapper
+    {
+        public Customers ParseCustomer(Customer Customer)
+        {
+            return new Customers() 
+            {
+                Fname = Customer.Fname,
+                Lname = Customer.Lname,
+                Email = Customer.Email
+            };
+        }
+        public ICollection<Customers> ParseCustomer(List<Customer> Customer)
+        {
+            ICollection<Customers> Customers = new List<Customers>();
+            foreach (var cust in Customer)
+            {
+                Customers.Add(ParseCustomer(cust));
+            }
+            return Customers;
+        }
+        public Customer ParseCustomer(Customers Customer)
+        {
+            return new Customer()
+            {
+                Fname = Customer.Fname,
+                Lname = Customer.Lname,
+                Email = Customer.Email
+            };
+        }
+        public List<Customer> ParseCustomer(ICollection<Customers> Customer)
+        {
+            List<Customer> Customers = new List<Customer>();
+            foreach (var cust in Customer)
+                {
+                    Customers.Add(ParseCustomer(cust));
+                }
+            return Customers;
+        }
+        public Managers ParseManager(Manager Manager)
+        {
+            return new Managers()
+            {
+                Fname = Manager.Fname,
+                Lname = Manager.Lname,
+                Email = Manager.Email,
+                Locationid = Manager.LocationId
+            };
+        }
+        public Manager ParseManager(Managers Manager)
+        {
+            return new Manager()
+            {
+                Fname = Manager.Fname,
+                Lname = Manager.Lname,
+                Email = Manager.Email,
+                LocationId = Manager.Locationid
+            };
+        }
+        public ICollection<Managers> ParseManager(List<Manager> Manager)
+        {
+            ICollection<Managers> Managers = new List<Managers>();
+            foreach (var manager in Manager)
+            {
+                Managers.Add(ParseManager(manager));
+            }
+            return Managers;
+        }
+        public List<Manager> ParseManager(ICollection<Managers> Manager)
+        {
+            List<Manager> Managers = new List<Manager>();
+            foreach (var manager in Manager)
+            {
+                Managers.Add(ParseManager(manager));
+            }
+            return Managers;
+        } 
+        public Products ParseProduct(Product Product)
+        {
+            return new Products()
+            {
+                Productname = Product.Name,
+                Cost = Product.Cost
+            };
+        }
+        public Product ParseProduct(Products Product)
+        {
+            return new Product()
+            {
+                Name = Product.Productname,
+                Cost = Product.Cost
+            };
+        }
+        public ICollection<Products> ParseProduct(List<Product> Product)
+        {
+            ICollection<Products> Products = new List<Products>();
+            foreach (var product in Product)
+            {
+                Products.Add(ParseProduct(product));
+            }
+            return Products;
+        }
+        public List<Product> ParseProduct(ICollection<Products> Product)
+        {
+            List<Product> Products = new List<Product>();
+            foreach (var product in Product)
+            {
+                Products.Add(ParseProduct(product));
+            }
+            return Products;
+        }
+        public Carts ParseCart(Cart Cart)
+        {
+            return new Carts()
+            {
+                Customerid = Cart.CustomerId,
+                Cartid = Cart.CartId
+            };
+        }
+        public Cart ParseCart(Carts Cart)
+        {
+            return new Cart()
+            {
+                CustomerId = Cart.Customerid,
+                CartId = Cart.Cartid
+            };
+        }
+        public List<Cart> ParseCart(ICollection<Carts> Carts)
+        {
+            List<Cart> Cart = new List<Cart>();
+            foreach (var cart in Carts)
+            {
+                Cart.Add(ParseCart(cart));
+            }
+            return Cart;
+        }
+        public ICollection<Carts> ParseCart(List<Cart> Carts)
+        {
+            ICollection<Carts> Cart = new List<Carts>();
+            foreach (var cart in Carts)
+            {
+                Cart.Add(ParseCart(cart));
+            }
+            return Cart;
+        }
+        public Inventories ParseInventory(Inventory Inventory)
+        {
+            return new Inventories()
+            {
+                Inventoryid = Inventory.InventoryId,
+                Locationid = Inventory.LocationId,
+                Productid = Inventory.ProductId,
+                Quantity = Inventory.Quantity
+            };
+        }
+        public Inventory ParseInventory(Inventories Inventory)
+        {
+            return new Inventory()
+            {
+                InventoryId = Inventory.Inventoryid,
+                LocationId = Inventory.Locationid,
+                ProductId = Inventory.Productid,
+                Quantity = Inventory.Quantity
+            };
+        }
+        public List<Inventory> ParseInventory(ICollection<Inventories> Inventory)
+        {
+            List<Inventory> Inventories = new List<Inventory>();
+            foreach (var inventory in Inventory)
+            {
+                Inventories.Add(ParseInventory(inventory));
+            }
+            return Inventories;
+        }
+        public ICollection<Inventories> ParseInventory(List<Inventory> Inventory)
+        {
+            ICollection<Inventories> Inventories = new List<Inventories>();
+            foreach (var inventory in Inventory)
+            {
+                Inventories.Add(ParseInventory(inventory));
+            }
+            return Inventories;
+        }
+        public Location ParseLocation(Locations Location)
+        {
+            return new Location()
+            {
+                Name = Location.Name,
+                LocationId = Location.Locationid,
+                Employees = Location.Employees
+            };
+        }
+        public Locations ParseLocation(Location Location)
+        {
+            return new Locations()
+            {
+                Name = Location.Name,
+                Locationid = Location.LocationId,
+                Employees = Location.Employees
+            };
+        }
+ 
+        public List<Location> ParseLocation(ICollection<Locations> Locations)
+        {
+            List<Location> Location = new List<Location>();
+            foreach (var location in Locations)
+            {
+                Location.Add(ParseLocation(location));
+            }
+            return Location;
+        }
+        public ICollection<Locations> ParseLocation(List<Location> Locations)
+        {
+            ICollection<Locations> Location = new List<Locations>();
+            foreach (var location in Locations)
+            {
+                Location.Add(ParseLocation(location));
+            }
+            return Location;
+        }
+
+        public CartItems ParseCartItem(CartItem CartItem)
+        {
+            return new CartItems()
+            {
+                Cartitemid = CartItem.CartItemId,
+                Productid = CartItem.ProductId,
+                Cartid = CartItem.CartId, 
+                Quantity=CartItem.Quantity
+            };
+        }
+
+        public CartItem ParseCartItem(CartItems CartItem)
+        {
+            return new CartItem()
+            {
+                CartItemId = CartItem.Cartitemid,
+                ProductId = CartItem.Productid,
+                CartId = CartItem.Cartid, 
+                Quantity = CartItem.Quantity
+            };
+        }
+
+        public ICollection<CartItems> ParseCartItem(List<CartItem> CartItem)
+        {
+            ICollection<CartItems> CartItems = new List<CartItems>();
+            foreach (var cartitem in CartItem)
+            {
+                CartItems.Add(ParseCartItem(cartitem));
+            }
+            return CartItems;
+        }
+
+        public List<CartItem> ParseCartItem(ICollection<CartItems> CartItem)
+        {
+            List<CartItem> CartItems = new List<CartItem>();
+            foreach (var cartitem in CartItem)
+            {
+                CartItems.Add(ParseCartItem(cartitem));
+            }
+            return CartItems;
+        }
+
+        public OrderItems ParseOrderItem(OrderItem OrderItem)
+        {
+            return new OrderItems()
+            {
+                Orderitemid = OrderItem.OrderItemId,
+                Productid = OrderItem.ProductId,
+                Orderid = OrderItem.OrderId,
+                Quantity = OrderItem.Quantity
+            };
+        }
+
+        public OrderItem ParseOrderItem(OrderItems OrderItem)
+        {
+            return new OrderItem()
+            {
+                OrderItemId = OrderItem.Orderitemid,
+                ProductId = OrderItem.Productid,
+                OrderId = OrderItem.Orderid,
+                Quantity = OrderItem.Quantity
+            };
+        }
+
+        public ICollection<OrderItems> ParseOrderItem(List<OrderItem> OrderItem)
+        {
+            ICollection<OrderItems> OrderItems = new List<OrderItems>();
+            foreach (var orderitem in OrderItem)
+            {
+                OrderItems.Add(ParseOrderItem(orderitem));
+            }
+            return OrderItems;
+        }
+
+        public List<OrderItem> ParseOrderItem(ICollection<OrderItems> OrderItem)
+        {
+            List<OrderItem> OrderItems = new List<OrderItem>();
+            foreach (var orderitem in OrderItem)
+            {
+                OrderItems.Add(ParseOrderItem(orderitem));
+            }
+            return OrderItems;
+        }
+
+        public Orders ParseOrder(Order Order)
+        {
+            return new Orders()
+            {
+                Orderid = Order.OrderId,
+                Customerid = Order.CustomerId,
+                Totalprice = Order.Totalprice,
+                Date = Order.Date
+            };
+        }
+
+        public Order ParseOrder(Orders Order)
+        {
+            return new Order()
+            {
+                OrderId = Order.Orderid,
+                CustomerId = Order.Customerid,
+                Totalprice = Order.Totalprice,
+                Date = Order.Date
+                
+            };
+        }
+
+        public ICollection<Orders> ParseOrder(List<Order> Order)
+        {
+            ICollection<Orders> Orders = new List<Orders>();
+            foreach (var order in Order)
+            {
+                Orders.Add(ParseOrder(order));
+            }
+            return Orders;
+        }
+
+        public List<Order> ParseOrder(ICollection<Orders> Order)
+        {
+            List<Order> Orders = new List<Order>();
+            foreach (var order in Order)
+            {
+                Orders.Add(ParseOrder(order));
+            }
+            return Orders;
+        }
+
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/ICartItemMapper.cs b/SavvyDB/Mappers/ICartItemMapper.cs
new file mode 100644
index 0000000..03a4e79
--- /dev/null
+++ b/SavvyDB/Mappers/ICartItemMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface ICartItemMapper
+    {
+         CartItems ParseCartItem(CartItem CartItem);
+         CartItem ParseCartItem(CartItems CartItem);
+         ICollection<CartItems> ParseCartItem(List<CartItem> CartItem);
+         List<CartItem> ParseCartItem(ICollection<CartItems> CartItem);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/ICartMapper.cs b/SavvyDB/Mappers/ICartMapper.cs
new file mode 100644
index 0000000..9723ab6
--- /dev/null
+++ b/SavvyDB/Mappers/ICartMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface ICartMapper
+    {
+         Carts ParseCart(Cart Cart);
+         Cart ParseCart(Carts Cart);
+         ICollection<Carts> ParseCart(List<Cart> Cart);
+         List<Cart> ParseCart(ICollection<Carts> Cart);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/ICustomerMapper.cs b/SavvyDB/Mappers/ICustomerMapper.cs
new file mode 100644
index 0000000..2c400e5
--- /dev/null
+++ b/SavvyDB/Mappers/ICustomerMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface ICustomerMapper
+    {
+         Customer ParseCustomer(Customers Customer);
+         Customers ParseCustomer (Customer Customer);
+         ICollection<Customers> ParseCustomer(List<Customer> Customer);
+         List<Customer> ParseCustomer(ICollection<Customers> Customer);
+    }
+}
diff --git a/SavvyDB/Mappers/IInventoryMapper.cs b/SavvyDB/Mappers/IInventoryMapper.cs
new file mode 100644
index 0000000..d19dd54
--- /dev/null
+++ b/SavvyDB/Mappers/IInventoryMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface IInventoryMapper
+    {
+         Inventories ParseInventory(Inventory Inventory);
+         Inventory ParseInventory(Inventories Inventory);
+         List<Inventory> ParseInventory(ICollection<Inventories> Inventory);
+         ICollection<Inventories> ParseInventory(List<Inventory> Inventory);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/ILocationMapper.cs b/SavvyDB/Mappers/ILocationMapper.cs
new file mode 100644
index 0000000..7df9410
--- /dev/null
+++ b/SavvyDB/Mappers/ILocationMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface ILocationMapper
+    {
+         Locations ParseLocation(Location Location);
+         Location ParseLocation(Locations Location);
+         List<Location> ParseLocation(ICollection<Locations> Location);
+         ICollection<Locations> ParseLocation(List<Location> Location);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/IManagerMapper.cs b/SavvyDB/Mappers/IManagerMapper.cs
new file mode 100644
index 0000000..8297d16
--- /dev/null
+++ b/SavvyDB/Mappers/IManagerMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface IManagerMapper
+    {
+         Managers ParseManager(Manager Manager);
+         Manager ParseManager(Managers Manager);
+         ICollection<Managers> ParseManager(List<Manager> Manager);
+         List<Manager> ParseManager(ICollection<Managers> Manager);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/IMapper.cs b/SavvyDB/Mappers/IMapper.cs
new file mode 100644
index 0000000..6bb6ba6
--- /dev/null
+++ b/SavvyDB/Mappers/IMapper.cs
@@ -0,0 +1,7 @@
+namespace SavvyDB.Mappers
+{
+    public interface IMapper : ICartItemMapper, ICustomerMapper, IInventoryMapper, IManagerMapper, ICartMapper, IProductMapper, ILocationMapper, IOrderItemMapper, IOrderMapper
+    {
+         
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/IOrderItemMapper.cs b/SavvyDB/Mappers/IOrderItemMapper.cs
new file mode 100644
index 0000000..9c281ad
--- /dev/null
+++ b/SavvyDB/Mappers/IOrderItemMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface IOrderItemMapper
+    {
+         OrderItems ParseOrderItem(OrderItem OrderItem);
+         OrderItem ParseOrderItem(OrderItems OrderItem);
+         ICollection<OrderItems> ParseOrderItem(List<OrderItem> OrderItem);
+         List<OrderItem> ParseOrderItem(ICollection<OrderItems> OrderItem);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/IOrderMapper.cs b/SavvyDB/Mappers/IOrderMapper.cs
new file mode 100644
index 0000000..a502d27
--- /dev/null
+++ b/SavvyDB/Mappers/IOrderMapper.cs
@@ -0,0 +1,13 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface IOrderMapper
+    {
+         Orders ParseOrder(Order Order);
+         Order ParseOrder(Orders Order);
+         ICollection<Orders> ParseOrder(List<Order> Order);
+         List<Order> ParseOrder(ICollection<Orders> Order);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Mappers/IProductMapper.cs b/SavvyDB/Mappers/IProductMapper.cs
new file mode 100644
index 0000000..82e3290
--- /dev/null
+++ b/SavvyDB/Mappers/IProductMapper.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Mappers
+{
+    public interface IProductMapper
+    {
+         Products ParseProduct(Product Product);
+         Product ParseProduct(Products Product);
+         ICollection<Products> ParseProduct(List<Product> Product);
+         List<Product> ParseProduct(ICollection<Products> Product);
+         
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Cart.cs b/SavvyDB/Models/Cart.cs
new file mode 100644
index 0000000..0c256c4
--- /dev/null
+++ b/SavvyDB/Models/Cart.cs
@@ -0,0 +1,9 @@
+namespace SavvyDB.Models
+
+{
+    public class Cart
+    {
+     public int CartId {get; set;}
+     public int CustomerId {get; set;} 
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/CartItem.cs b/SavvyDB/Models/CartItem.cs
new file mode 100644
index 0000000..8065324
--- /dev/null
+++ b/SavvyDB/Models/CartItem.cs
@@ -0,0 +1,10 @@
+namespace SavvyDB.Models
+{
+    public class CartItem
+    {
+        public int CartItemId {get; set;}
+        public int ProductId {get;set;}
+        public int CartId {get;set;}
+        public int Quantity { get; set; }
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Customer.cs b/SavvyDB/Models/Customer.cs
new file mode 100644
index 0000000..52ba9eb
--- /dev/null
+++ b/SavvyDB/Models/Customer.cs
@@ -0,0 +1,12 @@
+namespace SavvyDB.Models
+
+{
+    public class Customer
+    {
+     public int CustomerId {get; set;}
+     public string Fname {get; set;}
+     public string Lname {get; set;}
+     public string Email {get; set;}
+
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Inventory.cs b/SavvyDB/Models/Inventory.cs
new file mode 100644
index 0000000..fdbee95
--- /dev/null
+++ b/SavvyDB/Models/Inventory.cs
@@ -0,0 +1,11 @@
+namespace SavvyDB.Models
+
+{
+    public class Inventory
+    {
+        public int InventoryId {get; set;}
+        public int LocationId {get; set;}
+        public int ProductId {get; set;}
+        public int Quantity {get; set;}
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Location.cs b/SavvyDB/Models/Location.cs
new file mode 100644
index 0000000..74fc275
--- /dev/null
+++ b/SavvyDB/Models/Location.cs
@@ -0,0 +1,10 @@
+namespace SavvyDB.Models
+
+{
+    public class Location
+    {
+     public int LocationId {get; set;}
+     public string Name {get; set;}
+     public int Employees {get; set;}
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Manager.cs b/SavvyDB/Models/Manager.cs
new file mode 100644
index 0000000..a132c13
--- /dev/null
+++ b/SavvyDB/Models/Manager.cs
@@ -0,0 +1,13 @@
+namespace SavvyDB.Models
+
+{
+    public class Manager
+    {
+     public int ManagerId {get; set;}
+     public string Fname {get; set;}
+     public string Lname {get; set;}
+     public int LocationId {get; set;}
+     public string Email {get; set;}
+
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Order.cs b/SavvyDB/Models/Order.cs
new file mode 100644
index 0000000..c6404d2
--- /dev/null
+++ b/SavvyDB/Models/Order.cs
@@ -0,0 +1,12 @@
+using System;
+namespace SavvyDB.Models
+
+{
+    public class Order
+    {
+        public int OrderId {get; set;}
+        public int CustomerId {get; set;}
+        public decimal Totalprice { get; set; }
+        public DateTime Date { get; set; }
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/OrderItem.cs b/SavvyDB/Models/OrderItem.cs
new file mode 100644
index 0000000..baafe2b
--- /dev/null
+++ b/SavvyDB/Models/OrderItem.cs
@@ -0,0 +1,11 @@
+namespace SavvyDB.Models
+
+{
+    public class OrderItem
+    {
+        public int OrderItemId {get; set;}
+        public int OrderId {get; set;}
+        public int ProductId{get; set;}
+        public int Quantity { get; set; }
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Models/Product.cs b/SavvyDB/Models/Product.cs
new file mode 100644
index 0000000..bdbd18b
--- /dev/null
+++ b/SavvyDB/Models/Product.cs
@@ -0,0 +1,13 @@
+namespace SavvyDB.Models
+
+{
+
+    public class Product
+    { 
+        public int Productid {get; set;}
+        public string Name {get; set;}
+        public decimal Cost {get; set;}
+
+    }
+}
+ 
\ No newline at end of file
diff --git a/SavvyDB/Repos/ICartItemRepo.cs b/SavvyDB/Repos/ICartItemRepo.cs
new file mode 100644
index 0000000..0ddb38f
--- /dev/null
+++ b/SavvyDB/Repos/ICartItemRepo.cs
@@ -0,0 +1,12 @@
+using SavvyDB.Models;
+namespace SavvyDB.Repos
+
+{
+    public interface ICartItemRepo
+    {
+        void AddCartItem(CartItem CartItem);
+        CartItem GetCartItem(int id);
+        void UpdateCartItem(CartItem CartItem);
+        void DeleteCartItem(CartItem CartItem);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/ICartRepo.cs b/SavvyDB/Repos/ICartRepo.cs
new file mode 100644
index 0000000..d6f5f40
--- /dev/null
+++ b/SavvyDB/Repos/ICartRepo.cs
@@ -0,0 +1,15 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface ICartRepo
+    {
+        void AddCart(Cart Cart);
+        void UpdateCart(Cart Cart);
+        Cart GetCart(int id);
+        Cart GetCartByCustomer(int id);
+        List<Cart> GetAllCarts();
+        void DeleteCart(Cart Cart);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/ICustomerRepo.cs b/SavvyDB/Repos/ICustomerRepo.cs
new file mode 100644
index 0000000..dc3e495
--- /dev/null
+++ b/SavvyDB/Repos/ICustomerRepo.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface ICustomerRepo
+    {
+         void AddCustomer(Customer Customer);
+         Customer GetCustomer(int id);
+         List<Customer> GetAllCustomers();
+         void UpdateCustomer(Customer Customer);
+         void DeleteCustomer (Customer Customer);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IInventoryRepo.cs b/SavvyDB/Repos/IInventoryRepo.cs
new file mode 100644
index 0000000..262a319
--- /dev/null
+++ b/SavvyDB/Repos/IInventoryRepo.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface IInventoryRepo
+    {
+       void AddInventory(Inventory Inventory);
+       List<Inventory> GetInventoryByLocation(int id);
+       Inventory GetInventory(int id);
+       void UpdateInventory(Inventory Inventory);
+       void DeleteInventory(Inventory Inventory);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/ILocationRepo.cs b/SavvyDB/Repos/ILocationRepo.cs
new file mode 100644
index 0000000..48834d8
--- /dev/null
+++ b/SavvyDB/Repos/ILocationRepo.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface ILocationRepo
+    {
+        void AddLocation(Location Location);
+        Location GetLocation(int id);
+        List<Location> GetAllLocations();
+        void UpdateLocation(Location Location);
+        void DeleteLocation(Location Location);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IManagerRepo.cs b/SavvyDB/Repos/IManagerRepo.cs
new file mode 100644
index 0000000..d5a6f89
--- /dev/null
+++ b/SavvyDB/Repos/IManagerRepo.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface IManagerRepo
+    {
+         void AddManager(Manager Manager);
+         Manager GetManager(int id);
+         List<Manager> GetAllManagers();
+         void UpdateManager(Manager Manager);
+         void DeleteManager(Manager Manager);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IOrderItemRepo.cs b/SavvyDB/Repos/IOrderItemRepo.cs
new file mode 100644
index 0000000..fb8628d
--- /dev/null
+++ b/SavvyDB/Repos/IOrderItemRepo.cs
@@ -0,0 +1,15 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+using System;
+namespace SavvyDB.Repos
+
+{
+    public interface IOrderItemRepo
+    {
+        void AddOrderItem(OrderItem OrderItem);
+        OrderItem GetOrderItem(int id);
+        List<OrderItem> GetAllOrderItems();
+        void UpdateOrderItem(OrderItem OrderItem);
+        void DeleteOrderItem(OrderItem OrderItem);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IOrderRepo.cs b/SavvyDB/Repos/IOrderRepo.cs
new file mode 100644
index 0000000..05d76f0
--- /dev/null
+++ b/SavvyDB/Repos/IOrderRepo.cs
@@ -0,0 +1,19 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+using System;
+namespace SavvyDB.Repos
+
+{
+    public interface IOrderRepo
+    {
+        void AddOrder(Order Orders);
+        Order GetOrder(int id);
+        Order GetOrderByDate(DateTime date);
+        List<Order> GetOrderExpensive(Customer Customer);
+        List<Order> GetOrderCheap(Customer Customer);
+        List<Order> GetOrderFirst(DateTime date);
+        List<Order> GetOrderLast(DateTime date);
+        void UpdateOrder(Order Orders);
+        void DeleteOrder(Order Orders);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IProductsRepo.cs b/SavvyDB/Repos/IProductsRepo.cs
new file mode 100644
index 0000000..4f6e08a
--- /dev/null
+++ b/SavvyDB/Repos/IProductsRepo.cs
@@ -0,0 +1,14 @@
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyDB.Repos
+
+{
+    public interface IProductsRepo
+    {
+         void AddProduct(Product Products);
+         Product GetProduct(int id);
+         List<Product> GetAllProducts();
+         void UpdateProduct(Product Products);
+         void DeleteProduct(Product Products);
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/IRepo.cs b/SavvyDB/Repos/IRepo.cs
new file mode 100644
index 0000000..ff20366
--- /dev/null
+++ b/SavvyDB/Repos/IRepo.cs
@@ -0,0 +1,8 @@
+using SavvyDB.Repos;
+namespace SavvyDB
+{
+    public interface IRepo : ICartItemRepo, ICartRepo, ICustomerRepo, IInventoryRepo, ILocationRepo, IManagerRepo, IOrderItemRepo, IOrderRepo, IProductsRepo
+    {
+        
+    }
+}
\ No newline at end of file
diff --git a/SavvyDB/Repos/SavvyRepo.cs b/SavvyDB/Repos/SavvyRepo.cs
new file mode 100644
index 0000000..1622250
--- /dev/null
+++ b/SavvyDB/Repos/SavvyRepo.cs
@@ -0,0 +1,361 @@
+using System.Collections.Generic;
+using System;
+using SavvyDB.Models;
+using System.Linq;
+using SavvyDB.Entities;
+using SavvyDB.Mappers;
+using Microsoft.EntityFrameworkCore;
+
+namespace SavvyDB
+{
+    public class SavvyRepo : IRepo
+    {
+        private SavvyContext context;
+        private IMapper mapper;
+
+        public SavvyRepo(SavvyContext context, IMapper mapper)
+        {
+            this.context = context;
+            this.mapper = mapper;
+            context.ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking;
+        }
+
+        public Inventory GetProductsByLocation(int id)
+        {
+            return mapper.ParseInventory(
+                context.Inventories
+                .First(p => p.Inventoryid == id));
+        }
+        public void AddCustomer(Customer Customer)
+        {
+            context.Customers.Add(mapper.ParseCustomer(Customer));
+            context.SaveChanges();
+        }
+        public Customer GetCustomer(int id)
+        {
+            return mapper.ParseCustomer(
+                context.Customers
+                .First(x => x.Customerid == id));
+        }
+        public List<Customer> GetAllCustomers()
+        {
+            return mapper.ParseCustomer(
+                context.Customers
+                .ToList()
+            );
+        }
+        public void UpdateCustomer(Customer Customer)
+        {
+            context.Customers.Update(mapper.ParseCustomer(Customer));
+            context.SaveChanges();
+        }
+
+        public void DeleteCustomer(Customer Customer)
+        {
+            context.Customers.Remove(mapper.ParseCustomer(Customer));
+            context.SaveChanges();
+        }
+        public void AddCart(Cart Cart)
+        {
+            context.Carts.Add(mapper.ParseCart(Cart));
+            context.SaveChanges();
+        }
+
+        public Cart GetCart(int id)
+        {
+            return mapper.ParseCart(
+                context.Carts
+                .First(x => x.Cartid == id));
+        }
+        public Cart GetCartByCustomer(int id)
+        {
+            return mapper.ParseCart(
+                context.Carts
+                .First(x => x.Customerid == id));
+        }
+        public List<Cart> GetAllCarts()
+        {
+            return mapper.ParseCart(
+                context.Carts
+                .ToList()
+            );
+        }
+        public void UpdateCart(Cart Cart)
+        {
+            context.Carts.Update(mapper.ParseCart(Cart));
+            context.SaveChanges();
+        }
+
+        public void DeleteCart(Cart Cart)
+        {
+            context.Carts.Remove(mapper.ParseCart(Cart));
+            context.SaveChanges();
+        }
+
+        public void AddInventory(Inventory Inventory)
+        {
+            context.Inventories.Add(mapper.ParseInventory(Inventory));
+            context.SaveChanges();
+        }
+
+        public List<Inventory> GetInventoryByLocation(int id)
+        {
+            return mapper.ParseInventory(
+                context.Inventories
+                .Where(x => x.Locationid == id)
+                .ToList());
+        }
+        public Inventory GetInventory(int id)
+        {
+            return mapper.ParseInventory(
+                context.Inventories
+                .First(x => x.Inventoryid ==id)
+            );
+        }
+        public void UpdateInventory(Inventory Inventory)
+        {
+            context.Inventories.Update(mapper.ParseInventory(Inventory));
+            context.SaveChanges();            
+        }
+
+        public void DeleteInventory(Inventory Inventory)
+        {
+            context.Inventories.Remove(mapper.ParseInventory(Inventory));
+            context.SaveChanges();
+        }
+
+        public void AddLocation(Location Location)
+        {
+            context.Locations.Add(mapper.ParseLocation(Location));
+            context.SaveChanges();
+        }
+        public List<Location> GetAllLocations()
+        {
+            return mapper.ParseLocation(
+                context.Locations
+                .ToList()
+            );
+        }
+
+        public Location GetLocation(int id)
+        {
+            return mapper.ParseLocation(context.Locations
+            .First(x => x.Locationid == id));
+        }
+
+        public void UpdateLocation(Location Location)
+        {
+            context.Locations.Update(mapper.ParseLocation(Location));
+            context.SaveChanges();
+        }
+
+        public void DeleteLocation(Location Location)
+        {
+            context.Locations.Remove(mapper.ParseLocation(Location));
+            context.SaveChanges();
+        }
+
+        public void AddManager(Manager Manager)
+        {
+            context.Managers.Add(mapper.ParseManager(Manager));
+            context.SaveChanges();
+        }
+
+        public Manager GetManager(int id)
+        {
+            return mapper.ParseManager(
+                context.Managers
+                .First(p => p.Managerid == id));
+        }
+        public List<Manager> GetAllManagers()
+        {
+            return mapper.ParseManager(
+                context.Managers
+                .ToList()
+            );
+        }
+
+        public void UpdateManager(Manager Manager)
+        {
+            context.Managers.Update(mapper.ParseManager(Manager));
+            context.SaveChanges();
+        }
+
+        public void DeleteManager(Manager Manager)
+        {
+            context.Managers.Remove(mapper.ParseManager(Manager));
+            context.SaveChanges();;
+        }
+
+        public void AddCartItem(CartItem CartItem)
+        {
+            context.CartItems.Add(mapper.ParseCartItem(CartItem));
+            context.SaveChanges();
+        }
+
+        public CartItem GetCartItem(int id)
+        {
+            return mapper.ParseCartItem(
+                context.CartItems
+                .First(p => p.Cartitemid == id));
+        }
+        public List<CartItem> GetAllCartItems(int id)
+        {
+            return mapper.ParseCartItem(
+                context.CartItems
+                .Where(x => x.Cartid == id)
+                .ToList()
+            );
+        }
+
+        public void UpdateCartItem(CartItem CartItem)
+        {
+            context.CartItems.Update(mapper.ParseCartItem(CartItem));
+            context.SaveChanges();
+        }
+
+        public void DeleteCartItem(CartItem CartItem)
+        {
+            context.CartItems.Remove(mapper.ParseCartItem(CartItem));
+            context.SaveChanges();
+        }
+
+        public void AddOrderItem(OrderItem OrderItem)
+        {
+            context.OrderItems.Add(mapper.ParseOrderItem(OrderItem));
+            context.SaveChanges();
+        }
+
+        public OrderItem GetOrderItem(int id)
+        {
+            return mapper.ParseOrderItem(
+                context.OrderItems
+                .First(p => p.Orderitemid == id));
+        }
+        public List<OrderItem> GetAllOrderItems()
+        {
+            return mapper.ParseOrderItem(
+                context.OrderItems
+                .ToList()
+            );
+        }
+        public void UpdateOrderItem(OrderItem OrderItem)
+        {
+            context.OrderItems.Update(mapper.ParseOrderItem(OrderItem));
+            context.SaveChanges();
+        }
+
+        public void DeleteOrderItem(OrderItem OrderItem)
+        {
+            context.OrderItems.Remove(mapper.ParseOrderItem(OrderItem));
+            context.SaveChanges();
+        }
+
+        public void AddOrder(Order Orders)
+        {
+            context.Orders.Add(mapper.ParseOrder(Orders));
+            context.SaveChanges();
+        }
+
+        public Order GetOrder(int id)
+        {
+             return mapper.ParseOrder(
+                    context.Orders
+                    .First(x => x.Customerid == id));
+
+        }
+        public List<Order> GetAllOrders()
+        {
+            return mapper.ParseOrder(
+                context.Orders
+                .ToList()
+            );
+        }
+        public Order GetOrderByDate(DateTime date)
+        {
+            return mapper.ParseOrder(
+                context.Orders
+                .First(x => x.Date == date)
+            );
+        }
+                public List<Order> GetOrderExpensive(Customer Customer)
+        {
+            return mapper.ParseOrder(
+                    context.Orders
+                    .Where(x => x.Customerid == Customer.CustomerId)
+                    .OrderByDescending(x => x.Totalprice)
+                    .ToList()
+                );
+        }
+        
+        public List<Order> GetOrderCheap(Customer Customer)
+        {
+            return mapper.ParseOrder(
+                    context.Orders
+                    .Where(x => x.Customerid == Customer.CustomerId)
+                    .OrderBy(x => x.Totalprice)
+                    .ToList()
+                );
+        }
+        public List<Order> GetOrderFirst(DateTime date)
+        {
+            return mapper.ParseOrder(
+                    context.Orders
+                    .Where(x => x.Date == date.Date)
+                    .OrderByDescending(x => x.Date)
+                    .ToList()
+                );
+        }
+        public List<Order> GetOrderLast(DateTime date)
+        {
+            return mapper.ParseOrder(
+                    context.Orders
+                    .Where(x => x.Date == date.Date)
+                    .OrderBy(x => x.Date)
+                    .ToList()
+                );
+        }
+        public void UpdateOrder(Order Orders)
+        {
+            context.Orders.Update(mapper.ParseOrder(Orders));
+            context.SaveChanges();
+        }
+
+        public void DeleteOrder(Order Orders)
+        {
+            context.Orders.Remove(mapper.ParseOrder(Orders));
+            context.SaveChanges();
+        }
+
+        public Product GetProduct(int id)
+        {
+            return mapper.ParseProduct(
+                context.Products
+                .First(p => p.Productid == id)
+            );
+        }
+        public List<Product> GetAllProducts()
+        {
+            return mapper.ParseProduct(
+                context.Products
+                .ToList()
+            );
+        }
+        public void AddProduct(Product Product)
+        {
+            context.Products.Add(mapper.ParseProduct(Product));
+            context.SaveChanges();
+        }
+        public void UpdateProduct(Product Product)
+        {
+            context.Products.Update(mapper.ParseProduct(Product));
+            context.SaveChanges();
+        }
+
+        public void DeleteProduct(Product Product)
+        {
+            context.Products.Remove(mapper.ParseProduct(Product));
+            context.SaveChanges();
+        }
+    }
+}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseTest/lacrosseTest.csproj b/SavvyDB/SavvyDB.csproj
similarity index 58%
rename from Lacrosse101_P0/lacrosse101/lacrosseTest/lacrosseTest.csproj
rename to SavvyDB/SavvyDB.csproj
index 088347c..08195d9 100644
--- a/Lacrosse101_P0/lacrosse101/lacrosseTest/lacrosseTest.csproj
+++ b/SavvyDB/SavvyDB.csproj
@@ -2,8 +2,6 @@
 
   <PropertyGroup>
     <TargetFramework>netcoreapp3.1</TargetFramework>
-
-    <IsPackable>false</IsPackable>
   </PropertyGroup>
 
   <ItemGroup>
@@ -15,16 +13,8 @@
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
       <PrivateAssets>all</PrivateAssets>
     </PackageReference>
-    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.5.0" />
-    <PackageReference Include="xunit" Version="2.4.0" />
-    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.0" />
-    <PackageReference Include="coverlet.collector" Version="1.2.0" />
+    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.9" />
+    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.4" />
   </ItemGroup>
 
-  <ItemGroup>
-    <ProjectReference Include="..\lacrosseDB\lacrosseDB.csproj" />
-    <ProjectReference Include="..\lacrosseLib\lacrosseLib.csproj" />
-  </ItemGroup>
-
-
 </Project>
diff --git a/SavvyDB/obj/SavvyDB.csproj.nuget.dgspec.json b/SavvyDB/obj/SavvyDB.csproj.nuget.dgspec.json
new file mode 100644
index 0000000..8774103
--- /dev/null
+++ b/SavvyDB/obj/SavvyDB.csproj.nuget.dgspec.json
@@ -0,0 +1,82 @@
+{
+  "format": 1,
+  "restore": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {}
+  },
+  "projects": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "projectName": "SavvyDB",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {}
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyDB/obj/SavvyDB.csproj.nuget.g.props b/SavvyDB/obj/SavvyDB.csproj.nuget.g.props
new file mode 100644
index 0000000..30e71b5
--- /dev/null
+++ b/SavvyDB/obj/SavvyDB.csproj.nuget.g.props
@@ -0,0 +1,24 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
+    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
+    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
+    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
+    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\Ckat\.nuget\packages\</NuGetPackageFolders>
+    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
+    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">5.7.0</NuGetToolVersion>
+  </PropertyGroup>
+  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <SourceRoot Include="$([MSBuild]::EnsureTrailingSlash($(NuGetPackageFolders)))" />
+  </ItemGroup>
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <Import Project="$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props" Condition="Exists('$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props')" />
+  </ImportGroup>
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <PkgMicrosoft_EntityFrameworkCore_Tools Condition=" '$(PkgMicrosoft_EntityFrameworkCore_Tools)' == '' ">C:\Users\Ckat\.nuget\packages\microsoft.entityframeworkcore.tools\3.1.9</PkgMicrosoft_EntityFrameworkCore_Tools>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyDB/obj/SavvyDB.csproj.nuget.g.targets b/SavvyDB/obj/SavvyDB.csproj.nuget.g.targets
new file mode 100644
index 0000000..53cfaa1
--- /dev/null
+++ b/SavvyDB/obj/SavvyDB.csproj.nuget.g.targets
@@ -0,0 +1,6 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyDB/obj/project.assets.json b/SavvyDB/obj/project.assets.json
new file mode 100644
index 0000000..11fba6f
--- /dev/null
+++ b/SavvyDB/obj/project.assets.json
@@ -0,0 +1,1127 @@
+{
+  "version": 3,
+  "targets": {
+    ".NETCoreApp,Version=v3.1": {
+      "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        }
+      },
+      "Microsoft.Bcl.HashCode/1.1.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        }
+      },
+      "Microsoft.CSharp/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Bcl.AsyncInterfaces": "1.1.1",
+          "Microsoft.Bcl.HashCode": "1.1.0",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Analyzers": "3.1.9",
+          "Microsoft.Extensions.Caching.Memory": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging": "3.1.9",
+          "System.Collections.Immutable": "1.7.1",
+          "System.ComponentModel.Annotations": "4.7.0",
+          "System.Diagnostics.DiagnosticSource": "4.7.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.CSharp": "4.7.0",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll": {}
+        },
+        "build": {
+          "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Memory/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Caching.Abstractions": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.FileProviders.Physical": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Json/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.Configuration.FileExtensions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.FileProviders.Abstractions": "3.1.9",
+          "Microsoft.Extensions.FileSystemGlobbing": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Binder": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Options/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Primitives/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        }
+      },
+      "Npgsql/4.1.3.1": {
+        "type": "package",
+        "dependencies": {
+          "System.Runtime.CompilerServices.Unsafe": "4.6.0"
+        },
+        "compile": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        }
+      },
+      "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.4",
+          "Npgsql": "4.1.3.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        }
+      },
+      "System.Collections.Immutable/1.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        }
+      },
+      "System.ComponentModel.Annotations/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        }
+      },
+      "System.Diagnostics.DiagnosticSource/4.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        }
+      },
+      "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        }
+      }
+    }
+  },
+  "libraries": {
+    "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+      "sha512": "yuvf07qFWFqtK3P/MRkEKLhn5r2UbSpVueRziSqj0yJQIKFwG1pq9mOayK3zE5qZCTs0CbrwL9M6R8VwqyGy2w==",
+      "type": "package",
+      "path": "microsoft.bcl.asyncinterfaces/1.1.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
+        "microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+        "microsoft.bcl.asyncinterfaces.nuspec",
+        "ref/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.Bcl.HashCode/1.1.0": {
+      "sha512": "J2G1k+u5unBV+aYcwxo94ip16Rkp65pgWFb0R6zwJipzWNMgvqlWeuI7/+R+e8bob66LnSG+llLJ+z8wI94cHg==",
+      "type": "package",
+      "path": "microsoft.bcl.hashcode/1.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.HashCode.dll",
+        "lib/net461/Microsoft.Bcl.HashCode.xml",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.xml",
+        "microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+        "microsoft.bcl.hashcode.nuspec",
+        "ref/net461/Microsoft.Bcl.HashCode.dll",
+        "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.CSharp/4.7.0": {
+      "sha512": "pTj+D3uJWyN3My70i2Hqo+OXixq3Os2D1nJ2x92FFo6sk8fYS1m1WLNTs0Dc1uPaViH0YvEEwvzddQ7y4rhXmA==",
+      "type": "package",
+      "path": "microsoft.csharp/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/netcore50/Microsoft.CSharp.dll",
+        "lib/netcoreapp2.0/_._",
+        "lib/netstandard1.3/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.xml",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/uap10.0.16299/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "microsoft.csharp.4.7.0.nupkg.sha512",
+        "microsoft.csharp.nuspec",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/Microsoft.CSharp.dll",
+        "ref/netcore50/Microsoft.CSharp.xml",
+        "ref/netcore50/de/Microsoft.CSharp.xml",
+        "ref/netcore50/es/Microsoft.CSharp.xml",
+        "ref/netcore50/fr/Microsoft.CSharp.xml",
+        "ref/netcore50/it/Microsoft.CSharp.xml",
+        "ref/netcore50/ja/Microsoft.CSharp.xml",
+        "ref/netcore50/ko/Microsoft.CSharp.xml",
+        "ref/netcore50/ru/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hans/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hant/Microsoft.CSharp.xml",
+        "ref/netcoreapp2.0/_._",
+        "ref/netstandard1.0/Microsoft.CSharp.dll",
+        "ref/netstandard1.0/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/de/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/es/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/fr/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/it/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ja/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ko/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ru/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hans/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hant/Microsoft.CSharp.xml",
+        "ref/netstandard2.0/Microsoft.CSharp.dll",
+        "ref/netstandard2.0/Microsoft.CSharp.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/uap10.0.16299/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore/3.1.9": {
+      "sha512": "u3A2W0BvAuAF2jgW+WX+C+Sh8sMGX5Kl1hdA0gu6A/XSrZQoW/BUP4a/q2n3iitDGndaorqjAKx+Spb9gBto+w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.xml",
+        "microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+      "sha512": "IR6Y4RJVlw0QXdWXjF3Kx9s1QLiicJus+BFBKr43lBtriV20j3yrWMoaZ9W1AUUgnicZXpXVcNfklqtmwb9Sxw==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
+        "microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+      "sha512": "eXGyx/Lb1fiiKtnIStdxGrfBSSQg8oZytE10f1T/2xAx12W9dKB9U9fg05cwNCDC0S2CXILsmZHYaGqCSXVAqQ==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.analyzers/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.analyzers.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+      "sha512": "2zgP7BWcw5nqGQiT4bEtiI6ras+4pvKg5D+tA3AYvjEifzzaWvmRTb3B9nRHpIYJAhPtmWNBVnVXLbu3fS1OYA==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.design/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "build/net461/Microsoft.EntityFrameworkCore.Design.props",
+        "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.xml",
+        "microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.design.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+      "sha512": "7fhWuSfrCYlv/hvOX5OhbFJF/G9f8sifqTrJiYnAYLDOvNizwv7t9tFPD8JwaF3zM2S54O5/Vni2NxvwzSaW2w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.relational/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.xml",
+        "microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.relational.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+      "sha512": "mSgwjp0h5iqW5V49SVijR5O+kNpI1nitcbN12n9FYx/Ga6oCEFwXR/llBDesD6ASHw3Mx16vodJYJ7CEBx5rig==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.tools/3.1.9",
+      "hasTools": true,
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.tools.nuspec",
+        "tools/EntityFrameworkCore.PS2.psd1",
+        "tools/EntityFrameworkCore.PS2.psm1",
+        "tools/EntityFrameworkCore.psd1",
+        "tools/EntityFrameworkCore.psm1",
+        "tools/about_EntityFrameworkCore.help.txt",
+        "tools/init.ps1",
+        "tools/net461/any/ef.exe",
+        "tools/net461/win-x86/ef.exe",
+        "tools/netcoreapp2.0/any/ef.dll",
+        "tools/netcoreapp2.0/any/ef.runtimeconfig.json"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+      "sha512": "/2QsPAsUZD4qvftZkUKHRRRryPDXWh606/iNXPLrulwHLMr9JNsKBJWVqylT3qU92nJok5VoqSblkY9mSyxFyg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
+        "microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Memory/3.1.9": {
+      "sha512": "/JrVMVetX/kpJQUIlJ6NLQ3zbF0yyryXpo4+uFCqYIUZzgmWk8DS/zSKcyj1tQ3410+vhDEAPngxC+hg0IlJeg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.memory/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
+        "microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.memory.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration/3.1.9": {
+      "sha512": "lqdkOGNeTMKG981Q7yWGlRiFbIlsRwTlMMiybT+WOzUCFBS/wc25tZgh7Wm/uRoBbWefgvokzmnea7ZjmFedmA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
+        "microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+      "sha512": "vOJxPKczaHpXeZFrxARxYwsEulhEouXc5aZGgMdkhV/iEXX9/pfjqKk76rTG+4CsJjHV+G/4eMhvOIaQMHENNA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+      "sha512": "BG6HcT7tARYakftqfQu+cLksgIWG1NdxMY+igI12hdZrUK+WjS973NiRyuao/U9yyTeM9NPwRnC61hCmG3G3jg==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.binder/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
+        "microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.binder.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+      "sha512": "OC07LdaPMEeKYt1a4DJAzjKXUmP5K2MS4Sg0FvLrJF+9yd3YNTWSDrb1MpBuZ3564cbJJfyldICkSwCwWQ8lIw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.fileextensions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.fileextensions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Json/3.1.9": {
+      "sha512": "v1epO1J3qIqxwusz0gifp7hO+J2F/tBZOQAR9I1pLFDrX6NjQaYbZy4RGAU554Ntc0+lYAi0FA8CNMrQcTegYw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.json/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
+        "microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.json.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection/3.1.9": {
+      "sha512": "ORqfrAACcvTInie1oGola5uky344/PiNfgayTPuZWV4WnSfIQZJQm/ZLpGshJE3h7TqwYaYElGazK/yaM2bFLA==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
+        "microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+      "sha512": "8PkcaPwiTPOhqshoY4+rQUbz86X6YpLDLUqXOezh7L2A3pgpBmeBBByYIffofBlvQxDdQ0zB2DkWjbZWyCxRWg==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
+        "microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+      "sha512": "Q4SGwEFZKiZbpzPgdGbQUULxtcH1zXMOwCPKSm6QwVcOCGshf3QLfBh+O/GyFH4B0RfZ16nKyeW1mMONlRyjUw==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+      "sha512": "HWDSsblTCQp7EEJJmnLzttIhFGzDu+DGqBbOvGCdFT0+pkCuBkn3EiWpEEcm5WMTO5njmsbLSK9ZuUUf2zPsFg==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.physical/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
+        "microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.physical.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+      "sha512": "5bnewG1aBiSESPNwcXGIxDDRN95uqdy+fqZZ8Z63Et5rRNlAwAfXHOrg+FTht7UjHobjvtjzquMCbAWhWEPHIw==",
+      "type": "package",
+      "path": "microsoft.extensions.filesystemglobbing/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
+        "microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+        "microsoft.extensions.filesystemglobbing.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging/3.1.9": {
+      "sha512": "+V3i0jCQCO6IIOf6e+fL0SqrZd2x/Krug9EEL1JHa9R03RsbEpltCtjVY5hxedyuyuQKwvLoR12sCfu/9XEUAw==",
+      "type": "package",
+      "path": "microsoft.extensions.logging/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
+        "microsoft.extensions.logging.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+      "sha512": "W5fbF8qVR9SMVVJqDQLIR7meWbev6Pu/lbrm7LDNr4Sp7HOotr4k2UULTdFSXOi5aoDdkQZpWnq0ZSpjrR3tjg==",
+      "type": "package",
+      "path": "microsoft.extensions.logging.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
+        "microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Options/3.1.9": {
+      "sha512": "EIb3G1DL+Rl9MvJR7LjI1wCy2nfTN4y8MflbOftn1HLYQBj/Rwl8kUbGTrSFE01c99Wm4ETjWVsjqKcpFvhPng==",
+      "type": "package",
+      "path": "microsoft.extensions.options/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
+        "microsoft.extensions.options.3.1.9.nupkg.sha512",
+        "microsoft.extensions.options.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Primitives/3.1.9": {
+      "sha512": "IrHecH0eGG7/XoeEtv++oLg/sJHRNyeCqlA9RhAo6ig4GpOTjtDr32sBMYuuLtUq8ALahneWkrOzoBAwJ4L4iA==",
+      "type": "package",
+      "path": "microsoft.extensions.primitives/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
+        "microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+        "microsoft.extensions.primitives.nuspec"
+      ]
+    },
+    "Npgsql/4.1.3.1": {
+      "sha512": "354pl/Picmt5/AIrm8urFwtxfK4n4NbmfBnLA9yvP8VtILSQF3/sFo3+lGuz+q4iyD18QeNFy0NMNBzsocFVlw==",
+      "type": "package",
+      "path": "npgsql/4.1.3.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/net461/Npgsql.dll",
+        "lib/net461/Npgsql.pdb",
+        "lib/net461/Npgsql.xml",
+        "lib/netcoreapp3.0/Npgsql.dll",
+        "lib/netcoreapp3.0/Npgsql.pdb",
+        "lib/netcoreapp3.0/Npgsql.xml",
+        "lib/netstandard2.0/Npgsql.dll",
+        "lib/netstandard2.0/Npgsql.pdb",
+        "lib/netstandard2.0/Npgsql.xml",
+        "lib/netstandard2.1/Npgsql.dll",
+        "lib/netstandard2.1/Npgsql.pdb",
+        "lib/netstandard2.1/Npgsql.xml",
+        "npgsql.4.1.3.1.nupkg.sha512",
+        "npgsql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+      "sha512": "T+BIWO+ceje5d52/sOwwqaU/F4Rm2jAWx5qA3+pUGbzY/ZXG0QbHQsyjyg0k8aef6JTq8FRk3FtRWkocsa1QWQ==",
+      "type": "package",
+      "path": "npgsql.entityframeworkcore.postgresql/3.1.4",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
+        "npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+        "npgsql.entityframeworkcore.postgresql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "System.Collections.Immutable/1.7.1": {
+      "sha512": "B43Zsz5EfMwyEbnObwRxW5u85fzJma3lrDeGcSAV1qkhSRTNY5uXAByTn9h9ddNdhM+4/YoLc/CI43umjwIl9Q==",
+      "type": "package",
+      "path": "system.collections.immutable/1.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/System.Collections.Immutable.dll",
+        "lib/net461/System.Collections.Immutable.xml",
+        "lib/netstandard1.0/System.Collections.Immutable.dll",
+        "lib/netstandard1.0/System.Collections.Immutable.xml",
+        "lib/netstandard1.3/System.Collections.Immutable.dll",
+        "lib/netstandard1.3/System.Collections.Immutable.xml",
+        "lib/netstandard2.0/System.Collections.Immutable.dll",
+        "lib/netstandard2.0/System.Collections.Immutable.xml",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.dll",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.xml",
+        "system.collections.immutable.1.7.1.nupkg.sha512",
+        "system.collections.immutable.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.ComponentModel.Annotations/4.7.0": {
+      "sha512": "0YFqjhp/mYkDGpU0Ye1GjE53HMp9UVfGN7seGpAMttAC0C40v5gw598jCgpbBLMmCo0E5YRLBv5Z2doypO49ZQ==",
+      "type": "package",
+      "path": "system.componentmodel.annotations/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/net461/System.ComponentModel.Annotations.dll",
+        "lib/netcore50/System.ComponentModel.Annotations.dll",
+        "lib/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "lib/portable-net45+win8/_._",
+        "lib/win8/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/net461/System.ComponentModel.Annotations.dll",
+        "ref/net461/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/System.ComponentModel.Annotations.dll",
+        "ref/netcore50/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/de/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/es/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/fr/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/it/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ja/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ko/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ru/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "ref/portable-net45+win8/_._",
+        "ref/win8/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.componentmodel.annotations.4.7.0.nupkg.sha512",
+        "system.componentmodel.annotations.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Diagnostics.DiagnosticSource/4.7.1": {
+      "sha512": "j81Lovt90PDAq8kLpaJfJKV/rWdWuEk6jfV+MBkee33vzYLEUsy4gXK8laa9V2nZlLM9VM9yA/OOQxxPEJKAMw==",
+      "type": "package",
+      "path": "system.diagnostics.diagnosticsource/4.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net45/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net45/System.Diagnostics.DiagnosticSource.xml",
+        "lib/net46/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net46/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.xml",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.dll",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.xml",
+        "system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+        "system.diagnostics.diagnosticsource.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+      "sha512": "HxozeSlipUK7dAroTYwIcGwKDeOVpQnJlpVaOkBz7CM4TsE5b/tKlQBZecTjh6FzcSbxndYaxxpsBMz+wMJeyw==",
+      "type": "package",
+      "path": "system.runtime.compilerservices.unsafe/4.6.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512",
+        "system.runtime.compilerservices.unsafe.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    }
+  },
+  "projectFileDependencyGroups": {
+    ".NETCoreApp,Version=v3.1": [
+      "Microsoft.EntityFrameworkCore.Design >= 3.1.9",
+      "Microsoft.EntityFrameworkCore.Tools >= 3.1.9",
+      "Microsoft.Extensions.Configuration.Json >= 3.1.9",
+      "Npgsql.EntityFrameworkCore.PostgreSQL >= 3.1.4"
+    ]
+  },
+  "packageFolders": {
+    "C:\\Users\\Ckat\\.nuget\\packages\\": {}
+  },
+  "project": {
+    "version": "1.0.0",
+    "restore": {
+      "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+      "projectName": "SavvyDB",
+      "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+      "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+      "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\obj\\",
+      "projectStyle": "PackageReference",
+      "configFilePaths": [
+        "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+      ],
+      "originalTargetFrameworks": [
+        "netcoreapp3.1"
+      ],
+      "sources": {
+        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+        "https://api.nuget.org/v3/index.json": {}
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "projectReferences": {}
+        }
+      },
+      "warningProperties": {
+        "warnAsError": [
+          "NU1605"
+        ]
+      }
+    },
+    "frameworks": {
+      "netcoreapp3.1": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.EntityFrameworkCore.Tools": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.Extensions.Configuration.Json": {
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Npgsql.EntityFrameworkCore.PostgreSQL": {
+            "target": "Package",
+            "version": "[3.1.4, )"
+          }
+        },
+        "imports": [
+          "net461",
+          "net462",
+          "net47",
+          "net471",
+          "net472",
+          "net48"
+        ],
+        "assetTargetFallback": true,
+        "warn": true,
+        "frameworkReferences": {
+          "Microsoft.NETCore.App": {
+            "privateAssets": "all"
+          }
+        },
+        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyDB/obj/project.nuget.cache b/SavvyDB/obj/project.nuget.cache
new file mode 100644
index 0000000..6ade745
--- /dev/null
+++ b/SavvyDB/obj/project.nuget.cache
@@ -0,0 +1,40 @@
+{
+  "version": 2,
+  "dgSpecHash": "bf+VssTaLHjfd+4teeF/LaCVKiu4P1z7vQymXeZD841FYcrRrexBStYa8ULIHLyg4/WM6XWrAMeu6EO0NtRb5w==",
+  "success": true,
+  "projectFilePath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+  "expectedPackageFiles": [
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.asyncinterfaces\\1.1.1\\microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.hashcode\\1.1.0\\microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.csharp\\4.7.0\\microsoft.csharp.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore\\3.1.9\\microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\3.1.9\\microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.analyzers\\3.1.9\\microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.design\\3.1.9\\microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\3.1.9\\microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\3.1.9\\microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\3.1.9\\microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.memory\\3.1.9\\microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration\\3.1.9\\microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\3.1.9\\microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.binder\\3.1.9\\microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.fileextensions\\3.1.9\\microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.json\\3.1.9\\microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\3.1.9\\microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\3.1.9\\microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.abstractions\\3.1.9\\microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.physical\\3.1.9\\microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.filesystemglobbing\\3.1.9\\microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging\\3.1.9\\microsoft.extensions.logging.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\3.1.9\\microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.options\\3.1.9\\microsoft.extensions.options.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.primitives\\3.1.9\\microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql\\4.1.3.1\\npgsql.4.1.3.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql.entityframeworkcore.postgresql\\3.1.4\\npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.collections.immutable\\1.7.1\\system.collections.immutable.1.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.componentmodel.annotations\\4.7.0\\system.componentmodel.annotations.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.diagnostics.diagnosticsource\\4.7.1\\system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.6.0\\system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512"
+  ],
+  "logs": []
+}
\ No newline at end of file
diff --git a/SavvyLib/CartItemTask.cs b/SavvyLib/CartItemTask.cs
new file mode 100644
index 0000000..1188dd2
--- /dev/null
+++ b/SavvyLib/CartItemTask.cs
@@ -0,0 +1,40 @@
+using SavvyDB;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyLib
+{
+    public class CartItemTask
+    {
+        private SavvyRepo repo;
+        public CartItemTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+
+        public void AddCartItem(CartItem cartitem) 
+        {
+            repo.AddCartItem(cartitem);
+        }
+
+        public CartItem GetCartItem(int id)
+        {
+            CartItem cartitem = repo.GetCartItem(id);
+            return cartitem;
+        }
+        public List<CartItem> GetAllCartItems(int id)
+        {
+            List<CartItem> cartitem = repo.GetAllCartItems(id);
+            return cartitem;
+        }
+
+        public void UpdateCartItem(CartItem cartitem)
+        {
+            repo.UpdateCartItem(cartitem);
+        }
+
+        public void DeleteCartItem(CartItem cartitem)
+        {
+            repo.DeleteCartItem(cartitem);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/CartTask.cs b/SavvyLib/CartTask.cs
new file mode 100644
index 0000000..313efa1
--- /dev/null
+++ b/SavvyLib/CartTask.cs
@@ -0,0 +1,35 @@
+using SavvyDB;
+using SavvyDB.Models;
+
+namespace SavvyLib
+{
+
+    public class CartTask
+    {
+        private SavvyRepo repo;
+        public CartTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+        public void AddCart(Cart cart)
+        {
+            repo.AddCart(cart);
+        }
+        public void UpdateCart(Cart cart)
+        {
+            repo.UpdateCart(cart);
+        }
+        public Cart GetCart(int id)
+        {
+            return repo.GetCart(id);
+        }
+        public Cart GetCartByCustomer(int id)
+        {
+            return repo.GetCartByCustomer(id);
+        }
+        public void DeleteCart(Cart cart)
+        {
+            repo.DeleteCart(cart);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/CustomerTask.cs b/SavvyLib/CustomerTask.cs
new file mode 100644
index 0000000..e4c17de
--- /dev/null
+++ b/SavvyLib/CustomerTask.cs
@@ -0,0 +1,31 @@
+using SavvyDB;
+using SavvyDB.Models;
+
+namespace SavvyLib
+{
+    public class CustomerTask
+    {
+        private SavvyRepo repo;
+        public CustomerTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+
+        public void AddCustomer(Customer Customer)
+        {
+            repo.AddCustomer(Customer);
+        }
+        public Customer GetCustomer(int id)
+        {
+            return repo.GetCustomer(id);
+        }
+        public void UpdateCustomer(Customer Customer)
+        {
+            repo.UpdateCustomer(Customer);
+        }
+        public void RemoveCustomer(Customer Customer)
+        {
+            repo.DeleteCustomer(Customer);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/InventoryTask.cs b/SavvyLib/InventoryTask.cs
new file mode 100644
index 0000000..bba9417
--- /dev/null
+++ b/SavvyLib/InventoryTask.cs
@@ -0,0 +1,36 @@
+using SavvyDB;
+using SavvyDB.Models;
+using System.Collections.Generic;
+
+namespace SavvyLib
+{
+    public class InventoryTask
+    {
+        private SavvyRepo repo;
+        public InventoryTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+
+        public void AddInventory(Inventory Inventory)
+        {
+            repo.AddInventory(Inventory);
+        }
+        public List<Inventory> GetInventoryByLocation(int id)
+        {
+            return repo.GetInventoryByLocation(id);
+        }
+        public Inventory GetInventory(int id)
+        {
+            return repo.GetInventory(id);
+        }
+        public void UpdateInventory(Inventory Inventory)
+        {
+            repo.UpdateInventory(Inventory);
+        }
+        public void RemoveInventory(Inventory Inventory)
+        {
+            repo.DeleteInventory(Inventory);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/LocationTask.cs b/SavvyLib/LocationTask.cs
new file mode 100644
index 0000000..d34361c
--- /dev/null
+++ b/SavvyLib/LocationTask.cs
@@ -0,0 +1,32 @@
+using SavvyDB;
+using SavvyDB.Models;
+using System.Collections.Generic;
+namespace SavvyLib
+
+{
+    public class LocationTask
+    {
+        private SavvyRepo repo;
+        public LocationTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+
+        public void AddLocation(Location Location)
+        {
+            repo.AddLocation(Location);
+        }
+        public Location GetLocation(int id)
+        {
+            return repo.GetLocation(id);
+        }
+        public List<Location> GetAllLocations()
+        {
+            return repo.GetAllLocations();
+        }
+        public void UpdateLocation(Location Location)
+        {
+            repo.AddLocation(Location);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/ManagerTask.cs b/SavvyLib/ManagerTask.cs
new file mode 100644
index 0000000..656af93
--- /dev/null
+++ b/SavvyLib/ManagerTask.cs
@@ -0,0 +1,32 @@
+using SavvyDB.Models;
+using SavvyDB;
+
+
+namespace SavvyLib
+{
+    public class ManagerTask
+    {
+        private SavvyRepo repo;
+
+        public ManagerTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+        public void AddManager(Manager Manager)
+        {
+            repo.AddManager(Manager);
+        }
+        public Manager GetManager(int id)
+        {
+            return repo.GetManager(id);
+        }
+        public void UpdateManager(Manager Manager)
+        {
+            repo.UpdateManager(Manager);
+        }
+        public void RemoveManager(Manager Manager)
+        {
+            repo.DeleteManager(Manager);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/OrderItemTask.cs b/SavvyLib/OrderItemTask.cs
new file mode 100644
index 0000000..63a1ac3
--- /dev/null
+++ b/SavvyLib/OrderItemTask.cs
@@ -0,0 +1,31 @@
+using SavvyDB;
+using SavvyDB.Models;
+
+namespace SavvyLib
+{
+    public class OrderItemTask
+    {
+        private SavvyRepo repo;
+
+        public OrderItemTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+        public void AddOrderItem(OrderItem OrderItem)
+        {
+            repo.AddOrderItem(OrderItem);
+        }
+        public OrderItem GetOrderItem(int id)
+        {
+            return repo.GetOrderItem(id);
+        }
+        public void UpdateOrderItem(OrderItem OrderItem)
+        {
+            repo.UpdateOrderItem(OrderItem);
+        }
+        public void RemoveOrderItem(OrderItem OrderItem)
+        {
+            repo.DeleteOrderItem(OrderItem);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/OrderTask.cs b/SavvyLib/OrderTask.cs
new file mode 100644
index 0000000..d09ea76
--- /dev/null
+++ b/SavvyLib/OrderTask.cs
@@ -0,0 +1,57 @@
+using SavvyDB;
+using SavvyDB.Models;
+using System.Collections.Generic;
+using System;
+
+namespace SavvyLib
+{
+    public class OrderTask
+    {
+        private SavvyRepo repo;
+
+        public OrderTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+        public void AddOrder(Order Order)
+        {
+            repo.AddOrder(Order);
+        }
+        public Order GetOrder(int id)
+        {
+           return repo.GetOrder(id);
+        }
+        public List<Order> GetAllOrders()
+        {
+            return repo.GetAllOrders();
+        }
+        public Order GetOrderByDate(DateTime date)
+        {
+            return repo.GetOrderByDate(date);
+        }
+        public List<Order> GetOrderFirst(DateTime date)
+        {
+            return repo.GetOrderFirst(date);
+        }
+        public List<Order> GetOrderLast(DateTime date)
+        {
+            return repo.GetOrderLast(date);
+        }
+        public List<Order> GetOrderCheap(Customer Customer)
+        {
+            return repo.GetOrderCheap(Customer);
+        }
+        public List<Order> GetOrderExpensive(Customer Customer)
+        {
+            return repo.GetOrderExpensive(Customer);
+        }
+        public void UpdateOrder(Order Order)
+        {
+            repo.UpdateOrder(Order);
+        }
+        public void RemoveOrder(Order Order)
+        {
+            repo.DeleteOrder(Order);
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyLib/ProductTask.cs b/SavvyLib/ProductTask.cs
new file mode 100644
index 0000000..50fc568
--- /dev/null
+++ b/SavvyLib/ProductTask.cs
@@ -0,0 +1,31 @@
+using SavvyDB;
+using SavvyDB.Models;
+
+namespace SavvyLib
+{
+    public class ProductTask
+    {
+        private SavvyRepo repo;
+
+        public ProductTask(SavvyRepo repo)
+        {
+            this.repo = repo;
+        }
+        public void AddProduct(Product Product)
+        {
+            repo.AddProduct(Product);
+        }
+        public Product GetProduct(int id)
+        {
+            return repo.GetProduct(id);
+        }
+        public void UpdateProduct(Product Product)
+        {
+            repo.UpdateProduct(Product);
+        }
+        public void RemoveProduct(Product Product)
+        {
+            repo.DeleteProduct(Product);
+        }
+    }
+}
\ No newline at end of file
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseDB.csproj b/SavvyLib/SavvyLib.csproj
similarity index 83%
rename from Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseDB.csproj
rename to SavvyLib/SavvyLib.csproj
index bacb7a1..401c5ce 100644
--- a/Lacrosse101_P0/lacrosse101/lacrosseDB/lacrosseDB.csproj
+++ b/SavvyLib/SavvyLib.csproj
@@ -1,6 +1,14 @@
 <Project Sdk="Microsoft.NET.Sdk">
 
+  <PropertyGroup>
+    <TargetFramework>netcoreapp3.1</TargetFramework>
+  </PropertyGroup>
+  
   <ItemGroup>
+    <ProjectReference Include="..\SavvyDB\SavvyDB.csproj" />
+  </ItemGroup>
+
+<ItemGroup>
     <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="3.1.9">
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
       <PrivateAssets>all</PrivateAssets>
@@ -11,11 +19,5 @@
     </PackageReference>
     <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.9" />
     <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.4" />
-    <PackageReference Include="System.Text.Json" Version="4.7.2" />
   </ItemGroup>
-
-  <PropertyGroup>
-    <TargetFramework>netstandard2.0</TargetFramework>
-  </PropertyGroup>
-
-</Project>
\ No newline at end of file
+</Project>
diff --git a/SavvyLib/obj/SavvyLib.csproj.nuget.dgspec.json b/SavvyLib/obj/SavvyLib.csproj.nuget.dgspec.json
new file mode 100644
index 0000000..1797c38
--- /dev/null
+++ b/SavvyLib/obj/SavvyLib.csproj.nuget.dgspec.json
@@ -0,0 +1,160 @@
+{
+  "format": 1,
+  "restore": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj": {}
+  },
+  "projects": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "projectName": "SavvyDB",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {}
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    },
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+        "projectName": "SavvyLib",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {
+              "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+                "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj"
+              }
+            }
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyLib/obj/SavvyLib.csproj.nuget.g.props b/SavvyLib/obj/SavvyLib.csproj.nuget.g.props
new file mode 100644
index 0000000..30e71b5
--- /dev/null
+++ b/SavvyLib/obj/SavvyLib.csproj.nuget.g.props
@@ -0,0 +1,24 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
+    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
+    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
+    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
+    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\Ckat\.nuget\packages\</NuGetPackageFolders>
+    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
+    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">5.7.0</NuGetToolVersion>
+  </PropertyGroup>
+  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <SourceRoot Include="$([MSBuild]::EnsureTrailingSlash($(NuGetPackageFolders)))" />
+  </ItemGroup>
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <Import Project="$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props" Condition="Exists('$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props')" />
+  </ImportGroup>
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <PkgMicrosoft_EntityFrameworkCore_Tools Condition=" '$(PkgMicrosoft_EntityFrameworkCore_Tools)' == '' ">C:\Users\Ckat\.nuget\packages\microsoft.entityframeworkcore.tools\3.1.9</PkgMicrosoft_EntityFrameworkCore_Tools>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyLib/obj/SavvyLib.csproj.nuget.g.targets b/SavvyLib/obj/SavvyLib.csproj.nuget.g.targets
new file mode 100644
index 0000000..53cfaa1
--- /dev/null
+++ b/SavvyLib/obj/SavvyLib.csproj.nuget.g.targets
@@ -0,0 +1,6 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyLib/obj/project.assets.json b/SavvyLib/obj/project.assets.json
new file mode 100644
index 0000000..5fecfd6
--- /dev/null
+++ b/SavvyLib/obj/project.assets.json
@@ -0,0 +1,1151 @@
+{
+  "version": 3,
+  "targets": {
+    ".NETCoreApp,Version=v3.1": {
+      "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        }
+      },
+      "Microsoft.Bcl.HashCode/1.1.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        }
+      },
+      "Microsoft.CSharp/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Bcl.AsyncInterfaces": "1.1.1",
+          "Microsoft.Bcl.HashCode": "1.1.0",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Analyzers": "3.1.9",
+          "Microsoft.Extensions.Caching.Memory": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging": "3.1.9",
+          "System.Collections.Immutable": "1.7.1",
+          "System.ComponentModel.Annotations": "4.7.0",
+          "System.Diagnostics.DiagnosticSource": "4.7.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.CSharp": "4.7.0",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll": {}
+        },
+        "build": {
+          "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Memory/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Caching.Abstractions": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.FileProviders.Physical": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Json/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.Configuration.FileExtensions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.FileProviders.Abstractions": "3.1.9",
+          "Microsoft.Extensions.FileSystemGlobbing": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Binder": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Options/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Primitives/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        }
+      },
+      "Npgsql/4.1.3.1": {
+        "type": "package",
+        "dependencies": {
+          "System.Runtime.CompilerServices.Unsafe": "4.6.0"
+        },
+        "compile": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        }
+      },
+      "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.4",
+          "Npgsql": "4.1.3.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        }
+      },
+      "System.Collections.Immutable/1.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        }
+      },
+      "System.ComponentModel.Annotations/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        }
+      },
+      "System.Diagnostics.DiagnosticSource/4.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        }
+      },
+      "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        }
+      },
+      "SavvyDB/1.0.0": {
+        "type": "project",
+        "framework": ".NETCoreApp,Version=v3.1",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4"
+        },
+        "compile": {
+          "bin/placeholder/SavvyDB.dll": {}
+        },
+        "runtime": {
+          "bin/placeholder/SavvyDB.dll": {}
+        }
+      }
+    }
+  },
+  "libraries": {
+    "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+      "sha512": "yuvf07qFWFqtK3P/MRkEKLhn5r2UbSpVueRziSqj0yJQIKFwG1pq9mOayK3zE5qZCTs0CbrwL9M6R8VwqyGy2w==",
+      "type": "package",
+      "path": "microsoft.bcl.asyncinterfaces/1.1.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
+        "microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+        "microsoft.bcl.asyncinterfaces.nuspec",
+        "ref/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.Bcl.HashCode/1.1.0": {
+      "sha512": "J2G1k+u5unBV+aYcwxo94ip16Rkp65pgWFb0R6zwJipzWNMgvqlWeuI7/+R+e8bob66LnSG+llLJ+z8wI94cHg==",
+      "type": "package",
+      "path": "microsoft.bcl.hashcode/1.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.HashCode.dll",
+        "lib/net461/Microsoft.Bcl.HashCode.xml",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.xml",
+        "microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+        "microsoft.bcl.hashcode.nuspec",
+        "ref/net461/Microsoft.Bcl.HashCode.dll",
+        "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.CSharp/4.7.0": {
+      "sha512": "pTj+D3uJWyN3My70i2Hqo+OXixq3Os2D1nJ2x92FFo6sk8fYS1m1WLNTs0Dc1uPaViH0YvEEwvzddQ7y4rhXmA==",
+      "type": "package",
+      "path": "microsoft.csharp/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/netcore50/Microsoft.CSharp.dll",
+        "lib/netcoreapp2.0/_._",
+        "lib/netstandard1.3/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.xml",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/uap10.0.16299/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "microsoft.csharp.4.7.0.nupkg.sha512",
+        "microsoft.csharp.nuspec",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/Microsoft.CSharp.dll",
+        "ref/netcore50/Microsoft.CSharp.xml",
+        "ref/netcore50/de/Microsoft.CSharp.xml",
+        "ref/netcore50/es/Microsoft.CSharp.xml",
+        "ref/netcore50/fr/Microsoft.CSharp.xml",
+        "ref/netcore50/it/Microsoft.CSharp.xml",
+        "ref/netcore50/ja/Microsoft.CSharp.xml",
+        "ref/netcore50/ko/Microsoft.CSharp.xml",
+        "ref/netcore50/ru/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hans/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hant/Microsoft.CSharp.xml",
+        "ref/netcoreapp2.0/_._",
+        "ref/netstandard1.0/Microsoft.CSharp.dll",
+        "ref/netstandard1.0/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/de/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/es/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/fr/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/it/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ja/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ko/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ru/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hans/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hant/Microsoft.CSharp.xml",
+        "ref/netstandard2.0/Microsoft.CSharp.dll",
+        "ref/netstandard2.0/Microsoft.CSharp.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/uap10.0.16299/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore/3.1.9": {
+      "sha512": "u3A2W0BvAuAF2jgW+WX+C+Sh8sMGX5Kl1hdA0gu6A/XSrZQoW/BUP4a/q2n3iitDGndaorqjAKx+Spb9gBto+w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.xml",
+        "microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+      "sha512": "IR6Y4RJVlw0QXdWXjF3Kx9s1QLiicJus+BFBKr43lBtriV20j3yrWMoaZ9W1AUUgnicZXpXVcNfklqtmwb9Sxw==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
+        "microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+      "sha512": "eXGyx/Lb1fiiKtnIStdxGrfBSSQg8oZytE10f1T/2xAx12W9dKB9U9fg05cwNCDC0S2CXILsmZHYaGqCSXVAqQ==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.analyzers/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.analyzers.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+      "sha512": "2zgP7BWcw5nqGQiT4bEtiI6ras+4pvKg5D+tA3AYvjEifzzaWvmRTb3B9nRHpIYJAhPtmWNBVnVXLbu3fS1OYA==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.design/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "build/net461/Microsoft.EntityFrameworkCore.Design.props",
+        "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.xml",
+        "microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.design.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+      "sha512": "7fhWuSfrCYlv/hvOX5OhbFJF/G9f8sifqTrJiYnAYLDOvNizwv7t9tFPD8JwaF3zM2S54O5/Vni2NxvwzSaW2w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.relational/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.xml",
+        "microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.relational.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+      "sha512": "mSgwjp0h5iqW5V49SVijR5O+kNpI1nitcbN12n9FYx/Ga6oCEFwXR/llBDesD6ASHw3Mx16vodJYJ7CEBx5rig==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.tools/3.1.9",
+      "hasTools": true,
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.tools.nuspec",
+        "tools/EntityFrameworkCore.PS2.psd1",
+        "tools/EntityFrameworkCore.PS2.psm1",
+        "tools/EntityFrameworkCore.psd1",
+        "tools/EntityFrameworkCore.psm1",
+        "tools/about_EntityFrameworkCore.help.txt",
+        "tools/init.ps1",
+        "tools/net461/any/ef.exe",
+        "tools/net461/win-x86/ef.exe",
+        "tools/netcoreapp2.0/any/ef.dll",
+        "tools/netcoreapp2.0/any/ef.runtimeconfig.json"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+      "sha512": "/2QsPAsUZD4qvftZkUKHRRRryPDXWh606/iNXPLrulwHLMr9JNsKBJWVqylT3qU92nJok5VoqSblkY9mSyxFyg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
+        "microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Memory/3.1.9": {
+      "sha512": "/JrVMVetX/kpJQUIlJ6NLQ3zbF0yyryXpo4+uFCqYIUZzgmWk8DS/zSKcyj1tQ3410+vhDEAPngxC+hg0IlJeg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.memory/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
+        "microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.memory.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration/3.1.9": {
+      "sha512": "lqdkOGNeTMKG981Q7yWGlRiFbIlsRwTlMMiybT+WOzUCFBS/wc25tZgh7Wm/uRoBbWefgvokzmnea7ZjmFedmA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
+        "microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+      "sha512": "vOJxPKczaHpXeZFrxARxYwsEulhEouXc5aZGgMdkhV/iEXX9/pfjqKk76rTG+4CsJjHV+G/4eMhvOIaQMHENNA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+      "sha512": "BG6HcT7tARYakftqfQu+cLksgIWG1NdxMY+igI12hdZrUK+WjS973NiRyuao/U9yyTeM9NPwRnC61hCmG3G3jg==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.binder/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
+        "microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.binder.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+      "sha512": "OC07LdaPMEeKYt1a4DJAzjKXUmP5K2MS4Sg0FvLrJF+9yd3YNTWSDrb1MpBuZ3564cbJJfyldICkSwCwWQ8lIw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.fileextensions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.fileextensions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Json/3.1.9": {
+      "sha512": "v1epO1J3qIqxwusz0gifp7hO+J2F/tBZOQAR9I1pLFDrX6NjQaYbZy4RGAU554Ntc0+lYAi0FA8CNMrQcTegYw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.json/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
+        "microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.json.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection/3.1.9": {
+      "sha512": "ORqfrAACcvTInie1oGola5uky344/PiNfgayTPuZWV4WnSfIQZJQm/ZLpGshJE3h7TqwYaYElGazK/yaM2bFLA==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
+        "microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+      "sha512": "8PkcaPwiTPOhqshoY4+rQUbz86X6YpLDLUqXOezh7L2A3pgpBmeBBByYIffofBlvQxDdQ0zB2DkWjbZWyCxRWg==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
+        "microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+      "sha512": "Q4SGwEFZKiZbpzPgdGbQUULxtcH1zXMOwCPKSm6QwVcOCGshf3QLfBh+O/GyFH4B0RfZ16nKyeW1mMONlRyjUw==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+      "sha512": "HWDSsblTCQp7EEJJmnLzttIhFGzDu+DGqBbOvGCdFT0+pkCuBkn3EiWpEEcm5WMTO5njmsbLSK9ZuUUf2zPsFg==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.physical/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
+        "microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.physical.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+      "sha512": "5bnewG1aBiSESPNwcXGIxDDRN95uqdy+fqZZ8Z63Et5rRNlAwAfXHOrg+FTht7UjHobjvtjzquMCbAWhWEPHIw==",
+      "type": "package",
+      "path": "microsoft.extensions.filesystemglobbing/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
+        "microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+        "microsoft.extensions.filesystemglobbing.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging/3.1.9": {
+      "sha512": "+V3i0jCQCO6IIOf6e+fL0SqrZd2x/Krug9EEL1JHa9R03RsbEpltCtjVY5hxedyuyuQKwvLoR12sCfu/9XEUAw==",
+      "type": "package",
+      "path": "microsoft.extensions.logging/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
+        "microsoft.extensions.logging.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+      "sha512": "W5fbF8qVR9SMVVJqDQLIR7meWbev6Pu/lbrm7LDNr4Sp7HOotr4k2UULTdFSXOi5aoDdkQZpWnq0ZSpjrR3tjg==",
+      "type": "package",
+      "path": "microsoft.extensions.logging.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
+        "microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Options/3.1.9": {
+      "sha512": "EIb3G1DL+Rl9MvJR7LjI1wCy2nfTN4y8MflbOftn1HLYQBj/Rwl8kUbGTrSFE01c99Wm4ETjWVsjqKcpFvhPng==",
+      "type": "package",
+      "path": "microsoft.extensions.options/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
+        "microsoft.extensions.options.3.1.9.nupkg.sha512",
+        "microsoft.extensions.options.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Primitives/3.1.9": {
+      "sha512": "IrHecH0eGG7/XoeEtv++oLg/sJHRNyeCqlA9RhAo6ig4GpOTjtDr32sBMYuuLtUq8ALahneWkrOzoBAwJ4L4iA==",
+      "type": "package",
+      "path": "microsoft.extensions.primitives/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
+        "microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+        "microsoft.extensions.primitives.nuspec"
+      ]
+    },
+    "Npgsql/4.1.3.1": {
+      "sha512": "354pl/Picmt5/AIrm8urFwtxfK4n4NbmfBnLA9yvP8VtILSQF3/sFo3+lGuz+q4iyD18QeNFy0NMNBzsocFVlw==",
+      "type": "package",
+      "path": "npgsql/4.1.3.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/net461/Npgsql.dll",
+        "lib/net461/Npgsql.pdb",
+        "lib/net461/Npgsql.xml",
+        "lib/netcoreapp3.0/Npgsql.dll",
+        "lib/netcoreapp3.0/Npgsql.pdb",
+        "lib/netcoreapp3.0/Npgsql.xml",
+        "lib/netstandard2.0/Npgsql.dll",
+        "lib/netstandard2.0/Npgsql.pdb",
+        "lib/netstandard2.0/Npgsql.xml",
+        "lib/netstandard2.1/Npgsql.dll",
+        "lib/netstandard2.1/Npgsql.pdb",
+        "lib/netstandard2.1/Npgsql.xml",
+        "npgsql.4.1.3.1.nupkg.sha512",
+        "npgsql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+      "sha512": "T+BIWO+ceje5d52/sOwwqaU/F4Rm2jAWx5qA3+pUGbzY/ZXG0QbHQsyjyg0k8aef6JTq8FRk3FtRWkocsa1QWQ==",
+      "type": "package",
+      "path": "npgsql.entityframeworkcore.postgresql/3.1.4",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
+        "npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+        "npgsql.entityframeworkcore.postgresql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "System.Collections.Immutable/1.7.1": {
+      "sha512": "B43Zsz5EfMwyEbnObwRxW5u85fzJma3lrDeGcSAV1qkhSRTNY5uXAByTn9h9ddNdhM+4/YoLc/CI43umjwIl9Q==",
+      "type": "package",
+      "path": "system.collections.immutable/1.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/System.Collections.Immutable.dll",
+        "lib/net461/System.Collections.Immutable.xml",
+        "lib/netstandard1.0/System.Collections.Immutable.dll",
+        "lib/netstandard1.0/System.Collections.Immutable.xml",
+        "lib/netstandard1.3/System.Collections.Immutable.dll",
+        "lib/netstandard1.3/System.Collections.Immutable.xml",
+        "lib/netstandard2.0/System.Collections.Immutable.dll",
+        "lib/netstandard2.0/System.Collections.Immutable.xml",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.dll",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.xml",
+        "system.collections.immutable.1.7.1.nupkg.sha512",
+        "system.collections.immutable.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.ComponentModel.Annotations/4.7.0": {
+      "sha512": "0YFqjhp/mYkDGpU0Ye1GjE53HMp9UVfGN7seGpAMttAC0C40v5gw598jCgpbBLMmCo0E5YRLBv5Z2doypO49ZQ==",
+      "type": "package",
+      "path": "system.componentmodel.annotations/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/net461/System.ComponentModel.Annotations.dll",
+        "lib/netcore50/System.ComponentModel.Annotations.dll",
+        "lib/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "lib/portable-net45+win8/_._",
+        "lib/win8/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/net461/System.ComponentModel.Annotations.dll",
+        "ref/net461/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/System.ComponentModel.Annotations.dll",
+        "ref/netcore50/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/de/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/es/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/fr/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/it/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ja/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ko/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ru/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "ref/portable-net45+win8/_._",
+        "ref/win8/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.componentmodel.annotations.4.7.0.nupkg.sha512",
+        "system.componentmodel.annotations.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Diagnostics.DiagnosticSource/4.7.1": {
+      "sha512": "j81Lovt90PDAq8kLpaJfJKV/rWdWuEk6jfV+MBkee33vzYLEUsy4gXK8laa9V2nZlLM9VM9yA/OOQxxPEJKAMw==",
+      "type": "package",
+      "path": "system.diagnostics.diagnosticsource/4.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net45/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net45/System.Diagnostics.DiagnosticSource.xml",
+        "lib/net46/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net46/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.xml",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.dll",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.xml",
+        "system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+        "system.diagnostics.diagnosticsource.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+      "sha512": "HxozeSlipUK7dAroTYwIcGwKDeOVpQnJlpVaOkBz7CM4TsE5b/tKlQBZecTjh6FzcSbxndYaxxpsBMz+wMJeyw==",
+      "type": "package",
+      "path": "system.runtime.compilerservices.unsafe/4.6.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512",
+        "system.runtime.compilerservices.unsafe.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "SavvyDB/1.0.0": {
+      "type": "project",
+      "path": "../SavvyDB/SavvyDB.csproj",
+      "msbuildProject": "../SavvyDB/SavvyDB.csproj"
+    }
+  },
+  "projectFileDependencyGroups": {
+    ".NETCoreApp,Version=v3.1": [
+      "Microsoft.EntityFrameworkCore.Design >= 3.1.9",
+      "Microsoft.EntityFrameworkCore.Tools >= 3.1.9",
+      "Microsoft.Extensions.Configuration.Json >= 3.1.9",
+      "Npgsql.EntityFrameworkCore.PostgreSQL >= 3.1.4",
+      "SavvyDB >= 1.0.0"
+    ]
+  },
+  "packageFolders": {
+    "C:\\Users\\Ckat\\.nuget\\packages\\": {}
+  },
+  "project": {
+    "version": "1.0.0",
+    "restore": {
+      "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+      "projectName": "SavvyLib",
+      "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+      "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+      "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\obj\\",
+      "projectStyle": "PackageReference",
+      "configFilePaths": [
+        "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+      ],
+      "originalTargetFrameworks": [
+        "netcoreapp3.1"
+      ],
+      "sources": {
+        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+        "https://api.nuget.org/v3/index.json": {}
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "projectReferences": {
+            "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+              "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj"
+            }
+          }
+        }
+      },
+      "warningProperties": {
+        "warnAsError": [
+          "NU1605"
+        ]
+      }
+    },
+    "frameworks": {
+      "netcoreapp3.1": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.EntityFrameworkCore.Tools": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.Extensions.Configuration.Json": {
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Npgsql.EntityFrameworkCore.PostgreSQL": {
+            "target": "Package",
+            "version": "[3.1.4, )"
+          }
+        },
+        "imports": [
+          "net461",
+          "net462",
+          "net47",
+          "net471",
+          "net472",
+          "net48"
+        ],
+        "assetTargetFallback": true,
+        "warn": true,
+        "frameworkReferences": {
+          "Microsoft.NETCore.App": {
+            "privateAssets": "all"
+          }
+        },
+        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyLib/obj/project.nuget.cache b/SavvyLib/obj/project.nuget.cache
new file mode 100644
index 0000000..5b3c346
--- /dev/null
+++ b/SavvyLib/obj/project.nuget.cache
@@ -0,0 +1,40 @@
+{
+  "version": 2,
+  "dgSpecHash": "OVH9dZHkCGb2qMYJzQXtKvpbOh63ezYJekobeLEJcYlC6iwYGJcrx9HtSstdEx0RNPhO2+RoRHK44ZCaCviMFA==",
+  "success": true,
+  "projectFilePath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+  "expectedPackageFiles": [
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.asyncinterfaces\\1.1.1\\microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.hashcode\\1.1.0\\microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.csharp\\4.7.0\\microsoft.csharp.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore\\3.1.9\\microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\3.1.9\\microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.analyzers\\3.1.9\\microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.design\\3.1.9\\microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\3.1.9\\microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\3.1.9\\microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\3.1.9\\microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.memory\\3.1.9\\microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration\\3.1.9\\microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\3.1.9\\microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.binder\\3.1.9\\microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.fileextensions\\3.1.9\\microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.json\\3.1.9\\microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\3.1.9\\microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\3.1.9\\microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.abstractions\\3.1.9\\microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.physical\\3.1.9\\microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.filesystemglobbing\\3.1.9\\microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging\\3.1.9\\microsoft.extensions.logging.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\3.1.9\\microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.options\\3.1.9\\microsoft.extensions.options.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.primitives\\3.1.9\\microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql\\4.1.3.1\\npgsql.4.1.3.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql.entityframeworkcore.postgresql\\3.1.4\\npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.collections.immutable\\1.7.1\\system.collections.immutable.1.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.componentmodel.annotations\\4.7.0\\system.componentmodel.annotations.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.diagnostics.diagnosticsource\\4.7.1\\system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.6.0\\system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512"
+  ],
+  "logs": []
+}
\ No newline at end of file
diff --git a/SavvyTest/SavvyTest.cs b/SavvyTest/SavvyTest.cs
new file mode 100644
index 0000000..47fcf65
--- /dev/null
+++ b/SavvyTest/SavvyTest.cs
@@ -0,0 +1,24 @@
+ï»¿using SavvyDB;
+using SavvyDB.Models;
+using SavvyDB.Entities;
+using SavvyLib;
+using System.Collections.Generic;
+using System;
+using Xunit;
+
+namespace SavvyTest
+{
+    public class UnitTest
+    {
+        [Fact]
+        //Checking locations are returned
+        public void ActuallyGetsAllLocations()
+        {
+            using var test1 = new SavvyContext();
+            SavvyRepo repo = new SavvyRepo(test1, new DBMapper());
+            List<SavvyDB.Entities.Location> locations = repo.GetLocations();
+            Assert.NotNull(locations);
+            
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyTest/SavvyTest.csproj b/SavvyTest/SavvyTest.csproj
new file mode 100644
index 0000000..e9cb5b9
--- /dev/null
+++ b/SavvyTest/SavvyTest.csproj
@@ -0,0 +1,24 @@
+<Project Sdk="Microsoft.NET.Sdk">
+
+  <ItemGroup>
+    <ProjectReference Include="..\SavvyLib\SavvyLib.csproj" />
+    <ProjectReference Include="..\SavvyDB\SavvyDB.csproj" />
+    <ProjectReference Include="..\SavvyUI\SavvyUI.csproj" />
+
+  </ItemGroup>
+    <ItemGroup>
+    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="15.9.0" />
+    <PackageReference Include="xunit" Version="2.4.1" />
+    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.1" />
+  </ItemGroup>
+
+  <ItemGroup>
+    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="3.1.9" />
+  </ItemGroup>
+
+  <PropertyGroup>
+    <OutputType>Exe</OutputType>
+    <TargetFramework>netcoreapp3.1</TargetFramework>
+  </PropertyGroup>
+
+</Project>
diff --git a/SavvyUI/CartMenu.cs b/SavvyUI/CartMenu.cs
new file mode 100644
index 0000000..beb0557
--- /dev/null
+++ b/SavvyUI/CartMenu.cs
@@ -0,0 +1,97 @@
+using System;
+using SavvyDB;
+using SavvyDB.Entities;
+using SavvyDB.Mappers;
+using SavvyDB.Models;
+using SavvyLib;
+using System.Collections.Generic;
+namespace SavvyUI
+{
+    public class CartMenu
+    {
+        private string userInput;
+        private SavvyRepo repo;
+        private Order order;
+        private LocationTask locationtask;
+        private InventoryTask inventorytask;
+        private ProductTask producttask;
+        private CartTask carttask;
+        private CartItemTask cartitemtask;
+        private OrderTask ordertask;
+        private OrderItemTask orderitemtask;
+
+        public CartMenu()
+        {
+            SavvyContext context = new SavvyContext();
+            DBMapper mapper = new DBMapper();
+            this.repo = new SavvyRepo(context, mapper);
+            this.locationtask = new LocationTask(repo);
+            this.inventorytask = new InventoryTask(repo);
+            this.producttask = new ProductTask(repo);
+            this.carttask = new CartTask(repo);
+            this.cartitemtask = new CartItemTask(repo);
+            this.ordertask = new OrderTask(repo);
+            this.orderitemtask = new OrderItemTask(repo);
+        }
+        public void start()
+        {
+            List<CartItem> items = cartitemtask.GetAllCartItems(1);
+            do
+            {
+                Console.WriteLine("What would you like to do?");
+                Console.WriteLine("[1] View Items in Cart");
+                Console.WriteLine("[2] Check Out");
+                Console.WriteLine("[3] Go Back");
+                userInput = Console.ReadLine();
+
+                switch (userInput)
+                {
+                    case "1":
+                        
+                        foreach (CartItem Item in items)
+                        {
+                            int id = Item.ProductId;
+                            Product prod = producttask.GetProduct(id);
+                            Console.WriteLine("ItemName: " + prod.Name);
+                            Console.WriteLine("Quantity: " + Item.Quantity);
+                        }
+                        break;
+
+                    case "2":
+
+                        Cart cart = carttask.GetCart(1);
+                        Order order = new Order();
+                        decimal total = 0;
+                        order.CustomerId = 1;
+                        DateTime orderDate = order.Date = DateTime.Now;
+                        ordertask.AddOrder(order);
+                        Order neworder = ordertask.GetOrderByDate(orderDate);
+                        Console.WriteLine("Thank you for placing an order!");
+
+
+                        foreach (CartItem cartitem in items)
+                        {
+                            Product product = producttask.GetProduct(cartitem.ProductId);
+
+                            OrderItem orderitem = new OrderItem();
+                            orderitem.ProductId = cartitem.ProductId;
+                            orderitem.Quantity = cartitem.Quantity;
+                            orderitem.OrderId = neworder.OrderId;
+
+                            decimal itemprice = product.Cost;
+                            total += (itemprice * cartitem.Quantity);
+
+                            orderitemtask.AddOrderItem(orderitem);
+                            cartitemtask.DeleteCartItem(cartitem);
+
+                        }
+                        neworder.Totalprice = total;
+                        ordertask.UpdateOrder(neworder);
+                        break;
+
+                }
+            }
+            while (!userInput.Equals("3"));
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyUI/CustomerMenu.cs b/SavvyUI/CustomerMenu.cs
new file mode 100644
index 0000000..652e8bd
--- /dev/null
+++ b/SavvyUI/CustomerMenu.cs
@@ -0,0 +1,71 @@
+using System;
+using SavvyDB;
+using SavvyDB.Mappers;
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using SavvyLib;
+using Serilog;
+
+namespace SavvyUI
+{
+    public class CustomerMenu
+    {
+        private string userInput;
+        Customer customer;
+        private SavvyRepo repo;
+        private LocationTask locationtask;
+        private ProductMenu productMenu;
+        private OrderHistoryMenu orderhistorymenu;
+        private CartMenu cartMenu;
+
+        public CustomerMenu(SavvyContext context, DBMapper mapper)
+        {
+            this.repo = new SavvyRepo(context, mapper);
+            productMenu = new ProductMenu(context, mapper, customer);
+            cartMenu = new CartMenu();
+            //orderhistorymenu = new OrderHistoryMenu(context, mapper);
+        }
+        public void start()
+        {
+            
+            do 
+            {
+                Console.WriteLine("What would you like to do?");
+                Console.WriteLine("[1] Buy a Product");
+                Console.WriteLine("[2] Check Order History");
+                Console.WriteLine("[3] View Cart/Check Out");
+                Console.WriteLine("[4] Check Location Inventory");
+                Console.WriteLine("[5] Go back");
+                userInput = Console.ReadLine();
+                locationtask = new LocationTask(repo);
+                CustomerTask customerTask = new CustomerTask(repo);
+                switch (userInput) 
+                {
+                    case "1":
+                        
+                        productMenu.start();
+                        Log.Information("Cart Added!");
+                        break;
+                    case "2":  
+                        orderhistorymenu.start();
+                        Log.Information("Cart History Viewed!");
+                        break;
+                    case "3":
+                        cartMenu.start();
+                        break;
+                    case "4":
+                        Console.WriteLine("Nothing yet!");
+                        break;
+                    case "5":
+                        Console.WriteLine("Returning to main menu...");
+                        break;
+                    default:
+                        //invalid input message;
+                        Console.WriteLine("Make a valid selection!");
+                        break;
+                    }
+            }
+            while (!userInput.Equals("5"));
+        }
+    }
+}
diff --git a/SavvyUI/MainMenu.cs b/SavvyUI/MainMenu.cs
new file mode 100644
index 0000000..7675507
--- /dev/null
+++ b/SavvyUI/MainMenu.cs
@@ -0,0 +1,49 @@
+ï»¿using System;
+using SavvyDB;
+using SavvyDB.Entities;
+using SavvyDB.Mappers;
+
+namespace SavvyUI
+{
+    public class MainMenu
+    {
+        private string userInput;
+        private CustomerMenu customerMenu;
+        private ManagerMenu managerMenu;
+        private SavvyRepo repo;
+        public MainMenu(SavvyContext context, DBMapper mapper)
+        {
+            this.customerMenu = new CustomerMenu(context, mapper);
+            this.managerMenu = new ManagerMenu(new SavvyRepo(context, mapper));
+        }
+        public void start()
+        {
+            do
+            {
+                Console.WriteLine("Welcome to Savvy Stationery! Select a login: ");
+                Console.WriteLine("[1] Customer");
+                Console.WriteLine("[2] Manager");
+                Console.WriteLine("[x] Abort");
+                userInput = Console.ReadLine();
+                //User makes a selection
+                    switch (userInput) 
+                    {
+                        case "1":
+                            customerMenu.start();
+                            break;
+                        case "2":  
+                            managerMenu.start();
+                            break;
+                        case "x":
+                            Console.WriteLine("We hope to see you again!");            
+                            break;
+                        default:
+                            //invalid input message;
+                            Console.WriteLine("Make a valid selection!");
+                            break;
+                    }
+            }
+            while (!userInput.Equals("x"));
+        }
+    }
+}
diff --git a/SavvyUI/ManagerMenu.cs b/SavvyUI/ManagerMenu.cs
new file mode 100644
index 0000000..819a2f3
--- /dev/null
+++ b/SavvyUI/ManagerMenu.cs
@@ -0,0 +1,115 @@
+using System;
+using SavvyDB;
+using System.Collections.Generic;
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using SavvyLib;
+using Serilog;
+
+namespace SavvyUI
+{
+    public class ManagerMenu
+    {
+        private string userInput;
+        private string locationstring;
+        private int productID;
+        private int count;
+        private SavvyRepo repo;
+        private LocationTask locationtask;
+        private InventoryTask inventorytask;
+        private ProductTask producttask;
+        private ProductMenu productMenu;
+        private OrderTask ordertask;
+        private OrderItemTask orderitemtask;
+
+        private Customer customer;
+
+        public ManagerMenu(SavvyRepo repo)
+        {
+            this.repo = repo;
+            this.locationtask = new LocationTask(repo);
+            this.inventorytask = new InventoryTask(repo);
+            this.producttask = new ProductTask(repo);
+            this.ordertask = new OrderTask(repo);
+            this.orderitemtask = new OrderItemTask(repo);
+        }
+        public void start()
+        {
+            do 
+            {
+                Console.WriteLine("Select a location!");
+                List<Location> Location = locationtask.GetAllLocations();
+                count = 1;
+                foreach (Location singlelocation in Location)
+                    {
+                        Console.WriteLine("[" + count + "]");
+                        Console.WriteLine(singlelocation.Name);
+                        count ++;
+                    }
+                locationstring = Console.ReadLine();
+                Console.WriteLine("What would you like to do?");
+                Console.WriteLine("[1] Check Inventory");
+                Console.WriteLine("[2] Replenish Inventory");
+                Console.WriteLine("[3] Go Back");
+                userInput = Console.ReadLine();
+                int Locationid = Int32.Parse(locationstring);
+                List<Inventory> Items = inventorytask.GetInventoryByLocation(Locationid);
+                switch (userInput) 
+                {
+                    case "1":
+                        //Pulls up inventory for selected location
+                        
+                        Console.WriteLine("Getting items...");
+                        foreach (Inventory Item in Items)
+                            {
+                                int id = Item.ProductId;
+                                Product prod = producttask.GetProduct(id);
+                                Console.WriteLine("Product ID: " + id);
+                                Console.WriteLine("Item Name: " + prod.Name);
+                                Console.WriteLine("Quantity: "+ Item.Quantity);
+                                Console.WriteLine (" ");
+                            }
+                        break;
+                    case "2":  
+                        //Replenishes inventory
+                        Console.WriteLine("Getting items...");
+                        foreach (Inventory Item in Items)
+                            {
+                                int id = Item.ProductId;
+                                Product prod = producttask.GetProduct(id);
+                                Console.WriteLine("Product ID: " + id);
+                                Console.WriteLine("Item Name: " + prod.Name);
+                                Console.WriteLine("Quantity: "+ Item.Quantity);
+                                Console.WriteLine (" ");
+                            }
+                        Console.WriteLine("Select an item (by ID)");
+                        userInput = Console.ReadLine();
+                        List<Inventory> inv = inventorytask.GetInventoryByLocation(Locationid);
+                        Console.WriteLine("How much of this item is now in stock?");
+                        string newquantity = Console.ReadLine();
+                        foreach (Inventory item in inv)
+                        {
+                            if (item.ProductId == Int32.Parse(userInput))
+                            {
+                                
+                                Inventory updatedinv = inventorytask.GetInventory(item.InventoryId);
+                                updatedinv.Quantity = Int32.Parse(newquantity);
+                                inventorytask.UpdateInventory(updatedinv);
+                                Console.WriteLine("Item has been restocked!");
+                            }
+                        }
+                        
+                        
+                        
+                        
+                        break;
+                    default:
+                        //invalid input message;
+                        Console.WriteLine("Make a valid selection!");
+                        break;
+                    }
+            }
+            while (!userInput.Equals("3"));
+        }
+    }
+}
diff --git a/SavvyUI/OrderHistoryMenu.cs b/SavvyUI/OrderHistoryMenu.cs
new file mode 100644
index 0000000..b3652cf
--- /dev/null
+++ b/SavvyUI/OrderHistoryMenu.cs
@@ -0,0 +1,74 @@
+using System;
+using SavvyDB;
+using SavvyDB.Entities;
+using SavvyDB.Mappers;
+using SavvyDB.Models;
+using SavvyLib;
+
+namespace SavvyUI
+{
+    public class OrderHistoryMenu
+    {
+        private string userInput;
+        private Product product;
+        SavvyRepo repo;
+        private CartTask carttask;
+        Customer customer;
+        private CustomerTask customertask;
+        private InventoryTask inventorytask;
+        private CartItemTask cartitemtask;
+        private OrderTask ordertask;
+        private OrderItemTask orderitemtask;
+        private ProductTask producttask;
+        private LocationTask locationtask;
+        public OrderHistoryMenu(SavvyContext context, DBMapper mapper)
+        {
+            this.repo = new SavvyRepo(context, mapper);
+            this.locationtask = new LocationTask(repo);
+            this.inventorytask = new InventoryTask(repo);
+            this.producttask = new ProductTask(repo);
+            this.ordertask = new OrderTask(repo);
+            this.orderitemtask = new OrderItemTask(repo);
+            this.customertask = new CustomerTask(repo);
+            
+        }
+        public void start(){
+            OrderTask ordertask = new OrderTask(repo);
+            Customer customer = customertask.GetCustomer(1);
+
+            Console.WriteLine("How would you like to search for your order history?");
+            Console.WriteLine("[1] By Order Date (Ascending)");
+            Console.WriteLine("[2] By Order Date (Descending)");
+            Console.WriteLine("[3] By Price (Ascending)");
+            Console.WriteLine("[4] By Price (Descending)");
+            Console.WriteLine("[5] Go Back");
+            userInput = Console.ReadLine();
+
+            do  
+                { 
+                switch (userInput)
+                {
+                    case "1":
+                        
+                        ordertask.GetOrderFirst(DateTime.Now);
+                        break;
+
+                    case "2":
+
+                        ordertask.GetOrderLast(DateTime.Now);
+                        break;
+
+                    case "3":
+
+                        ordertask.GetOrderCheap(customer);
+                        break;
+                    case "4":
+
+                        ordertask.GetOrderExpensive(customer);
+                        break;
+                }
+            }
+            while (!userInput.Equals("5"));
+        }
+    }
+}
diff --git a/SavvyUI/ProductMenu.cs b/SavvyUI/ProductMenu.cs
new file mode 100644
index 0000000..a398125
--- /dev/null
+++ b/SavvyUI/ProductMenu.cs
@@ -0,0 +1,78 @@
+using System;
+using SavvyDB;
+using SavvyDB.Entities;
+using SavvyDB.Models;
+using SavvyDB.Mappers;
+using SavvyLib;
+using System.Collections.Generic;
+
+
+namespace SavvyUI
+{
+    public class ProductMenu
+    {
+        private string userInput;
+        SavvyRepo repo;
+        private Customer Customer;
+        int count;
+
+        public ProductMenu(SavvyContext context, DBMapper mapper, Customer Customer)
+        {
+            this.repo = new SavvyRepo(context, mapper);
+            this.Customer = Customer;
+        }
+        
+        public void start()
+        {
+            Console.WriteLine("Select a location!");
+            LocationTask locationtask = new LocationTask(repo);
+            List<Location> Location = locationtask.GetAllLocations();
+            CartTask cartTask = new CartTask(repo);
+            CartItemTask cartitemtask = new CartItemTask(repo);
+            ProductTask producttask = new ProductTask(repo);
+            Cart cart = cartTask.GetCartByCustomer(1);
+
+            count = 1;
+            foreach (Location singleLocation in Location) 
+                { 
+                    Console.WriteLine("[" + count + "]");
+                    Console.WriteLine(singleLocation.Name);
+                    count ++;
+                }
+            userInput = Console.ReadLine();
+            int Locationid = Int32.Parse(userInput);
+            InventoryTask inventorytask = new InventoryTask(repo);
+
+            Console.WriteLine("Getting items...");
+            List<Inventory> Items = inventorytask.GetInventoryByLocation(Locationid);
+            string continueloop = "y";
+            while (continueloop == "y")
+            {
+                foreach (Inventory Item in Items)
+                    {
+                        int id = Item.ProductId;
+                        Product prod = producttask.GetProduct(id);
+                        Console.WriteLine("Product ID: " + id);
+                        Console.WriteLine("Item Name: " + prod.Name);
+                        Console.WriteLine("Cost: " + prod.Cost);
+                        Console.WriteLine("Quantity: "+ Item.Quantity);
+                        Console.WriteLine (" ");
+                    }
+
+                    Console.WriteLine ("Select a product (By ID!)");
+                    userInput = Console.ReadLine();
+                    Product chosenproduct = producttask.GetProduct(Int32.Parse(userInput));
+                    CartItem cartitem = new CartItem();
+                    cartitem.ProductId = Int32.Parse(userInput);
+                    Console.WriteLine("How many do you want to buy?");
+                    string input = Console.ReadLine();
+                    cartitem.CartId = 1;
+                    cartitem.Quantity = Int32.Parse(input);
+                    cartitemtask.UpdateCartItem(cartitem); 
+                    Console.WriteLine("Item has been added!");
+                    Console.WriteLine ("Keep adding to cart? (y/n)");
+                    continueloop = Console.ReadLine();
+            }
+        }
+    }
+}
\ No newline at end of file
diff --git a/SavvyUI/Program.cs b/SavvyUI/Program.cs
new file mode 100644
index 0000000..8b1638f
--- /dev/null
+++ b/SavvyUI/Program.cs
@@ -0,0 +1,23 @@
+using SavvyDB.Entities;
+using SavvyDB.Mappers;
+using SavvyDB;
+using Serilog;
+
+namespace SavvyUI
+
+{
+    public class Program
+    {
+        static void Main(string[] args)
+        {
+            SavvyContext context = new SavvyContext();
+            DBMapper mapper = new DBMapper();
+            Log.Logger = new LoggerConfiguration()
+            .WriteTo.File("Logs\\Logtxt.txt")
+            .CreateLogger();
+            MainMenu mainMenu = new MainMenu(context, mapper);
+            mainMenu.start();
+        }
+
+    }
+}
diff --git a/Lacrosse101_P0/lacrosse101/lacrosseUI/lacrosseUI.csproj b/SavvyUI/SavvyUI.csproj
similarity index 52%
rename from Lacrosse101_P0/lacrosse101/lacrosseUI/lacrosseUI.csproj
rename to SavvyUI/SavvyUI.csproj
index 1bb3816..23a2106 100644
--- a/Lacrosse101_P0/lacrosse101/lacrosseUI/lacrosseUI.csproj
+++ b/SavvyUI/SavvyUI.csproj
@@ -10,15 +10,19 @@
       <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
       <PrivateAssets>all</PrivateAssets>
     </PackageReference>
-    <PackageReference Include="Microsoft.EntityFrameworkCore.InMemory" Version="3.1.9" />
+    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.9">
+      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
+      <PrivateAssets>all</PrivateAssets>
+    </PackageReference>
+    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="3.1.9" />
+    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="3.1.4" />
     <PackageReference Include="Serilog" Version="2.10.0" />
-    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
     <PackageReference Include="Serilog.Sinks.File" Version="4.1.0" />
   </ItemGroup>
 
   <ItemGroup>
-    <ProjectReference Include="..\lacrosseDB\lacrosseDB.csproj" />
-    <ProjectReference Include="..\lacrosseLib\lacrosseLib.csproj" />
+    <ProjectReference Include="..\SavvyDB\SavvyDB.csproj" />
+    <ProjectReference Include="..\Savvylib\SavvyLib.csproj" />
   </ItemGroup>
 
 </Project>
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.AsyncInterfaces.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.AsyncInterfaces.dll
new file mode 100644
index 0000000..a5b7ff9
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.AsyncInterfaces.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.HashCode.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.HashCode.dll
new file mode 100644
index 0000000..6d749da
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Bcl.HashCode.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Abstractions.dll
new file mode 100644
index 0000000..a6d5fa2
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Design.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Design.dll
new file mode 100644
index 0000000..e3cd6f8
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Design.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Relational.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Relational.dll
new file mode 100644
index 0000000..43decb8
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.Relational.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.dll
new file mode 100644
index 0000000..017463b
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.EntityFrameworkCore.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll
new file mode 100644
index 0000000..1aa3203
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll
new file mode 100644
index 0000000..e41ef45
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll
new file mode 100644
index 0000000..1d596f9
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll
new file mode 100644
index 0000000..4f48c17
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll
new file mode 100644
index 0000000..52173a4
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll
new file mode 100644
index 0000000..c3bcef0
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.dll
new file mode 100644
index 0000000..0820941
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Configuration.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll
new file mode 100644
index 0000000..45f6709
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll
new file mode 100644
index 0000000..1ea2f61
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll
new file mode 100644
index 0000000..97b1600
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll
new file mode 100644
index 0000000..eda6777
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileSystemGlobbing.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileSystemGlobbing.dll
new file mode 100644
index 0000000..c9b242c
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.FileSystemGlobbing.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.Abstractions.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.Abstractions.dll
new file mode 100644
index 0000000..a74e35b
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.Abstractions.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.dll
new file mode 100644
index 0000000..05f88d8
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Logging.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Options.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Options.dll
new file mode 100644
index 0000000..4177191
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Options.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Primitives.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Primitives.dll
new file mode 100644
index 0000000..d42e68a
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Microsoft.Extensions.Primitives.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.EntityFrameworkCore.PostgreSQL.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.EntityFrameworkCore.PostgreSQL.dll
new file mode 100644
index 0000000..9b3bb85
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.EntityFrameworkCore.PostgreSQL.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.dll b/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.dll
new file mode 100644
index 0000000..a21f072
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/Npgsql.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.deps.json b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.deps.json
new file mode 100644
index 0000000..591479f
--- /dev/null
+++ b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.deps.json
@@ -0,0 +1,753 @@
+{
+  "runtimeTarget": {
+    "name": ".NETCoreApp,Version=v3.1",
+    "signature": ""
+  },
+  "compilationOptions": {},
+  "targets": {
+    ".NETCoreApp,Version=v3.1": {
+      "SavvyUI/1.0.0": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Tools": "3.1.9",
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4",
+          "SavvyDB": "1.0.0",
+          "SavvyLib": "1.0.0",
+          "Serilog": "2.10.0",
+          "Serilog.Sinks.File": "4.1.0"
+        },
+        "runtime": {
+          "SavvyUI.dll": {}
+        }
+      },
+      "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+        "runtime": {
+          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {
+            "assemblyVersion": "1.0.0.0",
+            "fileVersion": "4.700.20.21406"
+          }
+        }
+      },
+      "Microsoft.Bcl.HashCode/1.1.0": {
+        "runtime": {
+          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {
+            "assemblyVersion": "1.0.0.0",
+            "fileVersion": "4.700.19.56404"
+          }
+        }
+      },
+      "Microsoft.CSharp/4.7.0": {},
+      "Microsoft.EntityFrameworkCore/3.1.9": {
+        "dependencies": {
+          "Microsoft.Bcl.AsyncInterfaces": "1.1.1",
+          "Microsoft.Bcl.HashCode": "1.1.0",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Analyzers": "3.1.9",
+          "Microsoft.Extensions.Caching.Memory": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging": "3.1.9",
+          "System.Collections.Immutable": "1.7.1",
+          "System.ComponentModel.Annotations": "4.7.0",
+          "System.Diagnostics.DiagnosticSource": "4.7.1"
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47303"
+          }
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47303"
+          }
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {},
+      "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+        "dependencies": {
+          "Microsoft.CSharp": "4.7.0",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.9"
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47303"
+          }
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.9"
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47303"
+          }
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": "3.1.9"
+        }
+      },
+      "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Caching.Memory/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Caching.Abstractions": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Configuration/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Abstractions": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.FileProviders.Physical": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Configuration.Json/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.Configuration.FileExtensions": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.FileProviders.Abstractions": "3.1.9",
+          "Microsoft.Extensions.FileSystemGlobbing": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Logging/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Binder": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Options/3.1.9": {
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.Extensions.Primitives/3.1.9": {
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {
+            "assemblyVersion": "3.1.9.0",
+            "fileVersion": "3.100.920.47302"
+          }
+        }
+      },
+      "Microsoft.NETCore.Platforms/1.0.1": {},
+      "Microsoft.NETCore.Targets/1.0.1": {},
+      "Npgsql/4.1.3.1": {
+        "dependencies": {
+          "System.Runtime.CompilerServices.Unsafe": "4.6.0"
+        },
+        "runtime": {
+          "lib/netcoreapp3.0/Npgsql.dll": {
+            "assemblyVersion": "4.1.3.1",
+            "fileVersion": "4.1.3.1"
+          }
+        }
+      },
+      "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.9",
+          "Npgsql": "4.1.3.1"
+        },
+        "runtime": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {
+            "assemblyVersion": "3.1.4.0",
+            "fileVersion": "3.1.4.0"
+          }
+        }
+      },
+      "Serilog/2.10.0": {
+        "runtime": {
+          "lib/netstandard2.1/Serilog.dll": {
+            "assemblyVersion": "2.0.0.0",
+            "fileVersion": "2.10.0.0"
+          }
+        }
+      },
+      "Serilog.Sinks.File/4.1.0": {
+        "dependencies": {
+          "Serilog": "2.10.0",
+          "System.IO.FileSystem": "4.0.1",
+          "System.Text.Encoding.Extensions": "4.0.11",
+          "System.Threading.Timer": "4.0.1"
+        },
+        "runtime": {
+          "lib/netstandard2.0/Serilog.Sinks.File.dll": {
+            "assemblyVersion": "2.0.0.0",
+            "fileVersion": "4.1.0.0"
+          }
+        }
+      },
+      "System.Collections.Immutable/1.7.1": {
+        "runtime": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {
+            "assemblyVersion": "1.2.5.0",
+            "fileVersion": "4.700.20.21406"
+          }
+        }
+      },
+      "System.ComponentModel.Annotations/4.7.0": {},
+      "System.Diagnostics.DiagnosticSource/4.7.1": {
+        "runtime": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {
+            "assemblyVersion": "4.0.5.0",
+            "fileVersion": "4.700.20.21406"
+          }
+        }
+      },
+      "System.IO/4.1.0": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Text.Encoding": "4.0.11",
+          "System.Threading.Tasks": "4.0.11"
+        }
+      },
+      "System.IO.FileSystem/4.0.1": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.IO": "4.1.0",
+          "System.IO.FileSystem.Primitives": "4.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Runtime.Handles": "4.0.1",
+          "System.Text.Encoding": "4.0.11",
+          "System.Threading.Tasks": "4.0.11"
+        }
+      },
+      "System.IO.FileSystem.Primitives/4.0.1": {
+        "dependencies": {
+          "System.Runtime": "4.1.0"
+        }
+      },
+      "System.Runtime/4.1.0": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1"
+        }
+      },
+      "System.Runtime.CompilerServices.Unsafe/4.6.0": {},
+      "System.Runtime.Handles/4.0.1": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        }
+      },
+      "System.Text.Encoding/4.0.11": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        }
+      },
+      "System.Text.Encoding.Extensions/4.0.11": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Text.Encoding": "4.0.11"
+        }
+      },
+      "System.Threading.Tasks/4.0.11": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        }
+      },
+      "System.Threading.Timer/4.0.1": {
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        }
+      },
+      "SavvyDB/1.0.0": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4"
+        },
+        "runtime": {
+          "SavvyDB.dll": {}
+        }
+      },
+      "SavvyLib/1.0.0": {
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4",
+          "SavvyDB": "1.0.0"
+        },
+        "runtime": {
+          "SavvyLib.dll": {}
+        }
+      }
+    }
+  },
+  "libraries": {
+    "SavvyUI/1.0.0": {
+      "type": "project",
+      "serviceable": false,
+      "sha512": ""
+    },
+    "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-yuvf07qFWFqtK3P/MRkEKLhn5r2UbSpVueRziSqj0yJQIKFwG1pq9mOayK3zE5qZCTs0CbrwL9M6R8VwqyGy2w==",
+      "path": "microsoft.bcl.asyncinterfaces/1.1.1",
+      "hashPath": "microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512"
+    },
+    "Microsoft.Bcl.HashCode/1.1.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-J2G1k+u5unBV+aYcwxo94ip16Rkp65pgWFb0R6zwJipzWNMgvqlWeuI7/+R+e8bob66LnSG+llLJ+z8wI94cHg==",
+      "path": "microsoft.bcl.hashcode/1.1.0",
+      "hashPath": "microsoft.bcl.hashcode.1.1.0.nupkg.sha512"
+    },
+    "Microsoft.CSharp/4.7.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-pTj+D3uJWyN3My70i2Hqo+OXixq3Os2D1nJ2x92FFo6sk8fYS1m1WLNTs0Dc1uPaViH0YvEEwvzddQ7y4rhXmA==",
+      "path": "microsoft.csharp/4.7.0",
+      "hashPath": "microsoft.csharp.4.7.0.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-u3A2W0BvAuAF2jgW+WX+C+Sh8sMGX5Kl1hdA0gu6A/XSrZQoW/BUP4a/q2n3iitDGndaorqjAKx+Spb9gBto+w==",
+      "path": "microsoft.entityframeworkcore/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-IR6Y4RJVlw0QXdWXjF3Kx9s1QLiicJus+BFBKr43lBtriV20j3yrWMoaZ9W1AUUgnicZXpXVcNfklqtmwb9Sxw==",
+      "path": "microsoft.entityframeworkcore.abstractions/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-eXGyx/Lb1fiiKtnIStdxGrfBSSQg8oZytE10f1T/2xAx12W9dKB9U9fg05cwNCDC0S2CXILsmZHYaGqCSXVAqQ==",
+      "path": "microsoft.entityframeworkcore.analyzers/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-2zgP7BWcw5nqGQiT4bEtiI6ras+4pvKg5D+tA3AYvjEifzzaWvmRTb3B9nRHpIYJAhPtmWNBVnVXLbu3fS1OYA==",
+      "path": "microsoft.entityframeworkcore.design/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-7fhWuSfrCYlv/hvOX5OhbFJF/G9f8sifqTrJiYnAYLDOvNizwv7t9tFPD8JwaF3zM2S54O5/Vni2NxvwzSaW2w==",
+      "path": "microsoft.entityframeworkcore.relational/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-mSgwjp0h5iqW5V49SVijR5O+kNpI1nitcbN12n9FYx/Ga6oCEFwXR/llBDesD6ASHw3Mx16vodJYJ7CEBx5rig==",
+      "path": "microsoft.entityframeworkcore.tools/3.1.9",
+      "hashPath": "microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-/2QsPAsUZD4qvftZkUKHRRRryPDXWh606/iNXPLrulwHLMr9JNsKBJWVqylT3qU92nJok5VoqSblkY9mSyxFyg==",
+      "path": "microsoft.extensions.caching.abstractions/3.1.9",
+      "hashPath": "microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Caching.Memory/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-/JrVMVetX/kpJQUIlJ6NLQ3zbF0yyryXpo4+uFCqYIUZzgmWk8DS/zSKcyj1tQ3410+vhDEAPngxC+hg0IlJeg==",
+      "path": "microsoft.extensions.caching.memory/3.1.9",
+      "hashPath": "microsoft.extensions.caching.memory.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Configuration/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-lqdkOGNeTMKG981Q7yWGlRiFbIlsRwTlMMiybT+WOzUCFBS/wc25tZgh7Wm/uRoBbWefgvokzmnea7ZjmFedmA==",
+      "path": "microsoft.extensions.configuration/3.1.9",
+      "hashPath": "microsoft.extensions.configuration.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-vOJxPKczaHpXeZFrxARxYwsEulhEouXc5aZGgMdkhV/iEXX9/pfjqKk76rTG+4CsJjHV+G/4eMhvOIaQMHENNA==",
+      "path": "microsoft.extensions.configuration.abstractions/3.1.9",
+      "hashPath": "microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-BG6HcT7tARYakftqfQu+cLksgIWG1NdxMY+igI12hdZrUK+WjS973NiRyuao/U9yyTeM9NPwRnC61hCmG3G3jg==",
+      "path": "microsoft.extensions.configuration.binder/3.1.9",
+      "hashPath": "microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-OC07LdaPMEeKYt1a4DJAzjKXUmP5K2MS4Sg0FvLrJF+9yd3YNTWSDrb1MpBuZ3564cbJJfyldICkSwCwWQ8lIw==",
+      "path": "microsoft.extensions.configuration.fileextensions/3.1.9",
+      "hashPath": "microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Configuration.Json/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-v1epO1J3qIqxwusz0gifp7hO+J2F/tBZOQAR9I1pLFDrX6NjQaYbZy4RGAU554Ntc0+lYAi0FA8CNMrQcTegYw==",
+      "path": "microsoft.extensions.configuration.json/3.1.9",
+      "hashPath": "microsoft.extensions.configuration.json.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.DependencyInjection/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-ORqfrAACcvTInie1oGola5uky344/PiNfgayTPuZWV4WnSfIQZJQm/ZLpGshJE3h7TqwYaYElGazK/yaM2bFLA==",
+      "path": "microsoft.extensions.dependencyinjection/3.1.9",
+      "hashPath": "microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-8PkcaPwiTPOhqshoY4+rQUbz86X6YpLDLUqXOezh7L2A3pgpBmeBBByYIffofBlvQxDdQ0zB2DkWjbZWyCxRWg==",
+      "path": "microsoft.extensions.dependencyinjection.abstractions/3.1.9",
+      "hashPath": "microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-Q4SGwEFZKiZbpzPgdGbQUULxtcH1zXMOwCPKSm6QwVcOCGshf3QLfBh+O/GyFH4B0RfZ16nKyeW1mMONlRyjUw==",
+      "path": "microsoft.extensions.fileproviders.abstractions/3.1.9",
+      "hashPath": "microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-HWDSsblTCQp7EEJJmnLzttIhFGzDu+DGqBbOvGCdFT0+pkCuBkn3EiWpEEcm5WMTO5njmsbLSK9ZuUUf2zPsFg==",
+      "path": "microsoft.extensions.fileproviders.physical/3.1.9",
+      "hashPath": "microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-5bnewG1aBiSESPNwcXGIxDDRN95uqdy+fqZZ8Z63Et5rRNlAwAfXHOrg+FTht7UjHobjvtjzquMCbAWhWEPHIw==",
+      "path": "microsoft.extensions.filesystemglobbing/3.1.9",
+      "hashPath": "microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Logging/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-+V3i0jCQCO6IIOf6e+fL0SqrZd2x/Krug9EEL1JHa9R03RsbEpltCtjVY5hxedyuyuQKwvLoR12sCfu/9XEUAw==",
+      "path": "microsoft.extensions.logging/3.1.9",
+      "hashPath": "microsoft.extensions.logging.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-W5fbF8qVR9SMVVJqDQLIR7meWbev6Pu/lbrm7LDNr4Sp7HOotr4k2UULTdFSXOi5aoDdkQZpWnq0ZSpjrR3tjg==",
+      "path": "microsoft.extensions.logging.abstractions/3.1.9",
+      "hashPath": "microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Options/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-EIb3G1DL+Rl9MvJR7LjI1wCy2nfTN4y8MflbOftn1HLYQBj/Rwl8kUbGTrSFE01c99Wm4ETjWVsjqKcpFvhPng==",
+      "path": "microsoft.extensions.options/3.1.9",
+      "hashPath": "microsoft.extensions.options.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.Extensions.Primitives/3.1.9": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-IrHecH0eGG7/XoeEtv++oLg/sJHRNyeCqlA9RhAo6ig4GpOTjtDr32sBMYuuLtUq8ALahneWkrOzoBAwJ4L4iA==",
+      "path": "microsoft.extensions.primitives/3.1.9",
+      "hashPath": "microsoft.extensions.primitives.3.1.9.nupkg.sha512"
+    },
+    "Microsoft.NETCore.Platforms/1.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-2G6OjjJzwBfNOO8myRV/nFrbTw5iA+DEm0N+qUqhrOmaVtn4pC77h38I1jsXGw5VH55+dPfQsqHD0We9sCl9FQ==",
+      "path": "microsoft.netcore.platforms/1.0.1",
+      "hashPath": "microsoft.netcore.platforms.1.0.1.nupkg.sha512"
+    },
+    "Microsoft.NETCore.Targets/1.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-rkn+fKobF/cbWfnnfBOQHKVKIOpxMZBvlSHkqDWgBpwGDcLRduvs3D9OLGeV6GWGvVwNlVi2CBbTjuPmtHvyNw==",
+      "path": "microsoft.netcore.targets/1.0.1",
+      "hashPath": "microsoft.netcore.targets.1.0.1.nupkg.sha512"
+    },
+    "Npgsql/4.1.3.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-354pl/Picmt5/AIrm8urFwtxfK4n4NbmfBnLA9yvP8VtILSQF3/sFo3+lGuz+q4iyD18QeNFy0NMNBzsocFVlw==",
+      "path": "npgsql/4.1.3.1",
+      "hashPath": "npgsql.4.1.3.1.nupkg.sha512"
+    },
+    "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-T+BIWO+ceje5d52/sOwwqaU/F4Rm2jAWx5qA3+pUGbzY/ZXG0QbHQsyjyg0k8aef6JTq8FRk3FtRWkocsa1QWQ==",
+      "path": "npgsql.entityframeworkcore.postgresql/3.1.4",
+      "hashPath": "npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512"
+    },
+    "Serilog/2.10.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-+QX0hmf37a0/OZLxM3wL7V6/ADvC1XihXN4Kq/p6d8lCPfgkRdiuhbWlMaFjR9Av0dy5F0+MBeDmDdRZN/YwQA==",
+      "path": "serilog/2.10.0",
+      "hashPath": "serilog.2.10.0.nupkg.sha512"
+    },
+    "Serilog.Sinks.File/4.1.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-U0b34w+ZikbqWEZ3ui7BdzxY/19zwrdhLtI3o6tfmLdD3oXxg7n2TZJjwCCTlKPgRuYic9CBWfrZevbb70mTaw==",
+      "path": "serilog.sinks.file/4.1.0",
+      "hashPath": "serilog.sinks.file.4.1.0.nupkg.sha512"
+    },
+    "System.Collections.Immutable/1.7.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-B43Zsz5EfMwyEbnObwRxW5u85fzJma3lrDeGcSAV1qkhSRTNY5uXAByTn9h9ddNdhM+4/YoLc/CI43umjwIl9Q==",
+      "path": "system.collections.immutable/1.7.1",
+      "hashPath": "system.collections.immutable.1.7.1.nupkg.sha512"
+    },
+    "System.ComponentModel.Annotations/4.7.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-0YFqjhp/mYkDGpU0Ye1GjE53HMp9UVfGN7seGpAMttAC0C40v5gw598jCgpbBLMmCo0E5YRLBv5Z2doypO49ZQ==",
+      "path": "system.componentmodel.annotations/4.7.0",
+      "hashPath": "system.componentmodel.annotations.4.7.0.nupkg.sha512"
+    },
+    "System.Diagnostics.DiagnosticSource/4.7.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-j81Lovt90PDAq8kLpaJfJKV/rWdWuEk6jfV+MBkee33vzYLEUsy4gXK8laa9V2nZlLM9VM9yA/OOQxxPEJKAMw==",
+      "path": "system.diagnostics.diagnosticsource/4.7.1",
+      "hashPath": "system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512"
+    },
+    "System.IO/4.1.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-3KlTJceQc3gnGIaHZ7UBZO26SHL1SHE4ddrmiwumFnId+CEHP+O8r386tZKaE6zlk5/mF8vifMBzHj9SaXN+mQ==",
+      "path": "system.io/4.1.0",
+      "hashPath": "system.io.4.1.0.nupkg.sha512"
+    },
+    "System.IO.FileSystem/4.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-IBErlVq5jOggAD69bg1t0pJcHaDbJbWNUZTPI96fkYWzwYbN6D9wRHMULLDd9dHsl7C2YsxXL31LMfPI1SWt8w==",
+      "path": "system.io.filesystem/4.0.1",
+      "hashPath": "system.io.filesystem.4.0.1.nupkg.sha512"
+    },
+    "System.IO.FileSystem.Primitives/4.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-kWkKD203JJKxJeE74p8aF8y4Qc9r9WQx4C0cHzHPrY3fv/L/IhWnyCHaFJ3H1QPOH6A93whlQ2vG5nHlBDvzWQ==",
+      "path": "system.io.filesystem.primitives/4.0.1",
+      "hashPath": "system.io.filesystem.primitives.4.0.1.nupkg.sha512"
+    },
+    "System.Runtime/4.1.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-v6c/4Yaa9uWsq+JMhnOFewrYkgdNHNG2eMKuNqRn8P733rNXeRCGvV5FkkjBXn2dbVkPXOsO0xjsEeM1q2zC0g==",
+      "path": "system.runtime/4.1.0",
+      "hashPath": "system.runtime.4.1.0.nupkg.sha512"
+    },
+    "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-HxozeSlipUK7dAroTYwIcGwKDeOVpQnJlpVaOkBz7CM4TsE5b/tKlQBZecTjh6FzcSbxndYaxxpsBMz+wMJeyw==",
+      "path": "system.runtime.compilerservices.unsafe/4.6.0",
+      "hashPath": "system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512"
+    },
+    "System.Runtime.Handles/4.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-nCJvEKguXEvk2ymk1gqj625vVnlK3/xdGzx0vOKicQkoquaTBJTP13AIYkocSUwHCLNBwUbXTqTWGDxBTWpt7g==",
+      "path": "system.runtime.handles/4.0.1",
+      "hashPath": "system.runtime.handles.4.0.1.nupkg.sha512"
+    },
+    "System.Text.Encoding/4.0.11": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-U3gGeMlDZXxCEiY4DwVLSacg+DFWCvoiX+JThA/rvw37Sqrku7sEFeVBBBMBnfB6FeZHsyDx85HlKL19x0HtZA==",
+      "path": "system.text.encoding/4.0.11",
+      "hashPath": "system.text.encoding.4.0.11.nupkg.sha512"
+    },
+    "System.Text.Encoding.Extensions/4.0.11": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-jtbiTDtvfLYgXn8PTfWI+SiBs51rrmO4AAckx4KR6vFK9Wzf6tI8kcRdsYQNwriUeQ1+CtQbM1W4cMbLXnj/OQ==",
+      "path": "system.text.encoding.extensions/4.0.11",
+      "hashPath": "system.text.encoding.extensions.4.0.11.nupkg.sha512"
+    },
+    "System.Threading.Tasks/4.0.11": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-k1S4Gc6IGwtHGT8188RSeGaX86Qw/wnrgNLshJvsdNUOPP9etMmo8S07c+UlOAx4K/xLuN9ivA1bD0LVurtIxQ==",
+      "path": "system.threading.tasks/4.0.11",
+      "hashPath": "system.threading.tasks.4.0.11.nupkg.sha512"
+    },
+    "System.Threading.Timer/4.0.1": {
+      "type": "package",
+      "serviceable": true,
+      "sha512": "sha512-saGfUV8uqVW6LeURiqxcGhZ24PzuRNaUBtbhVeuUAvky1naH395A/1nY0P2bWvrw/BreRtIB/EzTDkGBpqCwEw==",
+      "path": "system.threading.timer/4.0.1",
+      "hashPath": "system.threading.timer.4.0.1.nupkg.sha512"
+    },
+    "SavvyDB/1.0.0": {
+      "type": "project",
+      "serviceable": false,
+      "sha512": ""
+    },
+    "SavvyLib/1.0.0": {
+      "type": "project",
+      "serviceable": false,
+      "sha512": ""
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.dll b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.dll
new file mode 100644
index 0000000..493115a
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.exe b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.exe
new file mode 100644
index 0000000..600f5df
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.exe differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.pdb b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.pdb
new file mode 100644
index 0000000..0b9ffc5
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.pdb differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.dev.json b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.dev.json
new file mode 100644
index 0000000..4d54d8c
--- /dev/null
+++ b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.dev.json
@@ -0,0 +1,8 @@
+{
+  "runtimeOptions": {
+    "additionalProbingPaths": [
+      "C:\\Users\\Ckat\\.dotnet\\store\\|arch|\\|tfm|",
+      "C:\\Users\\Ckat\\.nuget\\packages"
+    ]
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.json b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.json
new file mode 100644
index 0000000..bc456d7
--- /dev/null
+++ b/SavvyUI/bin/Debug/netcoreapp3.1/SavvyUI.runtimeconfig.json
@@ -0,0 +1,9 @@
+{
+  "runtimeOptions": {
+    "tfm": "netcoreapp3.1",
+    "framework": {
+      "name": "Microsoft.NETCore.App",
+      "version": "3.1.0"
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/System.Collections.Immutable.dll b/SavvyUI/bin/Debug/netcoreapp3.1/System.Collections.Immutable.dll
new file mode 100644
index 0000000..0302500
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/System.Collections.Immutable.dll differ
diff --git a/SavvyUI/bin/Debug/netcoreapp3.1/System.Diagnostics.DiagnosticSource.dll b/SavvyUI/bin/Debug/netcoreapp3.1/System.Diagnostics.DiagnosticSource.dll
new file mode 100644
index 0000000..fcdcae5
Binary files /dev/null and b/SavvyUI/bin/Debug/netcoreapp3.1/System.Diagnostics.DiagnosticSource.dll differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/.NETCoreApp,Version=v3.1.AssemblyAttributes.cs b/SavvyUI/obj/Debug/netcoreapp3.1/.NETCoreApp,Version=v3.1.AssemblyAttributes.cs
new file mode 100644
index 0000000..ad8dfe1
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/.NETCoreApp,Version=v3.1.AssemblyAttributes.cs
@@ -0,0 +1,4 @@
+// <autogenerated />
+using System;
+using System.Reflection;
+[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETCoreApp,Version=v3.1", FrameworkDisplayName = "")]
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfo.cs b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfo.cs
new file mode 100644
index 0000000..de485f1
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfo.cs
@@ -0,0 +1,22 @@
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+using System;
+using System.Reflection;
+
+[assembly: System.Reflection.AssemblyCompanyAttribute("SavvyUI")]
+[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
+[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")]
+[assembly: System.Reflection.AssemblyProductAttribute("SavvyUI")]
+[assembly: System.Reflection.AssemblyTitleAttribute("SavvyUI")]
+[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
+
+// Generated by the MSBuild WriteCodeFragment class.
+
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfoInputs.cache b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfoInputs.cache
new file mode 100644
index 0000000..ce4eac5
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.AssemblyInfoInputs.cache
@@ -0,0 +1 @@
+19ac754cb7bb19ad15df9843ae0d8a078249a7bc
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.assets.cache b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.assets.cache
new file mode 100644
index 0000000..869ecdc
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.assets.cache differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.CopyComplete b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.CopyComplete
new file mode 100644
index 0000000..e69de29
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.CoreCompileInputs.cache b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.CoreCompileInputs.cache
new file mode 100644
index 0000000..36ad719
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.CoreCompileInputs.cache
@@ -0,0 +1 @@
+460f3a404b4e9945776ef99d91946fe6c2fd4d58
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.FileListAbsolute.txt b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.FileListAbsolute.txt
new file mode 100644
index 0000000..56ab458
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csproj.FileListAbsolute.txt
@@ -0,0 +1,92 @@
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.exe
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.deps.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.runtimeconfig.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.runtimeconfig.dev.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyUI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Bcl.AsyncInterfaces.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Bcl.HashCode.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Design.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Relational.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Caching.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Caching.Memory.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Binder.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.FileExtensions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Json.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyInjection.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyInjection.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileProviders.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileProviders.Physical.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileSystemGlobbing.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Logging.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Logging.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Options.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Primitives.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Npgsql.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Npgsql.EntityFrameworkCore.PostgreSQL.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Serilog.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\Serilog.Sinks.File.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\System.Diagnostics.DiagnosticSource.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyDB.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyLib.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyDB.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\bin\Debug\netcoreapp3.1\SavvyLib.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.csprojAssemblyReference.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.AssemblyInfoInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.AssemblyInfo.cs
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.csproj.CoreCompileInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.csproj.CopyComplete
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\SavvyUI.genruntimeconfig.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.exe
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.deps.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.runtimeconfig.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.runtimeconfig.dev.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyUI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Bcl.AsyncInterfaces.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Bcl.HashCode.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Design.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.EntityFrameworkCore.Relational.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Caching.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Caching.Memory.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Binder.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.FileExtensions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Configuration.Json.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyInjection.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.DependencyInjection.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileProviders.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileProviders.Physical.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.FileSystemGlobbing.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Logging.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Logging.Abstractions.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Options.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Microsoft.Extensions.Primitives.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Npgsql.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Npgsql.EntityFrameworkCore.PostgreSQL.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Serilog.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\Serilog.Sinks.File.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\System.Collections.Immutable.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\System.Diagnostics.DiagnosticSource.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyDB.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyLib.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyDB.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\bin\Debug\netcoreapp3.1\SavvyLib.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.csprojAssemblyReference.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.AssemblyInfoInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.AssemblyInfo.cs
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.csproj.CoreCompileInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.csproj.CopyComplete
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P1\savvyui\obj\Debug\netcoreapp3.1\SavvyUI.genruntimeconfig.cache
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csprojAssemblyReference.cache b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csprojAssemblyReference.cache
new file mode 100644
index 0000000..10635cd
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.csprojAssemblyReference.cache differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.dll b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.dll
new file mode 100644
index 0000000..493115a
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.dll differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.exe b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.exe
new file mode 100644
index 0000000..600f5df
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.exe differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.genruntimeconfig.cache b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.genruntimeconfig.cache
new file mode 100644
index 0000000..34bedab
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.genruntimeconfig.cache
@@ -0,0 +1 @@
+86c8e15dd33445635927cfaf398408205fd11473
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.pdb b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.pdb
new file mode 100644
index 0000000..0b9ffc5
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/SavvyUI.pdb differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfo.cs b/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfo.cs
new file mode 100644
index 0000000..afe28ec
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfo.cs
@@ -0,0 +1,22 @@
+//------------------------------------------------------------------------------
+// <auto-generated>
+//     This code was generated by a tool.
+//
+//     Changes to this file may cause incorrect behavior and will be lost if
+//     the code is regenerated.
+// </auto-generated>
+//------------------------------------------------------------------------------
+
+using System;
+using System.Reflection;
+
+[assembly: System.Reflection.AssemblyCompanyAttribute("UI")]
+[assembly: System.Reflection.AssemblyConfigurationAttribute("Debug")]
+[assembly: System.Reflection.AssemblyFileVersionAttribute("1.0.0.0")]
+[assembly: System.Reflection.AssemblyInformationalVersionAttribute("1.0.0")]
+[assembly: System.Reflection.AssemblyProductAttribute("UI")]
+[assembly: System.Reflection.AssemblyTitleAttribute("UI")]
+[assembly: System.Reflection.AssemblyVersionAttribute("1.0.0.0")]
+
+// Generated by the MSBuild WriteCodeFragment class.
+
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfoInputs.cache b/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfoInputs.cache
new file mode 100644
index 0000000..36e6c4a
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/UI.AssemblyInfoInputs.cache
@@ -0,0 +1 @@
+f1e726f94a7e38528ee1bfd92354095ca08a056e
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.assets.cache b/SavvyUI/obj/Debug/netcoreapp3.1/UI.assets.cache
new file mode 100644
index 0000000..a36bec0
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/UI.assets.cache differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.CoreCompileInputs.cache b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.CoreCompileInputs.cache
new file mode 100644
index 0000000..a612ceb
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.CoreCompileInputs.cache
@@ -0,0 +1 @@
+ed427fc9eeaa5f0bac079420e28f0da0095a2089
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.FileListAbsolute.txt b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.FileListAbsolute.txt
new file mode 100644
index 0000000..9a1ecce
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csproj.FileListAbsolute.txt
@@ -0,0 +1,19 @@
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.csprojAssemblyReference.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.AssemblyInfoInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.AssemblyInfo.cs
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.csproj.CoreCompileInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.exe
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.deps.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.runtimeconfig.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.runtimeconfig.dev.json
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\bin\Debug\netcoreapp3.1\UI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.pdb
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\UI\obj\Debug\netcoreapp3.1\UI.genruntimeconfig.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.csprojAssemblyReference.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.AssemblyInfoInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.AssemblyInfo.cs
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.csproj.CoreCompileInputs.cache
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.dll
+C:\Users\Ckat\Documents\Work\ChiShantel-P0\SavvyUI\obj\Debug\netcoreapp3.1\UI.pdb
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.csprojAssemblyReference.cache b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csprojAssemblyReference.cache
new file mode 100644
index 0000000..d5e301b
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/UI.csprojAssemblyReference.cache differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.dll b/SavvyUI/obj/Debug/netcoreapp3.1/UI.dll
new file mode 100644
index 0000000..9cb2ed7
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/UI.dll differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.exe b/SavvyUI/obj/Debug/netcoreapp3.1/UI.exe
new file mode 100644
index 0000000..4b0b625
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/UI.exe differ
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.genruntimeconfig.cache b/SavvyUI/obj/Debug/netcoreapp3.1/UI.genruntimeconfig.cache
new file mode 100644
index 0000000..34bedab
--- /dev/null
+++ b/SavvyUI/obj/Debug/netcoreapp3.1/UI.genruntimeconfig.cache
@@ -0,0 +1 @@
+86c8e15dd33445635927cfaf398408205fd11473
diff --git a/SavvyUI/obj/Debug/netcoreapp3.1/UI.pdb b/SavvyUI/obj/Debug/netcoreapp3.1/UI.pdb
new file mode 100644
index 0000000..b31e652
Binary files /dev/null and b/SavvyUI/obj/Debug/netcoreapp3.1/UI.pdb differ
diff --git a/lacrosseUI/obj/lacrosseUI.csproj.EntityFrameworkCore.targets b/SavvyUI/obj/SavvyUI.csproj.EntityFrameworkCore.targets
similarity index 100%
rename from lacrosseUI/obj/lacrosseUI.csproj.EntityFrameworkCore.targets
rename to SavvyUI/obj/SavvyUI.csproj.EntityFrameworkCore.targets
diff --git a/SavvyUI/obj/SavvyUI.csproj.nuget.dgspec.json b/SavvyUI/obj/SavvyUI.csproj.nuget.dgspec.json
new file mode 100644
index 0000000..21820f6
--- /dev/null
+++ b/SavvyUI/obj/SavvyUI.csproj.nuget.dgspec.json
@@ -0,0 +1,249 @@
+{
+  "format": 1,
+  "restore": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj": {}
+  },
+  "projects": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "projectName": "SavvyDB",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {}
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    },
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+        "projectName": "SavvyLib",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\SavvyLib.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyLib\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {
+              "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+                "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj"
+              }
+            }
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    },
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj",
+        "projectName": "SavvyUI",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+          "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {
+              "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+                "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj"
+              },
+              "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\Savvylib\\SavvyLib.csproj": {
+                "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\Savvylib\\SavvyLib.csproj"
+              }
+            }
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "dependencies": {
+            "Microsoft.EntityFrameworkCore.Design": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.EntityFrameworkCore.Tools": {
+              "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+              "suppressParent": "All",
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Microsoft.Extensions.Configuration.Json": {
+              "target": "Package",
+              "version": "[3.1.9, )"
+            },
+            "Npgsql.EntityFrameworkCore.PostgreSQL": {
+              "target": "Package",
+              "version": "[3.1.4, )"
+            },
+            "Serilog": {
+              "target": "Package",
+              "version": "[2.10.0, )"
+            },
+            "Serilog.Sinks.File": {
+              "target": "Package",
+              "version": "[4.1.0, )"
+            }
+          },
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/obj/SavvyUI.csproj.nuget.g.props b/SavvyUI/obj/SavvyUI.csproj.nuget.g.props
new file mode 100644
index 0000000..30e71b5
--- /dev/null
+++ b/SavvyUI/obj/SavvyUI.csproj.nuget.g.props
@@ -0,0 +1,24 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
+    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
+    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
+    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
+    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\Ckat\.nuget\packages\</NuGetPackageFolders>
+    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
+    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">5.7.0</NuGetToolVersion>
+  </PropertyGroup>
+  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <SourceRoot Include="$([MSBuild]::EnsureTrailingSlash($(NuGetPackageFolders)))" />
+  </ItemGroup>
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <Import Project="$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props" Condition="Exists('$(NuGetPackageRoot)microsoft.entityframeworkcore.design\3.1.9\build\netcoreapp2.0\Microsoft.EntityFrameworkCore.Design.props')" />
+  </ImportGroup>
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <PkgMicrosoft_EntityFrameworkCore_Tools Condition=" '$(PkgMicrosoft_EntityFrameworkCore_Tools)' == '' ">C:\Users\Ckat\.nuget\packages\microsoft.entityframeworkcore.tools\3.1.9</PkgMicrosoft_EntityFrameworkCore_Tools>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyUI/obj/SavvyUI.csproj.nuget.g.targets b/SavvyUI/obj/SavvyUI.csproj.nuget.g.targets
new file mode 100644
index 0000000..53cfaa1
--- /dev/null
+++ b/SavvyUI/obj/SavvyUI.csproj.nuget.g.targets
@@ -0,0 +1,6 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyUI/obj/UI.csproj.nuget.dgspec.json b/SavvyUI/obj/UI.csproj.nuget.dgspec.json
new file mode 100644
index 0000000..ae2a876
--- /dev/null
+++ b/SavvyUI/obj/UI.csproj.nuget.dgspec.json
@@ -0,0 +1,58 @@
+{
+  "format": 1,
+  "restore": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P0\\SavvyUI\\UI.csproj": {}
+  },
+  "projects": {
+    "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P0\\SavvyUI\\UI.csproj": {
+      "version": "1.0.0",
+      "restore": {
+        "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P0\\SavvyUI\\UI.csproj",
+        "projectName": "UI",
+        "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P0\\SavvyUI\\UI.csproj",
+        "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+        "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P0\\SavvyUI\\obj\\",
+        "projectStyle": "PackageReference",
+        "configFilePaths": [
+          "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config"
+        ],
+        "originalTargetFrameworks": [
+          "netcoreapp3.1"
+        ],
+        "sources": {
+          "https://api.nuget.org/v3/index.json": {}
+        },
+        "frameworks": {
+          "netcoreapp3.1": {
+            "projectReferences": {}
+          }
+        },
+        "warningProperties": {
+          "warnAsError": [
+            "NU1605"
+          ]
+        }
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "imports": [
+            "net461",
+            "net462",
+            "net47",
+            "net471",
+            "net472",
+            "net48"
+          ],
+          "assetTargetFallback": true,
+          "warn": true,
+          "frameworkReferences": {
+            "Microsoft.NETCore.App": {
+              "privateAssets": "all"
+            }
+          },
+          "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+        }
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/obj/UI.csproj.nuget.g.props b/SavvyUI/obj/UI.csproj.nuget.g.props
new file mode 100644
index 0000000..2fd31be
--- /dev/null
+++ b/SavvyUI/obj/UI.csproj.nuget.g.props
@@ -0,0 +1,18 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <RestoreSuccess Condition=" '$(RestoreSuccess)' == '' ">True</RestoreSuccess>
+    <RestoreTool Condition=" '$(RestoreTool)' == '' ">NuGet</RestoreTool>
+    <ProjectAssetsFile Condition=" '$(ProjectAssetsFile)' == '' ">$(MSBuildThisFileDirectory)project.assets.json</ProjectAssetsFile>
+    <NuGetPackageRoot Condition=" '$(NuGetPackageRoot)' == '' ">$(UserProfile)\.nuget\packages\</NuGetPackageRoot>
+    <NuGetPackageFolders Condition=" '$(NuGetPackageFolders)' == '' ">C:\Users\Ckat\.nuget\packages\</NuGetPackageFolders>
+    <NuGetProjectStyle Condition=" '$(NuGetProjectStyle)' == '' ">PackageReference</NuGetProjectStyle>
+    <NuGetToolVersion Condition=" '$(NuGetToolVersion)' == '' ">5.7.0</NuGetToolVersion>
+  </PropertyGroup>
+  <ItemGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
+    <SourceRoot Include="$([MSBuild]::EnsureTrailingSlash($(NuGetPackageFolders)))" />
+  </ItemGroup>
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyUI/obj/UI.csproj.nuget.g.targets b/SavvyUI/obj/UI.csproj.nuget.g.targets
new file mode 100644
index 0000000..53cfaa1
--- /dev/null
+++ b/SavvyUI/obj/UI.csproj.nuget.g.targets
@@ -0,0 +1,6 @@
+ï»¿<?xml version="1.0" encoding="utf-8" standalone="no"?>
+<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <PropertyGroup>
+    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
+  </PropertyGroup>
+</Project>
\ No newline at end of file
diff --git a/SavvyUI/obj/project.assets.json b/SavvyUI/obj/project.assets.json
new file mode 100644
index 0000000..90d8508
--- /dev/null
+++ b/SavvyUI/obj/project.assets.json
@@ -0,0 +1,1955 @@
+{
+  "version": 3,
+  "targets": {
+    ".NETCoreApp,Version=v3.1": {
+      "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll": {}
+        }
+      },
+      "Microsoft.Bcl.HashCode/1.1.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll": {}
+        }
+      },
+      "Microsoft.CSharp/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netcoreapp2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Bcl.AsyncInterfaces": "1.1.1",
+          "Microsoft.Bcl.HashCode": "1.1.0",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.9",
+          "Microsoft.EntityFrameworkCore.Analyzers": "3.1.9",
+          "Microsoft.Extensions.Caching.Memory": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging": "3.1.9",
+          "System.Collections.Immutable": "1.7.1",
+          "System.ComponentModel.Annotations": "4.7.0",
+          "System.Diagnostics.DiagnosticSource": "4.7.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.CSharp": "4.7.0",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll": {}
+        },
+        "build": {
+          "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll": {}
+        }
+      },
+      "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": "3.1.9"
+        },
+        "compile": {
+          "lib/netstandard2.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/_._": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Caching.Memory/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Caching.Abstractions": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.FileProviders.Physical": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Configuration.Json/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration": "3.1.9",
+          "Microsoft.Extensions.Configuration.FileExtensions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll": {}
+        }
+      },
+      "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.FileProviders.Abstractions": "3.1.9",
+          "Microsoft.Extensions.FileSystemGlobbing": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll": {}
+        }
+      },
+      "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Binder": "3.1.9",
+          "Microsoft.Extensions.DependencyInjection": "3.1.9",
+          "Microsoft.Extensions.Logging.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Options": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Options/3.1.9": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.Extensions.DependencyInjection.Abstractions": "3.1.9",
+          "Microsoft.Extensions.Primitives": "3.1.9"
+        },
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll": {}
+        }
+      },
+      "Microsoft.Extensions.Primitives/3.1.9": {
+        "type": "package",
+        "compile": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll": {}
+        }
+      },
+      "Microsoft.NETCore.Platforms/1.0.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard1.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard1.0/_._": {}
+        }
+      },
+      "Microsoft.NETCore.Targets/1.0.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard1.0/_._": {}
+        },
+        "runtime": {
+          "lib/netstandard1.0/_._": {}
+        }
+      },
+      "Npgsql/4.1.3.1": {
+        "type": "package",
+        "dependencies": {
+          "System.Runtime.CompilerServices.Unsafe": "4.6.0"
+        },
+        "compile": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp3.0/Npgsql.dll": {}
+        }
+      },
+      "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Abstractions": "3.1.4",
+          "Microsoft.EntityFrameworkCore.Relational": "3.1.4",
+          "Npgsql": "4.1.3.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll": {}
+        }
+      },
+      "Serilog/2.10.0": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.1/Serilog.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/Serilog.dll": {}
+        }
+      },
+      "Serilog.Sinks.File/4.1.0": {
+        "type": "package",
+        "dependencies": {
+          "Serilog": "2.5.0",
+          "System.IO.FileSystem": "4.0.1",
+          "System.Text.Encoding.Extensions": "4.0.11",
+          "System.Threading.Timer": "4.0.1"
+        },
+        "compile": {
+          "lib/netstandard2.0/Serilog.Sinks.File.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/Serilog.Sinks.File.dll": {}
+        }
+      },
+      "System.Collections.Immutable/1.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.0/System.Collections.Immutable.dll": {}
+        }
+      },
+      "System.ComponentModel.Annotations/4.7.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard2.1/System.ComponentModel.Annotations.dll": {}
+        }
+      },
+      "System.Diagnostics.DiagnosticSource/4.7.1": {
+        "type": "package",
+        "compile": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll": {}
+        }
+      },
+      "System.IO/4.1.0": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Text.Encoding": "4.0.11",
+          "System.Threading.Tasks": "4.0.11"
+        },
+        "compile": {
+          "ref/netstandard1.5/System.IO.dll": {}
+        }
+      },
+      "System.IO.FileSystem/4.0.1": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.IO": "4.1.0",
+          "System.IO.FileSystem.Primitives": "4.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Runtime.Handles": "4.0.1",
+          "System.Text.Encoding": "4.0.11",
+          "System.Threading.Tasks": "4.0.11"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.IO.FileSystem.dll": {}
+        }
+      },
+      "System.IO.FileSystem.Primitives/4.0.1": {
+        "type": "package",
+        "dependencies": {
+          "System.Runtime": "4.1.0"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.IO.FileSystem.Primitives.dll": {}
+        },
+        "runtime": {
+          "lib/netstandard1.3/System.IO.FileSystem.Primitives.dll": {}
+        }
+      },
+      "System.Runtime/4.1.0": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1"
+        },
+        "compile": {
+          "ref/netstandard1.5/System.Runtime.dll": {}
+        }
+      },
+      "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+        "type": "package",
+        "compile": {
+          "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        },
+        "runtime": {
+          "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll": {}
+        }
+      },
+      "System.Runtime.Handles/4.0.1": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.Runtime.Handles.dll": {}
+        }
+      },
+      "System.Text.Encoding/4.0.11": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.Text.Encoding.dll": {}
+        }
+      },
+      "System.Text.Encoding.Extensions/4.0.11": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0",
+          "System.Text.Encoding": "4.0.11"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.Text.Encoding.Extensions.dll": {}
+        }
+      },
+      "System.Threading.Tasks/4.0.11": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        },
+        "compile": {
+          "ref/netstandard1.3/System.Threading.Tasks.dll": {}
+        }
+      },
+      "System.Threading.Timer/4.0.1": {
+        "type": "package",
+        "dependencies": {
+          "Microsoft.NETCore.Platforms": "1.0.1",
+          "Microsoft.NETCore.Targets": "1.0.1",
+          "System.Runtime": "4.1.0"
+        },
+        "compile": {
+          "ref/netstandard1.2/System.Threading.Timer.dll": {}
+        }
+      },
+      "SavvyDB/1.0.0": {
+        "type": "project",
+        "framework": ".NETCoreApp,Version=v3.1",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4"
+        },
+        "compile": {
+          "bin/placeholder/SavvyDB.dll": {}
+        },
+        "runtime": {
+          "bin/placeholder/SavvyDB.dll": {}
+        }
+      },
+      "SavvyLib/1.0.0": {
+        "type": "project",
+        "framework": ".NETCoreApp,Version=v3.1",
+        "dependencies": {
+          "Microsoft.Extensions.Configuration.Json": "3.1.9",
+          "Npgsql.EntityFrameworkCore.PostgreSQL": "3.1.4",
+          "SavvyDB": "1.0.0"
+        },
+        "compile": {
+          "bin/placeholder/SavvyLib.dll": {}
+        },
+        "runtime": {
+          "bin/placeholder/SavvyLib.dll": {}
+        }
+      }
+    }
+  },
+  "libraries": {
+    "Microsoft.Bcl.AsyncInterfaces/1.1.1": {
+      "sha512": "yuvf07qFWFqtK3P/MRkEKLhn5r2UbSpVueRziSqj0yJQIKFwG1pq9mOayK3zE5qZCTs0CbrwL9M6R8VwqyGy2w==",
+      "type": "package",
+      "path": "microsoft.bcl.asyncinterfaces/1.1.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/net461/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.xml",
+        "microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+        "microsoft.bcl.asyncinterfaces.nuspec",
+        "ref/net461/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.AsyncInterfaces.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.AsyncInterfaces.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.Bcl.HashCode/1.1.0": {
+      "sha512": "J2G1k+u5unBV+aYcwxo94ip16Rkp65pgWFb0R6zwJipzWNMgvqlWeuI7/+R+e8bob66LnSG+llLJ+z8wI94cHg==",
+      "type": "package",
+      "path": "microsoft.bcl.hashcode/1.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/Microsoft.Bcl.HashCode.dll",
+        "lib/net461/Microsoft.Bcl.HashCode.xml",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netcoreapp2.1/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.0/Microsoft.Bcl.HashCode.xml",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "lib/netstandard2.1/Microsoft.Bcl.HashCode.xml",
+        "microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+        "microsoft.bcl.hashcode.nuspec",
+        "ref/net461/Microsoft.Bcl.HashCode.dll",
+        "ref/netcoreapp2.1/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.0/Microsoft.Bcl.HashCode.dll",
+        "ref/netstandard2.1/Microsoft.Bcl.HashCode.dll",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.CSharp/4.7.0": {
+      "sha512": "pTj+D3uJWyN3My70i2Hqo+OXixq3Os2D1nJ2x92FFo6sk8fYS1m1WLNTs0Dc1uPaViH0YvEEwvzddQ7y4rhXmA==",
+      "type": "package",
+      "path": "microsoft.csharp/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/netcore50/Microsoft.CSharp.dll",
+        "lib/netcoreapp2.0/_._",
+        "lib/netstandard1.3/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.dll",
+        "lib/netstandard2.0/Microsoft.CSharp.xml",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/uap10.0.16299/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "microsoft.csharp.4.7.0.nupkg.sha512",
+        "microsoft.csharp.nuspec",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/Microsoft.CSharp.dll",
+        "ref/netcore50/Microsoft.CSharp.xml",
+        "ref/netcore50/de/Microsoft.CSharp.xml",
+        "ref/netcore50/es/Microsoft.CSharp.xml",
+        "ref/netcore50/fr/Microsoft.CSharp.xml",
+        "ref/netcore50/it/Microsoft.CSharp.xml",
+        "ref/netcore50/ja/Microsoft.CSharp.xml",
+        "ref/netcore50/ko/Microsoft.CSharp.xml",
+        "ref/netcore50/ru/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hans/Microsoft.CSharp.xml",
+        "ref/netcore50/zh-hant/Microsoft.CSharp.xml",
+        "ref/netcoreapp2.0/_._",
+        "ref/netstandard1.0/Microsoft.CSharp.dll",
+        "ref/netstandard1.0/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/de/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/es/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/fr/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/it/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ja/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ko/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/ru/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hans/Microsoft.CSharp.xml",
+        "ref/netstandard1.0/zh-hant/Microsoft.CSharp.xml",
+        "ref/netstandard2.0/Microsoft.CSharp.dll",
+        "ref/netstandard2.0/Microsoft.CSharp.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/uap10.0.16299/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore/3.1.9": {
+      "sha512": "u3A2W0BvAuAF2jgW+WX+C+Sh8sMGX5Kl1hdA0gu6A/XSrZQoW/BUP4a/q2n3iitDGndaorqjAKx+Spb9gBto+w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.xml",
+        "microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Abstractions/3.1.9": {
+      "sha512": "IR6Y4RJVlw0QXdWXjF3Kx9s1QLiicJus+BFBKr43lBtriV20j3yrWMoaZ9W1AUUgnicZXpXVcNfklqtmwb9Sxw==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Abstractions.xml",
+        "microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Analyzers/3.1.9": {
+      "sha512": "eXGyx/Lb1fiiKtnIStdxGrfBSSQg8oZytE10f1T/2xAx12W9dKB9U9fg05cwNCDC0S2CXILsmZHYaGqCSXVAqQ==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.analyzers/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "analyzers/dotnet/cs/Microsoft.EntityFrameworkCore.Analyzers.dll",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.analyzers.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Design/3.1.9": {
+      "sha512": "2zgP7BWcw5nqGQiT4bEtiI6ras+4pvKg5D+tA3AYvjEifzzaWvmRTb3B9nRHpIYJAhPtmWNBVnVXLbu3fS1OYA==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.design/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "build/net461/Microsoft.EntityFrameworkCore.Design.props",
+        "build/netcoreapp2.0/Microsoft.EntityFrameworkCore.Design.props",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Design.xml",
+        "microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.design.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Relational/3.1.9": {
+      "sha512": "7fhWuSfrCYlv/hvOX5OhbFJF/G9f8sifqTrJiYnAYLDOvNizwv7t9tFPD8JwaF3zM2S54O5/Vni2NxvwzSaW2w==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.relational/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.dll",
+        "lib/netstandard2.0/Microsoft.EntityFrameworkCore.Relational.xml",
+        "microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.relational.nuspec"
+      ]
+    },
+    "Microsoft.EntityFrameworkCore.Tools/3.1.9": {
+      "sha512": "mSgwjp0h5iqW5V49SVijR5O+kNpI1nitcbN12n9FYx/Ga6oCEFwXR/llBDesD6ASHw3Mx16vodJYJ7CEBx5rig==",
+      "type": "package",
+      "path": "microsoft.entityframeworkcore.tools/3.1.9",
+      "hasTools": true,
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/_._",
+        "microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+        "microsoft.entityframeworkcore.tools.nuspec",
+        "tools/EntityFrameworkCore.PS2.psd1",
+        "tools/EntityFrameworkCore.PS2.psm1",
+        "tools/EntityFrameworkCore.psd1",
+        "tools/EntityFrameworkCore.psm1",
+        "tools/about_EntityFrameworkCore.help.txt",
+        "tools/init.ps1",
+        "tools/net461/any/ef.exe",
+        "tools/net461/win-x86/ef.exe",
+        "tools/netcoreapp2.0/any/ef.dll",
+        "tools/netcoreapp2.0/any/ef.runtimeconfig.json"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Abstractions/3.1.9": {
+      "sha512": "/2QsPAsUZD4qvftZkUKHRRRryPDXWh606/iNXPLrulwHLMr9JNsKBJWVqylT3qU92nJok5VoqSblkY9mSyxFyg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Abstractions.xml",
+        "microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Caching.Memory/3.1.9": {
+      "sha512": "/JrVMVetX/kpJQUIlJ6NLQ3zbF0yyryXpo4+uFCqYIUZzgmWk8DS/zSKcyj1tQ3410+vhDEAPngxC+hg0IlJeg==",
+      "type": "package",
+      "path": "microsoft.extensions.caching.memory/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Caching.Memory.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Caching.Memory.xml",
+        "microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+        "microsoft.extensions.caching.memory.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration/3.1.9": {
+      "sha512": "lqdkOGNeTMKG981Q7yWGlRiFbIlsRwTlMMiybT+WOzUCFBS/wc25tZgh7Wm/uRoBbWefgvokzmnea7ZjmFedmA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.xml",
+        "microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Abstractions/3.1.9": {
+      "sha512": "vOJxPKczaHpXeZFrxARxYwsEulhEouXc5aZGgMdkhV/iEXX9/pfjqKk76rTG+4CsJjHV+G/4eMhvOIaQMHENNA==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Abstractions.xml",
+        "microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Binder/3.1.9": {
+      "sha512": "BG6HcT7tARYakftqfQu+cLksgIWG1NdxMY+igI12hdZrUK+WjS973NiRyuao/U9yyTeM9NPwRnC61hCmG3G3jg==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.binder/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Binder.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Binder.xml",
+        "microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.binder.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.FileExtensions/3.1.9": {
+      "sha512": "OC07LdaPMEeKYt1a4DJAzjKXUmP5K2MS4Sg0FvLrJF+9yd3YNTWSDrb1MpBuZ3564cbJJfyldICkSwCwWQ8lIw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.fileextensions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.FileExtensions.xml",
+        "microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.fileextensions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Configuration.Json/3.1.9": {
+      "sha512": "v1epO1J3qIqxwusz0gifp7hO+J2F/tBZOQAR9I1pLFDrX6NjQaYbZy4RGAU554Ntc0+lYAi0FA8CNMrQcTegYw==",
+      "type": "package",
+      "path": "microsoft.extensions.configuration.json/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Configuration.Json.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Configuration.Json.xml",
+        "microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+        "microsoft.extensions.configuration.json.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection/3.1.9": {
+      "sha512": "ORqfrAACcvTInie1oGola5uky344/PiNfgayTPuZWV4WnSfIQZJQm/ZLpGshJE3h7TqwYaYElGazK/yaM2bFLA==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/net461/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.xml",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.dll",
+        "lib/netstandard2.1/Microsoft.Extensions.DependencyInjection.xml",
+        "microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.DependencyInjection.Abstractions/3.1.9": {
+      "sha512": "8PkcaPwiTPOhqshoY4+rQUbz86X6YpLDLUqXOezh7L2A3pgpBmeBBByYIffofBlvQxDdQ0zB2DkWjbZWyCxRWg==",
+      "type": "package",
+      "path": "microsoft.extensions.dependencyinjection.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.DependencyInjection.Abstractions.xml",
+        "microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.dependencyinjection.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Abstractions/3.1.9": {
+      "sha512": "Q4SGwEFZKiZbpzPgdGbQUULxtcH1zXMOwCPKSm6QwVcOCGshf3QLfBh+O/GyFH4B0RfZ16nKyeW1mMONlRyjUw==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Abstractions.xml",
+        "microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileProviders.Physical/3.1.9": {
+      "sha512": "HWDSsblTCQp7EEJJmnLzttIhFGzDu+DGqBbOvGCdFT0+pkCuBkn3EiWpEEcm5WMTO5njmsbLSK9ZuUUf2zPsFg==",
+      "type": "package",
+      "path": "microsoft.extensions.fileproviders.physical/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.FileProviders.Physical.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileProviders.Physical.xml",
+        "microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+        "microsoft.extensions.fileproviders.physical.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.FileSystemGlobbing/3.1.9": {
+      "sha512": "5bnewG1aBiSESPNwcXGIxDDRN95uqdy+fqZZ8Z63Et5rRNlAwAfXHOrg+FTht7UjHobjvtjzquMCbAWhWEPHIw==",
+      "type": "package",
+      "path": "microsoft.extensions.filesystemglobbing/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.FileSystemGlobbing.xml",
+        "microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+        "microsoft.extensions.filesystemglobbing.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging/3.1.9": {
+      "sha512": "+V3i0jCQCO6IIOf6e+fL0SqrZd2x/Krug9EEL1JHa9R03RsbEpltCtjVY5hxedyuyuQKwvLoR12sCfu/9XEUAw==",
+      "type": "package",
+      "path": "microsoft.extensions.logging/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Logging.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.xml",
+        "microsoft.extensions.logging.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Logging.Abstractions/3.1.9": {
+      "sha512": "W5fbF8qVR9SMVVJqDQLIR7meWbev6Pu/lbrm7LDNr4Sp7HOotr4k2UULTdFSXOi5aoDdkQZpWnq0ZSpjrR3tjg==",
+      "type": "package",
+      "path": "microsoft.extensions.logging.abstractions/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Logging.Abstractions.xml",
+        "microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+        "microsoft.extensions.logging.abstractions.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Options/3.1.9": {
+      "sha512": "EIb3G1DL+Rl9MvJR7LjI1wCy2nfTN4y8MflbOftn1HLYQBj/Rwl8kUbGTrSFE01c99Wm4ETjWVsjqKcpFvhPng==",
+      "type": "package",
+      "path": "microsoft.extensions.options/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Options.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Options.xml",
+        "microsoft.extensions.options.3.1.9.nupkg.sha512",
+        "microsoft.extensions.options.nuspec"
+      ]
+    },
+    "Microsoft.Extensions.Primitives/3.1.9": {
+      "sha512": "IrHecH0eGG7/XoeEtv++oLg/sJHRNyeCqlA9RhAo6ig4GpOTjtDr32sBMYuuLtUq8ALahneWkrOzoBAwJ4L4iA==",
+      "type": "package",
+      "path": "microsoft.extensions.primitives/3.1.9",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.dll",
+        "lib/netcoreapp3.1/Microsoft.Extensions.Primitives.xml",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.dll",
+        "lib/netstandard2.0/Microsoft.Extensions.Primitives.xml",
+        "microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+        "microsoft.extensions.primitives.nuspec"
+      ]
+    },
+    "Microsoft.NETCore.Platforms/1.0.1": {
+      "sha512": "2G6OjjJzwBfNOO8myRV/nFrbTw5iA+DEm0N+qUqhrOmaVtn4pC77h38I1jsXGw5VH55+dPfQsqHD0We9sCl9FQ==",
+      "type": "package",
+      "path": "microsoft.netcore.platforms/1.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/netstandard1.0/_._",
+        "microsoft.netcore.platforms.1.0.1.nupkg.sha512",
+        "microsoft.netcore.platforms.nuspec",
+        "runtime.json"
+      ]
+    },
+    "Microsoft.NETCore.Targets/1.0.1": {
+      "sha512": "rkn+fKobF/cbWfnnfBOQHKVKIOpxMZBvlSHkqDWgBpwGDcLRduvs3D9OLGeV6GWGvVwNlVi2CBbTjuPmtHvyNw==",
+      "type": "package",
+      "path": "microsoft.netcore.targets/1.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/netstandard1.0/_._",
+        "microsoft.netcore.targets.1.0.1.nupkg.sha512",
+        "microsoft.netcore.targets.nuspec",
+        "runtime.json"
+      ]
+    },
+    "Npgsql/4.1.3.1": {
+      "sha512": "354pl/Picmt5/AIrm8urFwtxfK4n4NbmfBnLA9yvP8VtILSQF3/sFo3+lGuz+q4iyD18QeNFy0NMNBzsocFVlw==",
+      "type": "package",
+      "path": "npgsql/4.1.3.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/net461/Npgsql.dll",
+        "lib/net461/Npgsql.pdb",
+        "lib/net461/Npgsql.xml",
+        "lib/netcoreapp3.0/Npgsql.dll",
+        "lib/netcoreapp3.0/Npgsql.pdb",
+        "lib/netcoreapp3.0/Npgsql.xml",
+        "lib/netstandard2.0/Npgsql.dll",
+        "lib/netstandard2.0/Npgsql.pdb",
+        "lib/netstandard2.0/Npgsql.xml",
+        "lib/netstandard2.1/Npgsql.dll",
+        "lib/netstandard2.1/Npgsql.pdb",
+        "lib/netstandard2.1/Npgsql.xml",
+        "npgsql.4.1.3.1.nupkg.sha512",
+        "npgsql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "Npgsql.EntityFrameworkCore.PostgreSQL/3.1.4": {
+      "sha512": "T+BIWO+ceje5d52/sOwwqaU/F4Rm2jAWx5qA3+pUGbzY/ZXG0QbHQsyjyg0k8aef6JTq8FRk3FtRWkocsa1QWQ==",
+      "type": "package",
+      "path": "npgsql.entityframeworkcore.postgresql/3.1.4",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/netstandard2.0/Npgsql.EntityFrameworkCore.PostgreSQL.dll",
+        "npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+        "npgsql.entityframeworkcore.postgresql.nuspec",
+        "postgresql.png"
+      ]
+    },
+    "Serilog/2.10.0": {
+      "sha512": "+QX0hmf37a0/OZLxM3wL7V6/ADvC1XihXN4Kq/p6d8lCPfgkRdiuhbWlMaFjR9Av0dy5F0+MBeDmDdRZN/YwQA==",
+      "type": "package",
+      "path": "serilog/2.10.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "icon.png",
+        "lib/net45/Serilog.dll",
+        "lib/net45/Serilog.xml",
+        "lib/net46/Serilog.dll",
+        "lib/net46/Serilog.xml",
+        "lib/netstandard1.0/Serilog.dll",
+        "lib/netstandard1.0/Serilog.xml",
+        "lib/netstandard1.3/Serilog.dll",
+        "lib/netstandard1.3/Serilog.xml",
+        "lib/netstandard2.0/Serilog.dll",
+        "lib/netstandard2.0/Serilog.xml",
+        "lib/netstandard2.1/Serilog.dll",
+        "lib/netstandard2.1/Serilog.xml",
+        "serilog.2.10.0.nupkg.sha512",
+        "serilog.nuspec"
+      ]
+    },
+    "Serilog.Sinks.File/4.1.0": {
+      "sha512": "U0b34w+ZikbqWEZ3ui7BdzxY/19zwrdhLtI3o6tfmLdD3oXxg7n2TZJjwCCTlKPgRuYic9CBWfrZevbb70mTaw==",
+      "type": "package",
+      "path": "serilog.sinks.file/4.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "lib/net45/Serilog.Sinks.File.dll",
+        "lib/net45/Serilog.Sinks.File.pdb",
+        "lib/net45/Serilog.Sinks.File.xml",
+        "lib/netstandard1.3/Serilog.Sinks.File.dll",
+        "lib/netstandard1.3/Serilog.Sinks.File.pdb",
+        "lib/netstandard1.3/Serilog.Sinks.File.xml",
+        "lib/netstandard2.0/Serilog.Sinks.File.dll",
+        "lib/netstandard2.0/Serilog.Sinks.File.pdb",
+        "lib/netstandard2.0/Serilog.Sinks.File.xml",
+        "serilog.sinks.file.4.1.0.nupkg.sha512",
+        "serilog.sinks.file.nuspec"
+      ]
+    },
+    "System.Collections.Immutable/1.7.1": {
+      "sha512": "B43Zsz5EfMwyEbnObwRxW5u85fzJma3lrDeGcSAV1qkhSRTNY5uXAByTn9h9ddNdhM+4/YoLc/CI43umjwIl9Q==",
+      "type": "package",
+      "path": "system.collections.immutable/1.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net461/System.Collections.Immutable.dll",
+        "lib/net461/System.Collections.Immutable.xml",
+        "lib/netstandard1.0/System.Collections.Immutable.dll",
+        "lib/netstandard1.0/System.Collections.Immutable.xml",
+        "lib/netstandard1.3/System.Collections.Immutable.dll",
+        "lib/netstandard1.3/System.Collections.Immutable.xml",
+        "lib/netstandard2.0/System.Collections.Immutable.dll",
+        "lib/netstandard2.0/System.Collections.Immutable.xml",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.dll",
+        "lib/portable-net45+win8+wp8+wpa81/System.Collections.Immutable.xml",
+        "system.collections.immutable.1.7.1.nupkg.sha512",
+        "system.collections.immutable.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.ComponentModel.Annotations/4.7.0": {
+      "sha512": "0YFqjhp/mYkDGpU0Ye1GjE53HMp9UVfGN7seGpAMttAC0C40v5gw598jCgpbBLMmCo0E5YRLBv5Z2doypO49ZQ==",
+      "type": "package",
+      "path": "system.componentmodel.annotations/4.7.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/net461/System.ComponentModel.Annotations.dll",
+        "lib/netcore50/System.ComponentModel.Annotations.dll",
+        "lib/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "lib/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "lib/portable-net45+win8/_._",
+        "lib/win8/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/net461/System.ComponentModel.Annotations.dll",
+        "ref/net461/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/System.ComponentModel.Annotations.dll",
+        "ref/netcore50/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/de/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/es/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/fr/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/it/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ja/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ko/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/ru/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netcore50/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.1/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.1/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.3/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.3/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.dll",
+        "ref/netstandard1.4/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/de/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/es/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/fr/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/it/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ja/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ko/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/ru/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hans/System.ComponentModel.Annotations.xml",
+        "ref/netstandard1.4/zh-hant/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.0/System.ComponentModel.Annotations.xml",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.dll",
+        "ref/netstandard2.1/System.ComponentModel.Annotations.xml",
+        "ref/portable-net45+win8/_._",
+        "ref/win8/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.componentmodel.annotations.4.7.0.nupkg.sha512",
+        "system.componentmodel.annotations.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Diagnostics.DiagnosticSource/4.7.1": {
+      "sha512": "j81Lovt90PDAq8kLpaJfJKV/rWdWuEk6jfV+MBkee33vzYLEUsy4gXK8laa9V2nZlLM9VM9yA/OOQxxPEJKAMw==",
+      "type": "package",
+      "path": "system.diagnostics.diagnosticsource/4.7.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "Icon.png",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/net45/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net45/System.Diagnostics.DiagnosticSource.xml",
+        "lib/net46/System.Diagnostics.DiagnosticSource.dll",
+        "lib/net46/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.1/System.Diagnostics.DiagnosticSource.xml",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.dll",
+        "lib/netstandard1.3/System.Diagnostics.DiagnosticSource.xml",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.dll",
+        "lib/portable-net45+win8+wpa81/System.Diagnostics.DiagnosticSource.xml",
+        "system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+        "system.diagnostics.diagnosticsource.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.IO/4.1.0": {
+      "sha512": "3KlTJceQc3gnGIaHZ7UBZO26SHL1SHE4ddrmiwumFnId+CEHP+O8r386tZKaE6zlk5/mF8vifMBzHj9SaXN+mQ==",
+      "type": "package",
+      "path": "system.io/4.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/net462/System.IO.dll",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/net462/System.IO.dll",
+        "ref/netcore50/System.IO.dll",
+        "ref/netcore50/System.IO.xml",
+        "ref/netcore50/de/System.IO.xml",
+        "ref/netcore50/es/System.IO.xml",
+        "ref/netcore50/fr/System.IO.xml",
+        "ref/netcore50/it/System.IO.xml",
+        "ref/netcore50/ja/System.IO.xml",
+        "ref/netcore50/ko/System.IO.xml",
+        "ref/netcore50/ru/System.IO.xml",
+        "ref/netcore50/zh-hans/System.IO.xml",
+        "ref/netcore50/zh-hant/System.IO.xml",
+        "ref/netstandard1.0/System.IO.dll",
+        "ref/netstandard1.0/System.IO.xml",
+        "ref/netstandard1.0/de/System.IO.xml",
+        "ref/netstandard1.0/es/System.IO.xml",
+        "ref/netstandard1.0/fr/System.IO.xml",
+        "ref/netstandard1.0/it/System.IO.xml",
+        "ref/netstandard1.0/ja/System.IO.xml",
+        "ref/netstandard1.0/ko/System.IO.xml",
+        "ref/netstandard1.0/ru/System.IO.xml",
+        "ref/netstandard1.0/zh-hans/System.IO.xml",
+        "ref/netstandard1.0/zh-hant/System.IO.xml",
+        "ref/netstandard1.3/System.IO.dll",
+        "ref/netstandard1.3/System.IO.xml",
+        "ref/netstandard1.3/de/System.IO.xml",
+        "ref/netstandard1.3/es/System.IO.xml",
+        "ref/netstandard1.3/fr/System.IO.xml",
+        "ref/netstandard1.3/it/System.IO.xml",
+        "ref/netstandard1.3/ja/System.IO.xml",
+        "ref/netstandard1.3/ko/System.IO.xml",
+        "ref/netstandard1.3/ru/System.IO.xml",
+        "ref/netstandard1.3/zh-hans/System.IO.xml",
+        "ref/netstandard1.3/zh-hant/System.IO.xml",
+        "ref/netstandard1.5/System.IO.dll",
+        "ref/netstandard1.5/System.IO.xml",
+        "ref/netstandard1.5/de/System.IO.xml",
+        "ref/netstandard1.5/es/System.IO.xml",
+        "ref/netstandard1.5/fr/System.IO.xml",
+        "ref/netstandard1.5/it/System.IO.xml",
+        "ref/netstandard1.5/ja/System.IO.xml",
+        "ref/netstandard1.5/ko/System.IO.xml",
+        "ref/netstandard1.5/ru/System.IO.xml",
+        "ref/netstandard1.5/zh-hans/System.IO.xml",
+        "ref/netstandard1.5/zh-hant/System.IO.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.io.4.1.0.nupkg.sha512",
+        "system.io.nuspec"
+      ]
+    },
+    "System.IO.FileSystem/4.0.1": {
+      "sha512": "IBErlVq5jOggAD69bg1t0pJcHaDbJbWNUZTPI96fkYWzwYbN6D9wRHMULLDd9dHsl7C2YsxXL31LMfPI1SWt8w==",
+      "type": "package",
+      "path": "system.io.filesystem/4.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net46/System.IO.FileSystem.dll",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net46/System.IO.FileSystem.dll",
+        "ref/netstandard1.3/System.IO.FileSystem.dll",
+        "ref/netstandard1.3/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/de/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/es/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/fr/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/it/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/ja/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/ko/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/ru/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/zh-hans/System.IO.FileSystem.xml",
+        "ref/netstandard1.3/zh-hant/System.IO.FileSystem.xml",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.io.filesystem.4.0.1.nupkg.sha512",
+        "system.io.filesystem.nuspec"
+      ]
+    },
+    "System.IO.FileSystem.Primitives/4.0.1": {
+      "sha512": "kWkKD203JJKxJeE74p8aF8y4Qc9r9WQx4C0cHzHPrY3fv/L/IhWnyCHaFJ3H1QPOH6A93whlQ2vG5nHlBDvzWQ==",
+      "type": "package",
+      "path": "system.io.filesystem.primitives/4.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net46/System.IO.FileSystem.Primitives.dll",
+        "lib/netstandard1.3/System.IO.FileSystem.Primitives.dll",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net46/System.IO.FileSystem.Primitives.dll",
+        "ref/netstandard1.3/System.IO.FileSystem.Primitives.dll",
+        "ref/netstandard1.3/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/de/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/es/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/fr/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/it/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/ja/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/ko/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/ru/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/zh-hans/System.IO.FileSystem.Primitives.xml",
+        "ref/netstandard1.3/zh-hant/System.IO.FileSystem.Primitives.xml",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.io.filesystem.primitives.4.0.1.nupkg.sha512",
+        "system.io.filesystem.primitives.nuspec"
+      ]
+    },
+    "System.Runtime/4.1.0": {
+      "sha512": "v6c/4Yaa9uWsq+JMhnOFewrYkgdNHNG2eMKuNqRn8P733rNXeRCGvV5FkkjBXn2dbVkPXOsO0xjsEeM1q2zC0g==",
+      "type": "package",
+      "path": "system.runtime/4.1.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/net462/System.Runtime.dll",
+        "lib/portable-net45+win8+wp80+wpa81/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/net462/System.Runtime.dll",
+        "ref/netcore50/System.Runtime.dll",
+        "ref/netcore50/System.Runtime.xml",
+        "ref/netcore50/de/System.Runtime.xml",
+        "ref/netcore50/es/System.Runtime.xml",
+        "ref/netcore50/fr/System.Runtime.xml",
+        "ref/netcore50/it/System.Runtime.xml",
+        "ref/netcore50/ja/System.Runtime.xml",
+        "ref/netcore50/ko/System.Runtime.xml",
+        "ref/netcore50/ru/System.Runtime.xml",
+        "ref/netcore50/zh-hans/System.Runtime.xml",
+        "ref/netcore50/zh-hant/System.Runtime.xml",
+        "ref/netstandard1.0/System.Runtime.dll",
+        "ref/netstandard1.0/System.Runtime.xml",
+        "ref/netstandard1.0/de/System.Runtime.xml",
+        "ref/netstandard1.0/es/System.Runtime.xml",
+        "ref/netstandard1.0/fr/System.Runtime.xml",
+        "ref/netstandard1.0/it/System.Runtime.xml",
+        "ref/netstandard1.0/ja/System.Runtime.xml",
+        "ref/netstandard1.0/ko/System.Runtime.xml",
+        "ref/netstandard1.0/ru/System.Runtime.xml",
+        "ref/netstandard1.0/zh-hans/System.Runtime.xml",
+        "ref/netstandard1.0/zh-hant/System.Runtime.xml",
+        "ref/netstandard1.2/System.Runtime.dll",
+        "ref/netstandard1.2/System.Runtime.xml",
+        "ref/netstandard1.2/de/System.Runtime.xml",
+        "ref/netstandard1.2/es/System.Runtime.xml",
+        "ref/netstandard1.2/fr/System.Runtime.xml",
+        "ref/netstandard1.2/it/System.Runtime.xml",
+        "ref/netstandard1.2/ja/System.Runtime.xml",
+        "ref/netstandard1.2/ko/System.Runtime.xml",
+        "ref/netstandard1.2/ru/System.Runtime.xml",
+        "ref/netstandard1.2/zh-hans/System.Runtime.xml",
+        "ref/netstandard1.2/zh-hant/System.Runtime.xml",
+        "ref/netstandard1.3/System.Runtime.dll",
+        "ref/netstandard1.3/System.Runtime.xml",
+        "ref/netstandard1.3/de/System.Runtime.xml",
+        "ref/netstandard1.3/es/System.Runtime.xml",
+        "ref/netstandard1.3/fr/System.Runtime.xml",
+        "ref/netstandard1.3/it/System.Runtime.xml",
+        "ref/netstandard1.3/ja/System.Runtime.xml",
+        "ref/netstandard1.3/ko/System.Runtime.xml",
+        "ref/netstandard1.3/ru/System.Runtime.xml",
+        "ref/netstandard1.3/zh-hans/System.Runtime.xml",
+        "ref/netstandard1.3/zh-hant/System.Runtime.xml",
+        "ref/netstandard1.5/System.Runtime.dll",
+        "ref/netstandard1.5/System.Runtime.xml",
+        "ref/netstandard1.5/de/System.Runtime.xml",
+        "ref/netstandard1.5/es/System.Runtime.xml",
+        "ref/netstandard1.5/fr/System.Runtime.xml",
+        "ref/netstandard1.5/it/System.Runtime.xml",
+        "ref/netstandard1.5/ja/System.Runtime.xml",
+        "ref/netstandard1.5/ko/System.Runtime.xml",
+        "ref/netstandard1.5/ru/System.Runtime.xml",
+        "ref/netstandard1.5/zh-hans/System.Runtime.xml",
+        "ref/netstandard1.5/zh-hant/System.Runtime.xml",
+        "ref/portable-net45+win8+wp80+wpa81/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.runtime.4.1.0.nupkg.sha512",
+        "system.runtime.nuspec"
+      ]
+    },
+    "System.Runtime.CompilerServices.Unsafe/4.6.0": {
+      "sha512": "HxozeSlipUK7dAroTYwIcGwKDeOVpQnJlpVaOkBz7CM4TsE5b/tKlQBZecTjh6FzcSbxndYaxxpsBMz+wMJeyw==",
+      "type": "package",
+      "path": "system.runtime.compilerservices.unsafe/4.6.0",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "LICENSE.TXT",
+        "THIRD-PARTY-NOTICES.TXT",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netcoreapp2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "lib/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard1.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.dll",
+        "ref/netstandard2.0/System.Runtime.CompilerServices.Unsafe.xml",
+        "system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512",
+        "system.runtime.compilerservices.unsafe.nuspec",
+        "useSharedDesignerContext.txt",
+        "version.txt"
+      ]
+    },
+    "System.Runtime.Handles/4.0.1": {
+      "sha512": "nCJvEKguXEvk2ymk1gqj625vVnlK3/xdGzx0vOKicQkoquaTBJTP13AIYkocSUwHCLNBwUbXTqTWGDxBTWpt7g==",
+      "type": "package",
+      "path": "system.runtime.handles/4.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net46/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net46/_._",
+        "ref/netstandard1.3/System.Runtime.Handles.dll",
+        "ref/netstandard1.3/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/de/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/es/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/fr/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/it/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/ja/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/ko/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/ru/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/zh-hans/System.Runtime.Handles.xml",
+        "ref/netstandard1.3/zh-hant/System.Runtime.Handles.xml",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.runtime.handles.4.0.1.nupkg.sha512",
+        "system.runtime.handles.nuspec"
+      ]
+    },
+    "System.Text.Encoding/4.0.11": {
+      "sha512": "U3gGeMlDZXxCEiY4DwVLSacg+DFWCvoiX+JThA/rvw37Sqrku7sEFeVBBBMBnfB6FeZHsyDx85HlKL19x0HtZA==",
+      "type": "package",
+      "path": "system.text.encoding/4.0.11",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/System.Text.Encoding.dll",
+        "ref/netcore50/System.Text.Encoding.xml",
+        "ref/netcore50/de/System.Text.Encoding.xml",
+        "ref/netcore50/es/System.Text.Encoding.xml",
+        "ref/netcore50/fr/System.Text.Encoding.xml",
+        "ref/netcore50/it/System.Text.Encoding.xml",
+        "ref/netcore50/ja/System.Text.Encoding.xml",
+        "ref/netcore50/ko/System.Text.Encoding.xml",
+        "ref/netcore50/ru/System.Text.Encoding.xml",
+        "ref/netcore50/zh-hans/System.Text.Encoding.xml",
+        "ref/netcore50/zh-hant/System.Text.Encoding.xml",
+        "ref/netstandard1.0/System.Text.Encoding.dll",
+        "ref/netstandard1.0/System.Text.Encoding.xml",
+        "ref/netstandard1.0/de/System.Text.Encoding.xml",
+        "ref/netstandard1.0/es/System.Text.Encoding.xml",
+        "ref/netstandard1.0/fr/System.Text.Encoding.xml",
+        "ref/netstandard1.0/it/System.Text.Encoding.xml",
+        "ref/netstandard1.0/ja/System.Text.Encoding.xml",
+        "ref/netstandard1.0/ko/System.Text.Encoding.xml",
+        "ref/netstandard1.0/ru/System.Text.Encoding.xml",
+        "ref/netstandard1.0/zh-hans/System.Text.Encoding.xml",
+        "ref/netstandard1.0/zh-hant/System.Text.Encoding.xml",
+        "ref/netstandard1.3/System.Text.Encoding.dll",
+        "ref/netstandard1.3/System.Text.Encoding.xml",
+        "ref/netstandard1.3/de/System.Text.Encoding.xml",
+        "ref/netstandard1.3/es/System.Text.Encoding.xml",
+        "ref/netstandard1.3/fr/System.Text.Encoding.xml",
+        "ref/netstandard1.3/it/System.Text.Encoding.xml",
+        "ref/netstandard1.3/ja/System.Text.Encoding.xml",
+        "ref/netstandard1.3/ko/System.Text.Encoding.xml",
+        "ref/netstandard1.3/ru/System.Text.Encoding.xml",
+        "ref/netstandard1.3/zh-hans/System.Text.Encoding.xml",
+        "ref/netstandard1.3/zh-hant/System.Text.Encoding.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.text.encoding.4.0.11.nupkg.sha512",
+        "system.text.encoding.nuspec"
+      ]
+    },
+    "System.Text.Encoding.Extensions/4.0.11": {
+      "sha512": "jtbiTDtvfLYgXn8PTfWI+SiBs51rrmO4AAckx4KR6vFK9Wzf6tI8kcRdsYQNwriUeQ1+CtQbM1W4cMbLXnj/OQ==",
+      "type": "package",
+      "path": "system.text.encoding.extensions/4.0.11",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/System.Text.Encoding.Extensions.dll",
+        "ref/netcore50/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/de/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/es/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/fr/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/it/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/ja/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/ko/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/ru/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/zh-hans/System.Text.Encoding.Extensions.xml",
+        "ref/netcore50/zh-hant/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/System.Text.Encoding.Extensions.dll",
+        "ref/netstandard1.0/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/de/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/es/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/fr/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/it/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/ja/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/ko/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/ru/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/zh-hans/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.0/zh-hant/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/System.Text.Encoding.Extensions.dll",
+        "ref/netstandard1.3/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/de/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/es/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/fr/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/it/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/ja/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/ko/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/ru/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/zh-hans/System.Text.Encoding.Extensions.xml",
+        "ref/netstandard1.3/zh-hant/System.Text.Encoding.Extensions.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.text.encoding.extensions.4.0.11.nupkg.sha512",
+        "system.text.encoding.extensions.nuspec"
+      ]
+    },
+    "System.Threading.Tasks/4.0.11": {
+      "sha512": "k1S4Gc6IGwtHGT8188RSeGaX86Qw/wnrgNLshJvsdNUOPP9etMmo8S07c+UlOAx4K/xLuN9ivA1bD0LVurtIxQ==",
+      "type": "package",
+      "path": "system.threading.tasks/4.0.11",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net45/_._",
+        "lib/portable-net45+win8+wp8+wpa81/_._",
+        "lib/win8/_._",
+        "lib/wp80/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net45/_._",
+        "ref/netcore50/System.Threading.Tasks.dll",
+        "ref/netcore50/System.Threading.Tasks.xml",
+        "ref/netcore50/de/System.Threading.Tasks.xml",
+        "ref/netcore50/es/System.Threading.Tasks.xml",
+        "ref/netcore50/fr/System.Threading.Tasks.xml",
+        "ref/netcore50/it/System.Threading.Tasks.xml",
+        "ref/netcore50/ja/System.Threading.Tasks.xml",
+        "ref/netcore50/ko/System.Threading.Tasks.xml",
+        "ref/netcore50/ru/System.Threading.Tasks.xml",
+        "ref/netcore50/zh-hans/System.Threading.Tasks.xml",
+        "ref/netcore50/zh-hant/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/System.Threading.Tasks.dll",
+        "ref/netstandard1.0/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/de/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/es/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/fr/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/it/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/ja/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/ko/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/ru/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/zh-hans/System.Threading.Tasks.xml",
+        "ref/netstandard1.0/zh-hant/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/System.Threading.Tasks.dll",
+        "ref/netstandard1.3/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/de/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/es/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/fr/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/it/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/ja/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/ko/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/ru/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/zh-hans/System.Threading.Tasks.xml",
+        "ref/netstandard1.3/zh-hant/System.Threading.Tasks.xml",
+        "ref/portable-net45+win8+wp8+wpa81/_._",
+        "ref/win8/_._",
+        "ref/wp80/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.threading.tasks.4.0.11.nupkg.sha512",
+        "system.threading.tasks.nuspec"
+      ]
+    },
+    "System.Threading.Timer/4.0.1": {
+      "sha512": "saGfUV8uqVW6LeURiqxcGhZ24PzuRNaUBtbhVeuUAvky1naH395A/1nY0P2bWvrw/BreRtIB/EzTDkGBpqCwEw==",
+      "type": "package",
+      "path": "system.threading.timer/4.0.1",
+      "files": [
+        ".nupkg.metadata",
+        ".signature.p7s",
+        "ThirdPartyNotices.txt",
+        "dotnet_library_license.txt",
+        "lib/MonoAndroid10/_._",
+        "lib/MonoTouch10/_._",
+        "lib/net451/_._",
+        "lib/portable-net451+win81+wpa81/_._",
+        "lib/win81/_._",
+        "lib/wpa81/_._",
+        "lib/xamarinios10/_._",
+        "lib/xamarinmac20/_._",
+        "lib/xamarintvos10/_._",
+        "lib/xamarinwatchos10/_._",
+        "ref/MonoAndroid10/_._",
+        "ref/MonoTouch10/_._",
+        "ref/net451/_._",
+        "ref/netcore50/System.Threading.Timer.dll",
+        "ref/netcore50/System.Threading.Timer.xml",
+        "ref/netcore50/de/System.Threading.Timer.xml",
+        "ref/netcore50/es/System.Threading.Timer.xml",
+        "ref/netcore50/fr/System.Threading.Timer.xml",
+        "ref/netcore50/it/System.Threading.Timer.xml",
+        "ref/netcore50/ja/System.Threading.Timer.xml",
+        "ref/netcore50/ko/System.Threading.Timer.xml",
+        "ref/netcore50/ru/System.Threading.Timer.xml",
+        "ref/netcore50/zh-hans/System.Threading.Timer.xml",
+        "ref/netcore50/zh-hant/System.Threading.Timer.xml",
+        "ref/netstandard1.2/System.Threading.Timer.dll",
+        "ref/netstandard1.2/System.Threading.Timer.xml",
+        "ref/netstandard1.2/de/System.Threading.Timer.xml",
+        "ref/netstandard1.2/es/System.Threading.Timer.xml",
+        "ref/netstandard1.2/fr/System.Threading.Timer.xml",
+        "ref/netstandard1.2/it/System.Threading.Timer.xml",
+        "ref/netstandard1.2/ja/System.Threading.Timer.xml",
+        "ref/netstandard1.2/ko/System.Threading.Timer.xml",
+        "ref/netstandard1.2/ru/System.Threading.Timer.xml",
+        "ref/netstandard1.2/zh-hans/System.Threading.Timer.xml",
+        "ref/netstandard1.2/zh-hant/System.Threading.Timer.xml",
+        "ref/portable-net451+win81+wpa81/_._",
+        "ref/win81/_._",
+        "ref/wpa81/_._",
+        "ref/xamarinios10/_._",
+        "ref/xamarinmac20/_._",
+        "ref/xamarintvos10/_._",
+        "ref/xamarinwatchos10/_._",
+        "system.threading.timer.4.0.1.nupkg.sha512",
+        "system.threading.timer.nuspec"
+      ]
+    },
+    "SavvyDB/1.0.0": {
+      "type": "project",
+      "path": "../SavvyDB/SavvyDB.csproj",
+      "msbuildProject": "../SavvyDB/SavvyDB.csproj"
+    },
+    "SavvyLib/1.0.0": {
+      "type": "project",
+      "path": "../SavvyLib/SavvyLib.csproj",
+      "msbuildProject": "../SavvyLib/SavvyLib.csproj"
+    }
+  },
+  "projectFileDependencyGroups": {
+    ".NETCoreApp,Version=v3.1": [
+      "Microsoft.EntityFrameworkCore.Design >= 3.1.9",
+      "Microsoft.EntityFrameworkCore.Tools >= 3.1.9",
+      "Microsoft.Extensions.Configuration.Json >= 3.1.9",
+      "Npgsql.EntityFrameworkCore.PostgreSQL >= 3.1.4",
+      "SavvyDB >= 1.0.0",
+      "SavvyLib >= 1.0.0",
+      "Serilog >= 2.10.0",
+      "Serilog.Sinks.File >= 4.1.0"
+    ]
+  },
+  "packageFolders": {
+    "C:\\Users\\Ckat\\.nuget\\packages\\": {}
+  },
+  "project": {
+    "version": "1.0.0",
+    "restore": {
+      "projectUniqueName": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj",
+      "projectName": "SavvyUI",
+      "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj",
+      "packagesPath": "C:\\Users\\Ckat\\.nuget\\packages\\",
+      "outputPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\obj\\",
+      "projectStyle": "PackageReference",
+      "configFilePaths": [
+        "C:\\Users\\Ckat\\AppData\\Roaming\\NuGet\\NuGet.Config",
+        "C:\\Program Files (x86)\\NuGet\\Config\\Microsoft.VisualStudio.Offline.config"
+      ],
+      "originalTargetFrameworks": [
+        "netcoreapp3.1"
+      ],
+      "sources": {
+        "C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\": {},
+        "https://api.nuget.org/v3/index.json": {}
+      },
+      "frameworks": {
+        "netcoreapp3.1": {
+          "projectReferences": {
+            "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj": {
+              "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyDB\\SavvyDB.csproj"
+            },
+            "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\Savvylib\\SavvyLib.csproj": {
+              "projectPath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\Savvylib\\SavvyLib.csproj"
+            }
+          }
+        }
+      },
+      "warningProperties": {
+        "warnAsError": [
+          "NU1605"
+        ]
+      }
+    },
+    "frameworks": {
+      "netcoreapp3.1": {
+        "dependencies": {
+          "Microsoft.EntityFrameworkCore.Design": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.EntityFrameworkCore.Tools": {
+            "include": "Runtime, Build, Native, ContentFiles, Analyzers, BuildTransitive",
+            "suppressParent": "All",
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Microsoft.Extensions.Configuration.Json": {
+            "target": "Package",
+            "version": "[3.1.9, )"
+          },
+          "Npgsql.EntityFrameworkCore.PostgreSQL": {
+            "target": "Package",
+            "version": "[3.1.4, )"
+          },
+          "Serilog": {
+            "target": "Package",
+            "version": "[2.10.0, )"
+          },
+          "Serilog.Sinks.File": {
+            "target": "Package",
+            "version": "[4.1.0, )"
+          }
+        },
+        "imports": [
+          "net461",
+          "net462",
+          "net47",
+          "net471",
+          "net472",
+          "net48"
+        ],
+        "assetTargetFallback": true,
+        "warn": true,
+        "frameworkReferences": {
+          "Microsoft.NETCore.App": {
+            "privateAssets": "all"
+          }
+        },
+        "runtimeIdentifierGraphPath": "C:\\Program Files\\dotnet\\sdk\\3.1.403\\RuntimeIdentifierGraph.json"
+      }
+    }
+  }
+}
\ No newline at end of file
diff --git a/SavvyUI/obj/project.nuget.cache b/SavvyUI/obj/project.nuget.cache
new file mode 100644
index 0000000..3120000
--- /dev/null
+++ b/SavvyUI/obj/project.nuget.cache
@@ -0,0 +1,53 @@
+{
+  "version": 2,
+  "dgSpecHash": "YAryMZWONTqxkyaNuK0/m7XKXTyUcRR4J0SXwKccNIurZoBSoeGyclxqzy1hyLKuKGLq6wgoMnHhBntmpvWOSw==",
+  "success": true,
+  "projectFilePath": "C:\\Users\\Ckat\\Documents\\Work\\ChiShantel-P1\\SavvyUI\\SavvyUI.csproj",
+  "expectedPackageFiles": [
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.asyncinterfaces\\1.1.1\\microsoft.bcl.asyncinterfaces.1.1.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.bcl.hashcode\\1.1.0\\microsoft.bcl.hashcode.1.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.csharp\\4.7.0\\microsoft.csharp.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore\\3.1.9\\microsoft.entityframeworkcore.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.abstractions\\3.1.9\\microsoft.entityframeworkcore.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.analyzers\\3.1.9\\microsoft.entityframeworkcore.analyzers.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.design\\3.1.9\\microsoft.entityframeworkcore.design.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.relational\\3.1.9\\microsoft.entityframeworkcore.relational.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.entityframeworkcore.tools\\3.1.9\\microsoft.entityframeworkcore.tools.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.abstractions\\3.1.9\\microsoft.extensions.caching.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.caching.memory\\3.1.9\\microsoft.extensions.caching.memory.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration\\3.1.9\\microsoft.extensions.configuration.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.abstractions\\3.1.9\\microsoft.extensions.configuration.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.binder\\3.1.9\\microsoft.extensions.configuration.binder.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.fileextensions\\3.1.9\\microsoft.extensions.configuration.fileextensions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.configuration.json\\3.1.9\\microsoft.extensions.configuration.json.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection\\3.1.9\\microsoft.extensions.dependencyinjection.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.dependencyinjection.abstractions\\3.1.9\\microsoft.extensions.dependencyinjection.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.abstractions\\3.1.9\\microsoft.extensions.fileproviders.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.fileproviders.physical\\3.1.9\\microsoft.extensions.fileproviders.physical.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.filesystemglobbing\\3.1.9\\microsoft.extensions.filesystemglobbing.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging\\3.1.9\\microsoft.extensions.logging.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.logging.abstractions\\3.1.9\\microsoft.extensions.logging.abstractions.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.options\\3.1.9\\microsoft.extensions.options.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.extensions.primitives\\3.1.9\\microsoft.extensions.primitives.3.1.9.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.netcore.platforms\\1.0.1\\microsoft.netcore.platforms.1.0.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\microsoft.netcore.targets\\1.0.1\\microsoft.netcore.targets.1.0.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql\\4.1.3.1\\npgsql.4.1.3.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\npgsql.entityframeworkcore.postgresql\\3.1.4\\npgsql.entityframeworkcore.postgresql.3.1.4.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\serilog\\2.10.0\\serilog.2.10.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\serilog.sinks.file\\4.1.0\\serilog.sinks.file.4.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.collections.immutable\\1.7.1\\system.collections.immutable.1.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.componentmodel.annotations\\4.7.0\\system.componentmodel.annotations.4.7.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.diagnostics.diagnosticsource\\4.7.1\\system.diagnostics.diagnosticsource.4.7.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.io\\4.1.0\\system.io.4.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.io.filesystem\\4.0.1\\system.io.filesystem.4.0.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.io.filesystem.primitives\\4.0.1\\system.io.filesystem.primitives.4.0.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.runtime\\4.1.0\\system.runtime.4.1.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.runtime.compilerservices.unsafe\\4.6.0\\system.runtime.compilerservices.unsafe.4.6.0.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.runtime.handles\\4.0.1\\system.runtime.handles.4.0.1.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.text.encoding\\4.0.11\\system.text.encoding.4.0.11.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.text.encoding.extensions\\4.0.11\\system.text.encoding.extensions.4.0.11.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.threading.tasks\\4.0.11\\system.threading.tasks.4.0.11.nupkg.sha512",
+    "C:\\Users\\Ckat\\.nuget\\packages\\system.threading.timer\\4.0.1\\system.threading.timer.4.0.1.nupkg.sha512"
+  ],
+  "logs": []
+}
\ No newline at end of file
diff --git a/appsettings.json b/appsettings.json
new file mode 100644
index 0000000..0247796
--- /dev/null
+++ b/appsettings.json
@@ -0,0 +1,5 @@
+{
+    "connectionStrings":{
+        "SavvyDB": "Host=lallah.db.elephantsql.com;Port=5432;Database=vxpvkdsg;Username=vxpvkdsg;Password=8pVOgme7EdLE2PdD4G5y6XHca1dornSl;"
+    }
+}
\ No newline at end of file
